head	1.3;
access;
symbols
	REL_1_12_1:1.3
	REL_1_11_6:1.3
	REL_1_11_4:1.3
	REL_1_11_0:1.3
	TG_CPPUNIT_NO_STREAM_AFTER:1.3
	TG_CPPUNIT_NO_STREAM_BEFORE:1.3
	REL_1_10_2:1.3
	REL_1_10_0:1.3
	REL_1_9_14:1.3
	REL_1_9_12:1.3
	BRANCH_1_9_12:1.3.0.2
	TG_BRANCH_1_9_12:1.3
	TG_BEFORE_HPUX_PLUGIN:1.3
	TG_BEFORE_SUN4_PORT:1.3
	REL_1_9_10:1.3
	TG_AFTER_REMOVE_NOTEQUAL_EXCEPTION:1.2
	TG_BEFORE_REMOVE_NOTEQUAL_EXCEPTION:1.2
	REL_1_9_6:1.2
	REL_1_9_4:1.2
	REL_1_9_0:1.2
	REL_1_8_0:1.1
	REL_1_7_8:1.1
	REL_1_7_3:1.1
	REL_1_7_1:1.1;
locks; strict;
comment	@// @;


1.3
date	2002.07.13.10.33.50;	author blep;	state Exp;
branches;
next	1.2;

1.2
date	2002.04.12.22.34.37;	author blep;	state Exp;
branches;
next	1.1;

1.1
date	2001.10.14.12.23.31;	author blep;	state Exp;
branches;
next	;


desc
@@


1.3
log
@* include/cppunit/ui/text/TestRunner.h:
* src/cppunit/TextTestRunner.cpp: Renamed TextUi::TestRunner
  TextTestRunner and moved it to the CppUnit namespace. Added
  a deprecated typedef for compatibility with previous version.

* include/cppunit/ui/text/TextTestRunner.h: added.

* include/cppunit/ui/mfc/TestRunner.h:
* src/cppunit/msvc6/testrunner/TestRunner.cpp: Renamed MfcUi::TestRunner
  MfcTestRunner. Added deprecated typedef for compatibility. Renamed
  TestRunner.cpp to MfcTestRunner.cpp.

* include/cppunit/ui/mfc/MfcTestRunner.h: added.

* include/cppunit/ui/qt/TestRunner.h:
* src/qttestrunner/TestRunner.cpp: renamed QtUi::TestRunner QtTestRunner
  and moved it to CppUnit namespace. Added a deprecated typedef for
  compatibility. Renamed TestRunner.cpp to QtTestRunner.cpp.

* include/cppunit/ui/qt/TestRunner.h:
* src/qttestrunner/TestRunner.h: Moved TestRunner to CppUnit namespace
  and renamed it QtTestRunner. Added deprecated typedef for compatibility.

* include/cppunit/Asserter.h:
* src/cppunit/Asserter.cpp: changed namespace Asserter to a struct and
  made all methods static.

* include/cppunit/extensions/HelperMacros.h:
* include/cppunit/extensions/SourceLine.h:
* include/cppunit/extensions/TestAssert.h:
* include/cppunit/extensions/TestPlugIn.h:
* include/cppunit/Portability.h: changed CPPUNIT_NS(symbol) to a
  symbol macro that expand either to CppUnit or nothing. The symbol is
  no longer a parameter.

* include/cppunit/portability/CppUnitVector.h:
* include/cppunit/portability/CppUnitDeque.h:
* include/cppunit/portability/CppUnitMap.h: added. STL Wrapper for
  compilers that do not support template default argumenent and need
  the allocator to be passed when instantiating STL container.

* examples/cppunittest/*.h:
* examples/cppunittest/*.cpp:
* src/msvc6/testrunner/*.h:
* src/msvc6/testrunner/*.cpp:
* src/msvc6/testpluginrunner/*.h:
* src/msvc6/testpluginrunner/*.cpp:
* src/qttestrunner/*.h:
* src/qttestrunner/*.cpp: replaced occurence of CppUnit:: by CPPUNIT_NS.

* src/cppunit/TestSuite.h:
replaced occurence of std::vector by CppUnitVector.
@
text
@#include <cppunit/Test.h>
#include <qlistview.h>
#include <qmessagebox.h>
#include "TestBrowserDlgImpl.h"
#include "TestListViewItem.h"


/* 
 *  Constructs a TestBrowser which is a child of 'parent', with the 
 *  name 'name' and widget flags set to 'f' 
 *
 *  The dialog will by default be modeless, unless you set 'modal' to
 *  TRUE to construct a modal dialog.
 */
TestBrowser::TestBrowser( QWidget* parent,  const char* name, bool modal, WFlags fl )
    : TestBrowserBase( parent, name, modal, fl ),
    _selectedTest( NULL )
{
  _listTests->setRootIsDecorated( TRUE );
}

/*  
 *  Destroys the object and frees any allocated resources
 */
TestBrowser::~TestBrowser()
{
    // no need to delete child widgets, Qt does it all for us
}


void 
TestBrowser::setRootTest( CPPUNIT_NS::Test *rootTest )
{
  QListViewItem *dummyRoot = new QListViewItem( _listTests );

  insertItemFor( rootTest, dummyRoot );
  
  dummyRoot->firstChild()->moveItem( dummyRoot );
  delete dummyRoot;

  _listTests->firstChild()->setOpen( TRUE );
  _listTests->triggerUpdate();
}


void 
TestBrowser::insertItemFor( CPPUNIT_NS::Test *test,
                            QListViewItem *parentItem )
{
  QListViewItem *item = new TestListViewItem( test, parentItem );
  QString testName = QString::fromLatin1( test->getName().c_str() );
  item->setText( 0, testName );
  if ( test->getChildTestCount() > 0  ||    // suite with test
       test->countTestCases() == 0 )        // empty suite
  {
    for ( int index =0; index < test->getChildTestCount(); ++index )
      insertItemFor( test->getChildTestAt( index ), item );
  }
}


CPPUNIT_NS::Test *
TestBrowser::selectedTest()
{
  return _selectedTest;
}


void 
TestBrowser::accept()
{
  TestListViewItem *item = (TestListViewItem *)_listTests->selectedItem();
  if ( item == NULL )
  {
    QMessageBox::information( this, tr("Selected test"),
                              tr( "You must select a test." ) );
    return;
  }

  _selectedTest = item->test();

  TestBrowserBase::accept();
}
@


1.2
log
@* include/cppunit/CompilerOutputter.h:
* src/cppunit/CompilerOutputter.h: deprecated defaultOuputter(). Added
  setLocationFormat() and format specifiation in constructor. A string that
  represent the location format is used to output the location. Default format
  is defined by CPPUNIT_COMPILER_LOCATION_FORMAT.

* include/cppunit/config-msvc6.h:
* include/cppunit/Portability.h: added CPPUNIT_COMPILER_LOCATION_FORMAT. Use
  gcc location format if VC++ is not detected.

* include/cppunit/Test.h: fixed documentation.

* include/cppunit/TestListener.h: added startSuite() and endSuite()
  callbacks. Added new example to documentation.

* include/cppunit/TestResult.h:
* src/cppunit/TestResult.cpp:
* include/cppunit/TestComposite.h:
* src/cppunit/TestComposite.cpp: Updated to inform the listeners.

* src/qttestrunner/TestBrowserDlgImpl.cpp: used Test new composite interface
  instead of RTTI to explore the test hierarchy.

* examples/cppunittest/MockTestListener.h:
* examples/cppunittest/MockTestListener.cpp: updated,added support for
  startSuite() and endSuite().

* examples/cppunittest/TestResultTest.h:
* examples/cppunittest/TestResultTest.cpp: added tests for startSuite()
  and endSuite().
@
text
@d32 1
a32 1
TestBrowser::setRootTest( CppUnit::Test *rootTest )
d47 1
a47 1
TestBrowser::insertItemFor( CppUnit::Test *test,
d62 1
a62 1
CppUnit::Test *
@


1.1
log
@* include/cppunitui/* : added, Qt TestRunner.

* examples/qt/* : added, example showing the use of Qt TestRunner.

* src/qttestrunner : added, source of the Qt TestRunner DLL.
@
text
@d1 1
a1 1
#include <cppunit/TestSuite.h>
a49 1
  CppUnit::TestSuite *suite = dynamic_cast<CppUnit::TestSuite *>(test);
d53 2
a54 1
  if ( suite != NULL )
d56 2
a57 2
    for ( int index =0; index < suite->getTests().size(); ++index )
      insertItemFor( suite->getTests()[index], item );
@

