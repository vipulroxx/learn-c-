head	1.1;
access;
symbols
	REL_1_12_1:1.1
	REL_1_11_6:1.1
	REL_1_11_4:1.1
	REL_1_11_0:1.1
	TG_CPPUNIT_NO_STREAM_AFTER:1.1
	TG_CPPUNIT_NO_STREAM_BEFORE:1.1
	REL_1_10_2:1.1
	REL_1_10_0:1.1
	REL_1_9_14:1.1
	REL_1_9_12:1.1
	BRANCH_1_9_12:1.1.0.2
	TG_BRANCH_1_9_12:1.1
	TG_BEFORE_HPUX_PLUGIN:1.1
	TG_BEFORE_SUN4_PORT:1.1
	REL_1_9_10:1.1
	TG_AFTER_REMOVE_NOTEQUAL_EXCEPTION:1.1
	TG_BEFORE_REMOVE_NOTEQUAL_EXCEPTION:1.1
	REL_1_9_6:1.1
	REL_1_9_4:1.1
	REL_1_9_0:1.1
	REL_1_8_0:1.1
	REL_1_7_8:1.1
	REL_1_7_3:1.1
	REL_1_7_1:1.1;
locks; strict;
comment	@ * @;


1.1
date	2001.10.14.12.23.31;	author blep;	state Exp;
branches;
next	;


desc
@@


1.1
log
@* include/cppunitui/* : added, Qt TestRunner.

* examples/qt/* : added, example showing the use of Qt TestRunner.

* src/qttestrunner : added, source of the Qt TestRunner DLL.
@
text
@// //////////////////////////////////////////////////////////////////////////
// Header file TestRunnerThreadEvent.h for class TestRunnerThreadEvent
// (c)Copyright 2000, Baptiste Lepilleur.
// Created: 2001/09/21
// //////////////////////////////////////////////////////////////////////////
#ifndef TESTRUNNERTHREADEVENT_H
#define TESTRUNNERTHREADEVENT_H

#include <qevent.h>
class TestRunnerModelThreadInterface;

/*! \class TestRunnerThreadEvent
 * \brief This class represents an event send by the test runner thread.
 */
class TestRunnerThreadEvent : public QCustomEvent
{
public:
  /*! Constructs a TestRunnerThreadEvent object.
   */
  TestRunnerThreadEvent();

  /// Destructor.
  virtual ~TestRunnerThreadEvent();

  virtual void process( TestRunnerModelThreadInterface *target ) =0;

private:
  /// Prevents the use of the copy constructor.
  TestRunnerThreadEvent( const TestRunnerThreadEvent &copy );

  /// Prevents the use of the copy operator.
  void operator =( const TestRunnerThreadEvent &copy );
};



#endif  // TESTRUNNERTHREADEVENT_H
@
