head	1.3;
access;
symbols
	REL_1_12_1:1.3
	REL_1_11_6:1.3
	REL_1_11_4:1.3
	REL_1_11_0:1.3
	TG_CPPUNIT_NO_STREAM_AFTER:1.3
	TG_CPPUNIT_NO_STREAM_BEFORE:1.3
	REL_1_10_2:1.3
	REL_1_10_0:1.3
	REL_1_9_14:1.3
	REL_1_9_12:1.3
	BRANCH_1_9_12:1.3.0.2
	TG_BRANCH_1_9_12:1.3
	TG_BEFORE_HPUX_PLUGIN:1.3
	TG_BEFORE_SUN4_PORT:1.3
	REL_1_9_10:1.3
	TG_AFTER_REMOVE_NOTEQUAL_EXCEPTION:1.2
	TG_BEFORE_REMOVE_NOTEQUAL_EXCEPTION:1.2
	REL_1_9_6:1.2
	REL_1_9_4:1.2
	REL_1_9_0:1.2
	REL_1_8_0:1.2
	REL_1_7_8:1.2
	REL_1_7_3:1.2
	REL_1_7_1:1.1
	REL_1_6_2:1.1
	BRANCH_1_6:1.1.0.2
	REL_1_6_1:1.1
	REL_1_6_0:1.1
	REL_1_5_5:1.1;
locks; strict;
comment	@ * @;


1.3
date	2002.06.13.23.25.55;	author blep;	state Exp;
branches;
next	1.2;

1.2
date	2001.10.24.20.03.29;	author blep;	state Exp;
branches;
next	1.1;

1.1
date	2001.04.28.14.27.24;	author bastiaan;	state Exp;
branches;
next	;


desc
@@


1.3
log
@* src/cppunit/CompilerOutputter.cpp: fixed bug #549762 (line wrap).

* src/msvc6/testrunner/DynamicWindow/*: added. Dynamic Window library
  from Hans Bühler (hans.buehler@@topmail.de) to resize window.

* src/msvc6/testrunner/TestRunnerModel.h:
* src/msvc6/testrunner/TestRunnerModel.cpp: removed dialog bounds from
  settings. Added public registry keys for cppunit, main dialog, and
  browse dialog.

* src/msvc6/testrunner/TreeHierarchyDlg.h:
* src/msvc6/testrunner/TreeHierarchyDlg.cpp: dialog is now resizable.
  Window placement is stored and restored.

* src/msvc6/testrunner/TestRunnerDlg.h:
* src/msvc6/testrunner/TestRunnerDlg.cpp: replaced dialog resizing code
  by usage of Hans Bühler's Dynamic Window library. Dialog placement
  is stored/restored by that library. ProgressBar is now a child window.
  Added edit field to see the details of the failure. List on show
  the short description of the failure.

* src/msvc6/testrunner/ProgressBar.h:
* src/msvc6/testrunner/ProgressBar.cpp: is now a CWnd.

* src/msvc6/testrunner/TestRunner.rc: named all static fill ID for resizing.
  Added an invisble static field for progress bar placement.
@
text
@#if !defined(AFX_PROGRESSBAR_H__F2CB2DBB_467B_4978_829B_CAD101EA4B8A__INCLUDED_)
#define AFX_PROGRESSBAR_H__F2CB2DBB_467B_4978_829B_CAD101EA4B8A__INCLUDED_

#if _MSC_VER > 1000
#pragma once
#endif // _MSC_VER > 1000



class ProgressBar : public CWnd
{
public:
	ProgressBar();
	virtual ~ProgressBar();

  void step( bool successful );

  int scale( int value );

  void reset();

  void start( int total );

	// ClassWizard generated virtual function overrides
	//{{AFX_VIRTUAL(ProgressBar)
	//}}AFX_VIRTUAL

protected:
	//{{AFX_MSG(ProgressBar)
	afx_msg void OnPaint();
	afx_msg void OnSize(UINT nType, int cx, int cy);
	afx_msg BOOL OnEraseBkgnd(CDC* pDC);
	//}}AFX_MSG
	DECLARE_MESSAGE_MAP();


protected:
  void paint( CDC &dc );

  void paintBackground( CDC &dc );

  void paintStatus( CDC &dc );

  COLORREF getStatusColor();

  void paintStep( int startX, 
                  int endX );

private:
  CRect m_bounds;
  bool m_error;
  int m_total;
  int m_progress;
  int m_progressX;
};



// Get the current color
inline COLORREF 
ProgressBar::getStatusColor ()
{ 
  return m_error ? RGB (255, 0, 0) : 
                   RGB (0, 255, 0); 
}


//{{AFX_INSERT_LOCATION}}
// Microsoft Visual C++ will insert additional declarations immediately before the previous line.

#endif // !defined(AFX_PROGRESSBAR_H__F2CB2DBB_467B_4978_829B_CAD101EA4B8A__INCLUDED_)
@


1.2
log
@* examples/msvc6/CppUnitTestApp/CppUnitTestApp.dsp:
* examples/msvc6/HostApp/HostApp.dsp: use custom file build instead
of post-build/pre-link step to copy the TestRunner DLL to the
Release/Debug directory.

* src/msvc6/ProgressBar.cpp:
* src/msvc6/ProgressBar.h:
* src/msvc6/TestRunner.rc:
* src/msvc6/TestRunnerDlg.cpp:
* src/msvc6/TestRunnerDlg.h:
* src/msvc6/testRunner.dsp:
* src/msvc6/TestRunnerModel.cpp:
* src/msvc6/TestRunnerModel.h: included Gigi Sayfan (gigi@@morphink.com)
patch. The dialog can now be resized, and list view columns and dialog
sizes are saved.

* src/msvc6/ProgressBar.cpp:
* src/msvc6/ProgressBar.h: Minor refactoring.

* THANKS: added Gigi Sayfan to the list.
@
text
@d1 2
a2 2
#ifndef PROGRESSBAR_H
#define PROGRESSBAR_H
d4 3
a6 2
/* A Simple ProgressBar for test execution display
 */
d8 3
a10 1
class ProgressBar
d13 2
a14 2
  ProgressBar( CWnd *baseWindow, 
               CRect& bounds );
d17 1
a17 1
  void paint( CDC &dc );
d19 1
d21 1
d23 13
a35 1
  void setWidth( int width );
d38 2
d41 1
d43 1
d45 1
d49 1
a49 1
  CWnd *m_baseWindow;
a50 1

d58 1
d68 4
a71 1
#endif@


1.1
log
@Merged msvc6 specific TestRunner and example adapted from Michael Feathers
version by Baptiste Lepilleur.
@
text
@a0 2


d10 2
a11 1
                ProgressBar     (CWnd *baseWindow, CRect& bounds);
d13 6
a18 5
    void        step            (bool successful);
    void        paint           (CDC& dc);
    int         scale           (int value);
    void        reset           ();
    void        start           (int total);
d21 13
a33 13

    void        paintBackground (CDC& dc);
    void        paintStatus     (CDC& dc);
    COLORREF    getStatusColor  ();
    void        paintStep       (int startX, int endX);

    CWnd        *m_baseWindow;
    CRect       m_bounds;

    bool        m_error;
    int         m_total;
    int         m_progress;
    int         m_progressX;
a36 8

// Construct a ProgressBar
inline ProgressBar::ProgressBar (CWnd *baseWindow, CRect& bounds)
: m_baseWindow (baseWindow), m_bounds (bounds), m_error (false), 
m_total (0), m_progress (0), m_progressX (0)
{}


d38 6
a43 3
inline COLORREF ProgressBar::getStatusColor ()
{ return m_error ? RGB (255, 0, 0) : RGB (0, 255, 0); }

@

