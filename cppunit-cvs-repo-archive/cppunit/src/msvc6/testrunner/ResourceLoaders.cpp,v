head	1.2;
access;
symbols
	REL_1_12_1:1.2
	REL_1_11_6:1.2
	REL_1_11_4:1.2
	REL_1_11_0:1.2
	TG_CPPUNIT_NO_STREAM_AFTER:1.2
	TG_CPPUNIT_NO_STREAM_BEFORE:1.2
	REL_1_10_2:1.2
	REL_1_10_0:1.1
	REL_1_9_14:1.1
	REL_1_9_12:1.1
	BRANCH_1_9_12:1.1.0.2
	TG_BRANCH_1_9_12:1.1
	TG_BEFORE_HPUX_PLUGIN:1.1
	TG_BEFORE_SUN4_PORT:1.1
	REL_1_9_10:1.1;
locks; strict;
comment	@// @;


1.2
date	2004.06.18.11.20.42;	author blep;	state Exp;
branches;
next	1.1;

1.1
date	2002.07.12.17.03.57;	author blep;	state Exp;
branches;
next	;


desc
@@


1.2
log
@* added DEBUG_NEW for memory leaks tracking
@
text
@#include "stdafx.h"

#include "ResourceLoaders.h"

#ifdef _DEBUG
#define new DEBUG_NEW
#undef THIS_FILE
static char THIS_FILE[] = __FILE__;
#endif



extern HINSTANCE g_testRunnerResource;

CString loadCString(UINT stringId)
{
  CString string;
  
  HRSRC stringRes = ::FindResource( g_testRunnerResource, 
                                   MAKEINTRESOURCE( (stringId>>4) + 1),
                                   RT_STRING );
  if ( stringRes )
  {
    int stringLen = ::SizeofResource( g_testRunnerResource, 
                                      stringRes) / sizeof(TCHAR);
    if (stringLen > 0)
    {
      LPTSTR stringBuffer = string.GetBuffer( stringLen+2 );
      int realStringLen = ::LoadString( g_testRunnerResource, 
                                        stringId, 
                                        stringBuffer, 
                                        (stringLen+1)*2 );
      string.ReleaseBuffer( realStringLen );

      ASSERT(realStringLen > 0);
    }
  }

  ASSERT( !string.IsEmpty() );
  return string;
}

@


1.1
log
@* added missing src/msvc6/testrunner/ResourceLoaders.h/.cpp.
@
text
@d5 8
@

