head	1.6;
access;
symbols
	TG_BEFORE_REMOVE_NOTEQUAL_EXCEPTION:1.5
	REL_1_9_6:1.4
	REL_1_9_4:1.4
	REL_1_9_0:1.4
	REL_1_8_0:1.4
	REL_1_7_8:1.4
	REL_1_7_3:1.4
	REL_1_7_1:1.4
	REL_1_6_2:1.3
	BRANCH_1_6:1.3.0.2
	REL_1_6_1:1.3
	REL_1_6_0:1.3;
locks; strict;
comment	@// @;


1.6
date	2002.06.13.18.17.42;	author blep;	state dead;
branches;
next	1.5;

1.5
date	2002.06.13.15.31.01;	author blep;	state Exp;
branches;
next	1.4;

1.4
date	2001.10.05.22.27.14;	author blep;	state Exp;
branches;
next	1.3;

1.3
date	2001.07.12.16.49.13;	author smr99;	state Exp;
branches;
next	1.2;

1.2
date	2001.06.12.06.59.26;	author blep;	state Exp;
branches;
next	1.1;

1.1
date	2001.06.11.19.59.15;	author blep;	state Exp;
branches;
next	;


desc
@@


1.6
log
@* include/cppunit/NotEqualException.h:
* src/cppunit/NotEqualException.cpp: removed.

* include/cppunit/Exception.h:
* src/cppunit/Exception.cpp: removed 'type' related stuffs.

* include/cppunit/TextTestResult.h:
* src/cppunit/TextTestResult.cpp: delegate printing to TextOutputter.

* examples/simple/ExampleTestCase.h:
* examples/simple/ExampleTestCase.cpp: reindented.

* src/qttestrunner/build:
* src/qttestrunner/qttestrunner.pro:
* src/qttestrunner/TestBrowserDlgImpl.h:
* src/qttestrunner/TestRunnerModel.h: applied Thomas Neidhart's patch,
  'Some minor fixes to compile QTTestrunner under Linux.'.
@
text
@#include <cppunit/NotEqualException.h>

namespace CppUnit {


NotEqualException::NotEqualException( std::string expected,
                                      std::string actual, 
                                      SourceLine sourceLine ,
                                      std::string additionalMessage ) :
    Exception( Message( "equality assertion failed",
                        "Expected: " + expected,
                        "Actual  : " + actual ),
               sourceLine),
    m_expected( expected ),
    m_actual( actual ),
    m_additionalMessage( additionalMessage )
{
  if ( !m_additionalMessage.empty() )
    m_message.addDetail( m_additionalMessage );
}


#ifdef CPPUNIT_ENABLE_SOURCELINE_DEPRECATED
/*!
 * \deprecated Use other constructor instead.
 */
NotEqualException::NotEqualException( std::string expected,
                                      std::string actual,
                                      long lineNumber, 
                                      std::string fileName ) : 
    Exception( Message( "equality assertion failed",
                        "Expected: " + expected,
                        "Actual  : " + actual ),
               lineNumber,
               fileName ),
    m_expected( expected ),
    m_actual( actual )
{
}
#endif


NotEqualException::NotEqualException( const NotEqualException &other ) : 
    Exception( other ),
    m_expected( other.m_expected ),
    m_actual( other.m_actual ),
    m_additionalMessage( other.m_additionalMessage )
{
}


NotEqualException::~NotEqualException() throw()
{
}


NotEqualException &
NotEqualException::operator =( const NotEqualException &other )
{
  Exception::operator =( other );

  if ( &other != this )
  {
    m_expected = other.m_expected;
    m_actual = other.m_actual;
    m_additionalMessage = other.m_additionalMessage;
  }
  return *this;
}


Exception *
NotEqualException::clone() const
{
  return new NotEqualException( *this );
}


bool 
NotEqualException::isInstanceOf( const Type &exceptionType ) const
{
  return exceptionType == type()  ||
         Exception::isInstanceOf( exceptionType );
}


Exception::Type
NotEqualException::type()
{
  return Type( "CppUnit::NotEqualException" );
}


std::string 
NotEqualException::expectedValue() const
{
  return m_expected;
}


std::string 
NotEqualException::actualValue() const
{
  return m_actual;
}


std::string 
NotEqualException::additionalMessage() const
{
  return m_additionalMessage;
}


}  //  namespace CppUnit
@


1.5
log
@* include/cppunit/Asserter.h:
* src/cppunit/Asserter.cpp: added functions that take a Message as a
  parameter. Existing function have a short description indicating
  an assertion failure.

* include/cppunit/CompilerOuputter.h:
* src/cppunit/CompilerOuputter.cpp: removed printNotEqualMessage() and
  printDefaultMessage(). Updated to use Message.

* include/cppunit/Message.h:
* src/cppunit/Message.cpp: added. Represents a message associated to an
  Exception.

* include/cppunit/Exception.h:
* src/cppunit/Exception.cpp: the message associated to the exception is now
  stored as a Message instead of a string.

* include/cppunit/NotEqualException.cpp: constructs a Message instead of a
  string.

* include/cppunit/TestAssert.h:
* src/cppunit/TestAssert.cpp: updated to use Asserter functions that
  take a message when pertinent (CPPUNIT_FAIL...).

* include/cppunit/TestCaller.h:
* src/cppunit/TestCaller.cpp: exception not caught failure has a better
  short description.

* src/cppunit/TestCase.cpp: better short description when setUp() or
  tearDown() fail.

* src/msvc6/testrunner/TestRunnerDlg.cpp: replace '\n' in failure message
  with space.

* examples/cppunittest/ExceptionTest.cpp:
* examples/cppunittest/NotEqualExceptionTest.cpp:
* examples/cppunittest/TestCallerTest.cpp:
* examples/cppunittest/TestFailureTest.cpp:
* examples/cppunittest/TestResultCollectorTest.h:
* examples/cppunittest/TestResultCollectorTest.cpp:
* examples/cppunittest/TestResultTest.cpp:
* examples/cppunittest/XmlOutputterTest.h:
* examples/cppunittest/XmlOutputterTest.cpp: updated to use Exception/Message.

* examples/cppunittest/MessageTest.h:
* examples/cppunittest/MessageTest.cpp: added. Unit test for Message.
@
text
@@


1.4
log
@* include/cppunit/Asserter.h :
* src/cppunit/Asserter.cpp : added. Helper to create assertion macros.

* src/cppunit/cppunit.dsp :
* src/cppunit/Makefile.am :
* include/cppunit/Makefile.am : added Asserter.h and Asserter.cpp.

* include/cppunit/Exception.h :
* src/cppunit/Exception.cpp : added constructor that take a
SourceLine argument. Deprecated static constant and old constructor.
Fixed some constness issues.

* examples/cppunittest/ExceptionTest.cpp : Refactored.

* NEWS : partially updated (need to be more detailed)

* include/cppunit/NotEqualException.h :
* src/cppunit/NotEqualException.cpp : added constructor that take a
SourceLine argument. Deprecated old constructor. Added a third element
to compose message.

* examples/cppunittest/NotEqualExceptionTest.cpp : moved to "Core"
suite. Added test for SourceLine() and additionalMessage().
Refactored.

* include/cppunit/SourceLine.h :
* src/cppunit/SourceLine.cpp : added. Result of applying
IntroduceParameterObject refactoring on filename & line number...

* include/cppunit/TestAssert.h :
* src/cppunit/TestAssert.cpp : deprecated old assert functions.
added functions assertEquals() and assertDoubleEquals() which use
SourceLine.

* src/cppunit/TestCase.cpp : Modified for SourceLine.

* include/cppunit/TestFailure.h :
* src/cppunit/TestFailure.cpp : added failedTestName(), and
sourceLine().

* src/msvc6/testrunner/TestRunnerDlg.cpp : modified to use SourceLine.

* include/cppunit/TextTestResult.h :
* src/cppunit/TextTestResult.cpp : corrected include order and
switched to angled brackets. Refactored. Don't print failure location
if not available. Not equal failure dump additional message if
available.

* src/cppunit/TextTestRunner.cpp : run() now returns a boolean to
indicate if the run was sucessful.

* src/cppunit/XmlTestResultOutputter.cpp : replaced itoa() with
OStringStream. Refactored.

* examples/cppunittest/XmlUniformiser.h :
* examples/cppunittest/XmlUniformiser.cpp :
CPPUNITTEST_ASSERT_XML_EQUAL capture failure location. Refactored
checkXmlEqual().

* examples/cppunittest/XmlUniformiserTest.h :
* examples/cppunittest/XmlUniformiserTest.cpp : added test for
CPPUNITTEST_ASSERT_XML_EQUAL.

* include/cppunit/XmlTestResultOutputter.h :
* src/cppunit/XmlTestResultOutputter.cpp : updated to use SourceLine.
@
text
@d10 3
a12 3
    Exception( "Expected: " + expected + 
                   ", but was: " + actual + 
                   "." + additionalMessage ,
d18 2
d31 3
a33 1
    Exception( "Expected: " + expected + ", but was: " + actual,
@


1.3
log
@Fixes for GCC 3.0
@
text
@d7 19
d36 1
d42 2
a43 1
    m_actual( other.m_actual )
d62 1
d101 7
@


1.2
log
@* include/cppunit/NotEqualException.h
* src/cppunit/NotEqualException.h:
Fixed constructor and operator = (aren't unit test nice?). Added
methods expectedValue() and actualValue().

* include/cppunit/TestAssert.h:
* src/cppunit/TestAssert.cpp:
Use NotEqualException to report equality failure.

* src/cppunit/TestResult.cpp:
Report expect/was on different line for assertEquals failure.

* examples/cppunittest/NotEqualExceptionTest.*: added unit tests for
NotEqualException.
@
text
@d27 1
a27 1
NotEqualException::~NotEqualException()
@


1.1
log
@* include/cppunit/NotEqualException.cpp: addded, exception to be used
with assertEquals().

* src/cppunit/RepeatedTest.cpp: added to reduce header dependency
(TestResult.h was missing).

* src/cppunit/TestAssert.cpp: added to put non template functions
there.

* src/cppunit/TestCase.cpp: added std:: prefix to
catch (exception& e). Integrated a modified version of Tim Jansen
patch (#403745) for TestCase to make the unit test (TestCaseTest)
pass. If the setUp() fail then neither the runTest() nor
the tearDown() method is called.
@
text
@d10 1
a10 1
    Exception( "Expected: " + expected + ", but was:" + actual,
d12 3
a14 1
               fileName )
d35 2
d65 14
@

