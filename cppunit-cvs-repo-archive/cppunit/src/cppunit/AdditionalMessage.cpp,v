head	1.2;
access;
symbols
	REL_1_12_1:1.2
	REL_1_11_6:1.2
	REL_1_11_4:1.2
	REL_1_11_0:1.2
	TG_CPPUNIT_NO_STREAM_AFTER:1.2
	TG_CPPUNIT_NO_STREAM_BEFORE:1.2
	REL_1_10_2:1.2
	REL_1_10_0:1.2
	REL_1_9_14:1.2
	REL_1_9_12:1.2
	BRANCH_1_9_12:1.2.0.2
	TG_BRANCH_1_9_12:1.2
	TG_BEFORE_HPUX_PLUGIN:1.2
	TG_BEFORE_SUN4_PORT:1.2
	REL_1_9_10:1.2;
locks; strict;
comment	@// @;


1.2
date	2002.07.12.05.59.57;	author blep;	state Exp;
branches;
next	1.1;

1.1
date	2002.07.11.06.01.54;	author blep;	state Exp;
branches;
next	;


desc
@@


1.2
log
@* include/cppunit/config/Portability.h: If the compiler does not support
  namespace (CPPUNIT_HAVE_NAMESPACES=0), define CPPUNIT_NO_STD_NAMESPACE
  and CPPUNIT_NO_NAMESPACE. If CPPUNIT_NO_STD_NAMESPACE is defined, then
  CppUnit assumes that STL are in the global namespace. If
  CPPUNIT_NO_NAMESPACE is defined, then CppUnit classes are placed in the
  global namespace instead of the CppUnit namespace.

* include/cppunit/config/config-bcb5.h:
* include/cppunit/config/config-msvc6.h: added definition of macro
  CPPUNIT_HAVE_NAMESPACES.

* include/cppunit/tools/StringTools.h: use CPPUNIT_WRAP_COLUMN as default
  parameter value for wrap().

* include/cppunit/*/*.h:
* src/cppunit/*.cpp: changed all CppUnit namespace declaration to use
  macros CPPUNIT_NS_BEGIN and CPPUNIT_NS_END. Also, changed reference
  to CppUnit namespace (essentially in macros) using CPPUNIT_NS macro.
@
text
@#include <cppunit/AdditionalMessage.h>


CPPUNIT_NS_BEGIN


AdditionalMessage::AdditionalMessage()
{
}


AdditionalMessage::AdditionalMessage( const std::string &detail1 )
{
  if ( !detail1.empty() )
    addDetail( detail1 );
}


AdditionalMessage::AdditionalMessage( const char *detail1 )
{
  if ( detail1  &&  !std::string( detail1 ).empty() )
    addDetail( std::string(detail1) );
}


AdditionalMessage::AdditionalMessage( const Message &other )
    : SuperClass( other )
{
}


AdditionalMessage &
AdditionalMessage::operator =( const Message &other )
{
  SuperClass::operator =( other );

  return *this;
}


CPPUNIT_NS_END
@


1.1
log
@* added missing files
@
text
@d4 1
a4 2
namespace CppUnit
{
d26 1
a26 1
AdditionalMessage::AdditionalMessage( const CppUnit::Message &other )
d33 1
a33 1
AdditionalMessage::operator =( const CppUnit::Message &other )
d41 1
a41 1
} // namespace CppUnit
@

