head	1.10;
access;
symbols
	REL_1_12_1:1.10
	REL_1_11_6:1.10
	REL_1_11_4:1.10
	REL_1_11_0:1.10
	TG_CPPUNIT_NO_STREAM_AFTER:1.10
	TG_CPPUNIT_NO_STREAM_BEFORE:1.10
	REL_1_10_2:1.10
	REL_1_10_0:1.10
	REL_1_9_14:1.10
	REL_1_9_12:1.10
	BRANCH_1_9_12:1.10.0.2
	TG_BRANCH_1_9_12:1.10
	TG_BEFORE_HPUX_PLUGIN:1.10
	TG_BEFORE_SUN4_PORT:1.10
	REL_1_9_10:1.10
	TG_AFTER_REMOVE_NOTEQUAL_EXCEPTION:1.8
	TG_BEFORE_REMOVE_NOTEQUAL_EXCEPTION:1.8
	REL_1_9_6:1.8
	REL_1_9_4:1.8
	REL_1_9_0:1.8
	REL_1_8_0:1.8
	REL_1_7_8:1.8
	REL_1_7_3:1.7
	REL_1_7_1:1.7
	REL_1_6_2:1.7
	BRANCH_1_6:1.7.0.2
	REL_1_6_1:1.7
	REL_1_6_0:1.7
	REL_1_5_5:1.2;
locks; strict;
comment	@ * @;


1.10
date	2002.07.13.10.33.50;	author blep;	state Exp;
branches;
next	1.9;

1.9
date	2002.07.12.05.59.57;	author blep;	state Exp;
branches;
next	1.8;

1.8
date	2002.03.24.19.39.55;	author blep;	state Exp;
branches;
next	1.7;

1.7
date	2001.06.11.20.00.08;	author blep;	state Exp;
branches;
next	1.6;

1.6
date	2001.06.11.17.56.05;	author bastiaan;	state Exp;
branches;
next	1.5;

1.5
date	2001.06.11.11.12.13;	author bastiaan;	state dead;
branches;
next	1.4;

1.4
date	2001.06.10.17.14.35;	author blep;	state Exp;
branches;
next	1.3;

1.3
date	2001.06.10.17.08.33;	author blep;	state dead;
branches;
next	1.2;

1.2
date	2001.05.06.16.19.32;	author bastiaan;	state Exp;
branches;
next	1.1;

1.1
date	2001.04.22.23.09.57;	author bastiaan;	state Exp;
branches;
next	;


desc
@@


1.10
log
@* include/cppunit/ui/text/TestRunner.h:
* src/cppunit/TextTestRunner.cpp: Renamed TextUi::TestRunner
  TextTestRunner and moved it to the CppUnit namespace. Added
  a deprecated typedef for compatibility with previous version.

* include/cppunit/ui/text/TextTestRunner.h: added.

* include/cppunit/ui/mfc/TestRunner.h:
* src/cppunit/msvc6/testrunner/TestRunner.cpp: Renamed MfcUi::TestRunner
  MfcTestRunner. Added deprecated typedef for compatibility. Renamed
  TestRunner.cpp to MfcTestRunner.cpp.

* include/cppunit/ui/mfc/MfcTestRunner.h: added.

* include/cppunit/ui/qt/TestRunner.h:
* src/qttestrunner/TestRunner.cpp: renamed QtUi::TestRunner QtTestRunner
  and moved it to CppUnit namespace. Added a deprecated typedef for
  compatibility. Renamed TestRunner.cpp to QtTestRunner.cpp.

* include/cppunit/ui/qt/TestRunner.h:
* src/qttestrunner/TestRunner.h: Moved TestRunner to CppUnit namespace
  and renamed it QtTestRunner. Added deprecated typedef for compatibility.

* include/cppunit/Asserter.h:
* src/cppunit/Asserter.cpp: changed namespace Asserter to a struct and
  made all methods static.

* include/cppunit/extensions/HelperMacros.h:
* include/cppunit/extensions/SourceLine.h:
* include/cppunit/extensions/TestAssert.h:
* include/cppunit/extensions/TestPlugIn.h:
* include/cppunit/Portability.h: changed CPPUNIT_NS(symbol) to a
  symbol macro that expand either to CppUnit or nothing. The symbol is
  no longer a parameter.

* include/cppunit/portability/CppUnitVector.h:
* include/cppunit/portability/CppUnitDeque.h:
* include/cppunit/portability/CppUnitMap.h: added. STL Wrapper for
  compilers that do not support template default argumenent and need
  the allocator to be passed when instantiating STL container.

* examples/cppunittest/*.h:
* examples/cppunittest/*.cpp:
* src/msvc6/testrunner/*.h:
* src/msvc6/testrunner/*.cpp:
* src/msvc6/testpluginrunner/*.h:
* src/msvc6/testpluginrunner/*.cpp:
* src/qttestrunner/*.h:
* src/qttestrunner/*.cpp: replaced occurence of CppUnit:: by CPPUNIT_NS.

* src/cppunit/TestSuite.h:
replaced occurence of std::vector by CppUnitVector.
@
text
@#ifndef CPPUNIT_EXTENSIONS_TESTSETUP_H
#define CPPUNIT_EXTENSIONS_TESTSETUP_H

#include <cppunit/extensions/TestDecorator.h>

CPPUNIT_NS_BEGIN


class Test;
class TestResult;

/*! \brief Decorates a test by providing a specific setUp() and tearDown().
 */
class CPPUNIT_API TestSetUp : public TestDecorator 
{
public:
  TestSetUp( Test *test );

  void run( TestResult *result );

protected:
  virtual void setUp();
  virtual void tearDown();

private:
  TestSetUp( const TestSetUp & );
  void operator =( const TestSetUp & );
};


CPPUNIT_NS_END

#endif // CPPUNIT_EXTENSIONS_TESTSETUP_H

@


1.9
log
@* include/cppunit/config/Portability.h: If the compiler does not support
  namespace (CPPUNIT_HAVE_NAMESPACES=0), define CPPUNIT_NO_STD_NAMESPACE
  and CPPUNIT_NO_NAMESPACE. If CPPUNIT_NO_STD_NAMESPACE is defined, then
  CppUnit assumes that STL are in the global namespace. If
  CPPUNIT_NO_NAMESPACE is defined, then CppUnit classes are placed in the
  global namespace instead of the CppUnit namespace.

* include/cppunit/config/config-bcb5.h:
* include/cppunit/config/config-msvc6.h: added definition of macro
  CPPUNIT_HAVE_NAMESPACES.

* include/cppunit/tools/StringTools.h: use CPPUNIT_WRAP_COLUMN as default
  parameter value for wrap().

* include/cppunit/*/*.h:
* src/cppunit/*.cpp: changed all CppUnit namespace declaration to use
  macros CPPUNIT_NS_BEGIN and CPPUNIT_NS_END. Also, changed reference
  to CppUnit namespace (essentially in macros) using CPPUNIT_NS macro.
@
text
@d12 2
a13 1

@


1.8
log
@* INSTALL-WIN32.txt: added some info to build cppunit as a DLL.

* include/cppunit/config-msvc6.h: added definition of macro CPPUNIT_API when
building or linking DLL. Defined CPPUNIT_BUILD_DLL when building, and
CPPUNIT_DLL when linking.

* include/cppunit/Portability.h: added empty definition of macro CPPUNIT_API
when not building or using CppUnit as a DLL. When any of those symbol is defined,
the symbol CPPUNIT_NEED_DLL_DECL is set to 1.

* include/cppunit/extensions/RepeatedTest.h:
* include/cppunit/extensions/TestDecorator.h:
* include/cppunit/extensions/TestSetUp.h:
* include/cppunit/TestCaller.h
* include/cppunit/extensions/TestFactory.h
* include/cppunit/extensions/TestFactoryRegistry.h
* include/cppunit/extensions/TypeInfoHelper.h
* include/cppunit/Asserter.h
* include/cppunit/Exception.h
* include/cppunit/NotEqualException.h
* include/cppunit/SourceLine.h
* include/cppunit/SynchronizedObject.h
* include/cppunit/Test.h
* include/cppunit/TestAssert.h
* include/cppunit/TestCase.h
* include/cppunit/TestFailure.h
* include/cppunit/TestListener.h
* include/cppunit/TestResult.h
* include/cppunit/TestSuite.h
* include/cppunit/CompilerOutputter.h
* include/cppunit/Outputter.h
* include/cppunit/TestResultCollector.h
* include/cppunit/TestSuccessListener.h
* include/cppunit/TextOutputter.h
* include/cppunit/TextTestProgressListener.h
* include/cppunit/TextTestResult.h
* include/cppunit/TextTestRunner.h
* include/cppunit/XmlOutputter.h: added CPPUNIT_API for DLL export.

* include/cppunit/TestSuite.h:
* src/cppunit/TestSuite.cpp: reindented

* include/cppunit/extensions/TestSetUp.h:
* src/cppunit/TestSetUp.cpp: added .cpp. extracted inline method and moved them
to cpp file.
@
text
@d6 2
a7 1
namespace CppUnit {
d30 1
a30 1
} //  namespace CppUnit
@


1.7
log
@* include/cppunit/extensions/HelperMacros.h: static method suite()
implemented by CPPUNIT_TEST_SUITE_END macro now returns a TestSuite
instead of a Test.

* include/cppunit/extensions/RepeatedTest.h: corrected countTestCases,
operator = declaration.

* include/cppunit/extensions/TestDecorator.h: removed const from run()
method. Did not match run() declaration of Test class.

* include/cppunit/extensions/TestFactory.h: fixed a comment.

* include/cppunit/extensions/TestSetup.h: corrected run() method
declaration. Methods setUp() and tearDown() were not declared virtual.

* include/cppunit/extensions/TestSuiteBuilder.h: added a method
addTestCaller() which take a pointer on a fixture.
@
text
@d12 1
a12 1
class TestSetUp : public TestDecorator 
d15 1
a15 1
    TestSetUp (Test *test) : TestDecorator (test) {}
d17 1
a17 1
    void run (TestResult *result);
d20 2
a21 2
    virtual void setUp () {}
    virtual void tearDown () {}
a26 9


inline void
TestSetUp::run (TestResult *result)
{ 
  setUp (); 
  TestDecorator::run (result); 
  tearDown (); 
}
@


1.6
log
@Renamed from TestSetup.h
@
text
@d15 3
a17 2
                    TestSetUp (Test *test) : TestDecorator (test) {}
                    run (TestResult *result);
d20 2
a21 2
    void            setUp () {}
    void            tearDown () {}
d29 7
a35 2
inline TestSetup::run (TestResult *result)
{ setUp (); TestDecorator::run (result); tearDown (); }
@


1.5
log
@Renamed to TestSetUp.h
@
text
@d12 1
a12 1
class TestSetup : public TestDecorator 
d15 1
a15 1
                    TestSetup (Test *test) : TestDecorator (test) {}
d23 2
a24 2
  TestSetup( const TestSetup & );
  void operator =( const TestSetup & );
@


1.4
log
@include/extensions/TestSetup.h: renamed TestSetUp.h for consistency.
@
text
@@


1.3
log
@include/extensions/TestSetup.h: renamed TestSetUp.h for consistency.
@
text
@@


1.2
log
@Fixed #include's for cppunit headers.
@
text
@@


1.1
log
@Merged extension headers back in from Micheal Feathers version.
@
text
@d1 2
d4 1
a4 6
#ifndef CPP_UINT_TESTSETUP_H
#define CPP_UINT_TESTSETUP_H

#ifndef CPPUNIT_TESTDECORATOR_H
#include "TestDecorator.h"
#endif
d34 1
a34 1
#endif
@

