head	1.6;
access;
symbols
	REL_1_12_1:1.6
	REL_1_11_6:1.6
	REL_1_11_4:1.6
	REL_1_11_0:1.6
	TG_CPPUNIT_NO_STREAM_AFTER:1.5
	TG_CPPUNIT_NO_STREAM_BEFORE:1.5
	REL_1_10_2:1.5
	REL_1_10_0:1.5
	REL_1_9_14:1.5
	REL_1_9_12:1.5
	BRANCH_1_9_12:1.5.0.2
	TG_BRANCH_1_9_12:1.5
	TG_BEFORE_HPUX_PLUGIN:1.5
	TG_BEFORE_SUN4_PORT:1.5
	REL_1_9_10:1.5
	TG_AFTER_REMOVE_NOTEQUAL_EXCEPTION:1.1
	TG_BEFORE_REMOVE_NOTEQUAL_EXCEPTION:1.1;
locks; strict;
comment	@ * @;


1.6
date	2004.09.01.20.17.36;	author blep;	state Exp;
branches;
next	1.5;

1.5
date	2002.08.29.07.36.50;	author blep;	state Exp;
branches;
next	1.4;

1.4
date	2002.07.13.10.33.50;	author blep;	state Exp;
branches;
next	1.3;

1.3
date	2002.07.12.05.59.57;	author blep;	state Exp;
branches;
next	1.2;

1.2
date	2002.06.16.17.55.58;	author blep;	state Exp;
branches;
next	1.1;

1.1
date	2002.05.23.18.38.39;	author blep;	state Exp;
branches;
next	;


desc
@@


1.6
log
@* include/cppunit/XmlOutputter.h:
* include/cppunit/tools/XmlDocument.h
* src/cppunit/XmlDocument.cpp:
* src/cppunit/XmlOutputter.cpp: integrated patch #997006 from Akos Maroy.
  This patch makes the 'standalone' attribute in XML header optional.
@
text
@#ifndef CPPUNIT_TOOLS_XMLDOCUMENT_H
#define CPPUNIT_TOOLS_XMLDOCUMENT_H

#include <cppunit/Portability.h>

#if CPPUNIT_NEED_DLL_DECL
#pragma warning( push )
#pragma warning( disable: 4251 )  // X needs to have dll-interface to be used by clients of class Z
#endif

#include <string>


CPPUNIT_NS_BEGIN


class XmlElement;


/*! \brief A XML Document.
 *
 * A XmlDocument represents a XML file. It holds a pointer on the root XmlElement
 * of the document. It also holds the encoding and style sheet used.
 *
 * By default, the XML document is stand-alone and tagged with enconding "ISO-8859-1".
 */
class CPPUNIT_API XmlDocument
{
public:
  /*! \brief Constructs a XmlDocument object.
   * \param encoding Encoding used in the XML file (default is Latin-1, ISO-8859-1 ). 
   * \param styleSheet Name of the XSL style sheet file used. If empty then no
   *                   style sheet will be specified in the output.
   */
  XmlDocument( const std::string &encoding = "",
               const std::string &styleSheet = "" );

  /// Destructor.
  virtual ~XmlDocument();

  std::string encoding() const;
  void setEncoding( const std::string &encoding = "" );
  
  std::string styleSheet() const;
  void setStyleSheet( const std::string &styleSheet = "" );

  bool standalone() const;

  /*! \brief set the output document as standalone or not.
   *
   *  For the output document, specify wether it's a standalone XML
   *  document, or not.
   *
   *  \param standalone if true, the output will be specified as standalone.
   *         if false, it will be not.
   */
  void setStandalone( bool standalone );
 
  void setRootElement( XmlElement *rootElement );
  XmlElement &rootElement() const;

  std::string toString() const;

private:
  /// Prevents the use of the copy constructor.
  XmlDocument( const XmlDocument &copy );

  /// Prevents the use of the copy operator.
  void operator =( const XmlDocument &copy );

protected:
  std::string m_encoding;
  std::string m_styleSheet;
  XmlElement *m_rootElement;
  bool m_standalone;
};


#if CPPUNIT_NEED_DLL_DECL
#pragma warning( pop )
#endif


CPPUNIT_NS_END

#endif  // CPPUNIT_TOOLS_XMLDOCUMENT_H
@


1.5
log
@* include/cppunit/Asserter.h:
* include/cppunit/Message.h:
* include/cppunit/extensions/TestNamer.h:
* include/cppunit/extensions/TestSuiteBuilder.h:
* include/cppunit/tools/XmlDocument.h:
* include/cppunit/tools/XmlElement.h: Fixed a few documentation bug.
@
text
@d24 2
d47 12
d75 1
@


1.4
log
@* include/cppunit/ui/text/TestRunner.h:
* src/cppunit/TextTestRunner.cpp: Renamed TextUi::TestRunner
  TextTestRunner and moved it to the CppUnit namespace. Added
  a deprecated typedef for compatibility with previous version.

* include/cppunit/ui/text/TextTestRunner.h: added.

* include/cppunit/ui/mfc/TestRunner.h:
* src/cppunit/msvc6/testrunner/TestRunner.cpp: Renamed MfcUi::TestRunner
  MfcTestRunner. Added deprecated typedef for compatibility. Renamed
  TestRunner.cpp to MfcTestRunner.cpp.

* include/cppunit/ui/mfc/MfcTestRunner.h: added.

* include/cppunit/ui/qt/TestRunner.h:
* src/qttestrunner/TestRunner.cpp: renamed QtUi::TestRunner QtTestRunner
  and moved it to CppUnit namespace. Added a deprecated typedef for
  compatibility. Renamed TestRunner.cpp to QtTestRunner.cpp.

* include/cppunit/ui/qt/TestRunner.h:
* src/qttestrunner/TestRunner.h: Moved TestRunner to CppUnit namespace
  and renamed it QtTestRunner. Added deprecated typedef for compatibility.

* include/cppunit/Asserter.h:
* src/cppunit/Asserter.cpp: changed namespace Asserter to a struct and
  made all methods static.

* include/cppunit/extensions/HelperMacros.h:
* include/cppunit/extensions/SourceLine.h:
* include/cppunit/extensions/TestAssert.h:
* include/cppunit/extensions/TestPlugIn.h:
* include/cppunit/Portability.h: changed CPPUNIT_NS(symbol) to a
  symbol macro that expand either to CppUnit or nothing. The symbol is
  no longer a parameter.

* include/cppunit/portability/CppUnitVector.h:
* include/cppunit/portability/CppUnitDeque.h:
* include/cppunit/portability/CppUnitMap.h: added. STL Wrapper for
  compilers that do not support template default argumenent and need
  the allocator to be passed when instantiating STL container.

* examples/cppunittest/*.h:
* examples/cppunittest/*.cpp:
* src/msvc6/testrunner/*.h:
* src/msvc6/testrunner/*.cpp:
* src/msvc6/testpluginrunner/*.h:
* src/msvc6/testpluginrunner/*.cpp:
* src/qttestrunner/*.h:
* src/qttestrunner/*.cpp: replaced occurence of CppUnit:: by CPPUNIT_NS.

* src/cppunit/TestSuite.h:
replaced occurence of std::vector by CppUnitVector.
@
text
@d28 1
a28 1
  /*! Constructs a XmlDocument object.
d30 2
@


1.3
log
@* include/cppunit/config/Portability.h: If the compiler does not support
  namespace (CPPUNIT_HAVE_NAMESPACES=0), define CPPUNIT_NO_STD_NAMESPACE
  and CPPUNIT_NO_NAMESPACE. If CPPUNIT_NO_STD_NAMESPACE is defined, then
  CppUnit assumes that STL are in the global namespace. If
  CPPUNIT_NO_NAMESPACE is defined, then CppUnit classes are placed in the
  global namespace instead of the CppUnit namespace.

* include/cppunit/config/config-bcb5.h:
* include/cppunit/config/config-msvc6.h: added definition of macro
  CPPUNIT_HAVE_NAMESPACES.

* include/cppunit/tools/StringTools.h: use CPPUNIT_WRAP_COLUMN as default
  parameter value for wrap().

* include/cppunit/*/*.h:
* src/cppunit/*.cpp: changed all CppUnit namespace declaration to use
  macros CPPUNIT_NS_BEGIN and CPPUNIT_NS_END. Also, changed reference
  to CppUnit namespace (essentially in macros) using CPPUNIT_NS macro.
@
text
@d20 1
a20 1
/*! A XML Document.
@


1.2
log
@* release 1.9.8

* include/cppunit/plugin/TestPlugIn.h: updated documentation.

* include/cppunit/tools/XmlDocument.h: updated documentation.

* include/cppunit/tools/StringTools.h:
* src/cppunit/StringTools.cpp: added split() and wrap() functions.

* include/cppunit/CompilerOutputter.h:
* src/cppunit/CompilerOutputter.cpp: extracted wrap() and
  splitMessageIntoLines() to StringTools.

* include/cppunit/XmlOutputterHook.h:
* src/cppunit/XmlOutputterHook.cpp: removed rooNode parameter from
  beginDocument() and endDocument(). It can be retreive from document.
  Renamed 'node' occurences to 'element'.

* include/cppunit/XmlOutputter.h:
* src/cppunit/XmlOutputter.cpp: updated against
  XmlOutputterHook changes. Renamed 'node' occurences to 'element'.

* examples/ClockerPlugIn/ClockerXmlHook.h:
* examples/ClockerPlugIn/ClockerXmlHook.cpp: updated against
  XmlOutputterHook changes.

* examples/cppunittest/XmlElementTest.h:
* examples/cppunittest/XmlElementTest.cpp: Renamed 'node' occurences
  to 'element'.

* examples/cppunittest/XmlOutputterTest.cpp: updated against
  XmlOutputterHook changes.

* examples/cppunittest/StringToolsTest.h:
* examples/cppunittest/StringToolsTest.cpp: added. Unit tests for
  StringTools. Turn out that VC++ dismiss empty lines in tools output,
  which is the reason why empty lines where not printed in
  CompilerOutputter.
@
text
@d14 2
a15 2
namespace CppUnit
{
d67 1
a67 2
} //  namespace CppUnit

@


1.1
log
@* include/cppunit/XmlOutputter.h:
* src/cppunit/XmlOutputter.cpp: extracted class XmlOutputter::Node to
XmlElement. Extracted xml 'prolog' generation to XmlDocument.

* include/cppunit/tools/XmlElement.h:
* src/cppunit/tools/XmlElement.cpp: added, extracted from XmlOutputter::Node.

* include/cppunit/tools/XmlDocument.h:
* src/cppunit/tools/XmlDocument.cpp: added, extracted from XmlOutputter. Handle
XML document prolog (encoding & style-sheet) and manage the root element.

* src/DllPlugInTester/DllPlugInTester.cpp: bug fix, flag --xsl was ignored.

* examples/cppunittest/XmlOutputterTest.h:
* examples/cppunittest/XmlOutputterTest.cpp: updated for XmlOuputter changes.
extracted tests for XmlOutputter::Node to XmlElementTest

* examples/cppunittest/XmlElementTest.h:
* examples/cppunittest/XmlElementTest.cpp: added, tests extracted from
XmlOutputterTest.
@
text
@d21 3
@

