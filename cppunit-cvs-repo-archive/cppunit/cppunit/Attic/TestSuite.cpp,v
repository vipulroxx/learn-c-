head	1.6;
access;
symbols
	REL_1_5_4:1.3
	initial:1.1.1.1
	e-s:1.1.1;
locks; strict;
comment	@// @;


1.6
date	2001.04.28.18.23.32;	author bastiaan;	state dead;
branches;
next	1.5;

1.5
date	2001.04.16.22.25.50;	author bastiaan;	state Exp;
branches;
next	1.4;

1.4
date	2001.04.14.22.37.30;	author bastiaan;	state Exp;
branches;
next	1.3;

1.3
date	2001.04.14.14.45.56;	author bastiaan;	state Exp;
branches;
next	1.2;

1.2
date	2001.04.13.16.44.48;	author bastiaan;	state Exp;
branches;
next	1.1;

1.1
date	2000.10.05.18.37.29;	author e-s;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2000.10.05.18.37.29;	author e-s;	state Exp;
branches;
next	;


desc
@@


1.6
log
@Moved files in subdir cppunit to src/cppunit.
@
text
@#include "cppunit/TestSuite.h"
#include "cppunit/TestResult.h"

namespace CppUnit {

/// Deletes all tests in the suite.
void TestSuite::deleteContents ()
{
  for (std::vector<Test *>::iterator it = m_tests.begin ();
       it != m_tests.end ();
       ++it)
    delete *it;
  m_tests.clear();
}


/// Runs the tests and collects their result in a TestResult.
void TestSuite::run (TestResult *result)
{
    for (std::vector<Test *>::iterator it = m_tests.begin ();
            it != m_tests.end ();
            ++it) {
        if (result->shouldStop ())
            break;

        Test *test = *it;
        test->run (result);
    }

}


/// Counts the number of test cases that will be run by this test.
int TestSuite::countTestCases () const
{
    int count = 0;

    for (std::vector<Test *>::const_iterator it = m_tests.begin ();
            it != m_tests.end ();
            ++it)
        count += (*it)->countTestCases ();

    return count;

}



/// Default constructor
TestSuite::TestSuite (std::string name)
  : m_name (name)
{
}


/// Destructor
TestSuite::~TestSuite ()
{ 
  deleteContents (); 
}


/// Adds a test to the suite. 
void 
  TestSuite::addTest (Test *test)
{ 
  m_tests.push_back (test); 
}


/// Returns a string representation of the test suite.
std::string 
  TestSuite::toString () const
{ 
  return "suite " + getName(); 
}

/// Returns the name of the test suite.
std::string 
  TestSuite::getName () const
{ 
  return m_name; 
}

} // namespace CppUnit

@


1.5
log
@Fix compilation bug on Win32/MSVC++.
@
text
@@


1.4
log
@Moved public header files from cppunit dir to include/cppunit, to separate them from internal header files like estring.h.
@
text
@d38 1
a38 1
    for (std::vector<Test * const>::iterator it = m_tests.begin ();
@


1.3
log
@Removed all 'using namespace' occurrences.
@
text
@d1 2
a2 2
#include "TestSuite.h"
#include "TestResult.h"
@


1.2
log
@Merged patch #403542 by Tim Jansen <timj@@systembureau.com>.
Fixes bug #220207: "const" problem with countTestCases.
Fixes 'TestSuite::deleteContent() clear vector'
Fixes 'Fix: TestCaller registered Fixture' (see patch #403541).
Fixes bug #415219: example did not test anything.
@
text
@d4 1
a4 1
using namespace CppUnit;
d85 1
@


1.1
log
@Initial revision
@
text
@d13 1
a13 1

d34 1
a34 1
int TestSuite::countTestCases ()
d38 1
a38 1
    for (std::vector<Test *>::iterator it = m_tests.begin ();
@


1.1.1.1
log
@initial check in.
@
text
@@
