head	1.3;
access;
symbols
	REL_1_12_1:1.3
	REL_1_11_6:1.3
	REL_1_11_4:1.3
	REL_1_11_0:1.3
	TG_CPPUNIT_NO_STREAM_AFTER:1.3
	TG_CPPUNIT_NO_STREAM_BEFORE:1.3
	REL_1_10_2:1.3
	REL_1_10_0:1.3
	REL_1_9_14:1.3
	REL_1_9_12:1.3
	BRANCH_1_9_12:1.3.0.2
	TG_BRANCH_1_9_12:1.3
	TG_BEFORE_HPUX_PLUGIN:1.3
	TG_BEFORE_SUN4_PORT:1.3
	REL_1_9_10:1.3
	TG_AFTER_REMOVE_NOTEQUAL_EXCEPTION:1.3
	TG_BEFORE_REMOVE_NOTEQUAL_EXCEPTION:1.3
	REL_1_9_6:1.2
	REL_1_9_4:1.2
	REL_1_9_0:1.2
	REL_1_8_0:1.1
	REL_1_7_8:1.1
	REL_1_7_3:1.1
	REL_1_7_1:1.1;
locks; strict;
comment	@# @;


1.3
date	2002.06.13.15.31.00;	author blep;	state Exp;
branches;
next	1.2;

1.2
date	2002.04.12.19.28.46;	author blep;	state Exp;
branches;
next	1.1;

1.1
date	2001.10.07.19.36.47;	author blep;	state Exp;
branches;
next	;


desc
@@


1.3
log
@* include/cppunit/Asserter.h:
* src/cppunit/Asserter.cpp: added functions that take a Message as a
  parameter. Existing function have a short description indicating
  an assertion failure.

* include/cppunit/CompilerOuputter.h:
* src/cppunit/CompilerOuputter.cpp: removed printNotEqualMessage() and
  printDefaultMessage(). Updated to use Message.

* include/cppunit/Message.h:
* src/cppunit/Message.cpp: added. Represents a message associated to an
  Exception.

* include/cppunit/Exception.h:
* src/cppunit/Exception.cpp: the message associated to the exception is now
  stored as a Message instead of a string.

* include/cppunit/NotEqualException.cpp: constructs a Message instead of a
  string.

* include/cppunit/TestAssert.h:
* src/cppunit/TestAssert.cpp: updated to use Asserter functions that
  take a message when pertinent (CPPUNIT_FAIL...).

* include/cppunit/TestCaller.h:
* src/cppunit/TestCaller.cpp: exception not caught failure has a better
  short description.

* src/cppunit/TestCase.cpp: better short description when setUp() or
  tearDown() fail.

* src/msvc6/testrunner/TestRunnerDlg.cpp: replace '\n' in failure message
  with space.

* examples/cppunittest/ExceptionTest.cpp:
* examples/cppunittest/NotEqualExceptionTest.cpp:
* examples/cppunittest/TestCallerTest.cpp:
* examples/cppunittest/TestFailureTest.cpp:
* examples/cppunittest/TestResultCollectorTest.h:
* examples/cppunittest/TestResultCollectorTest.cpp:
* examples/cppunittest/TestResultTest.cpp:
* examples/cppunittest/XmlOutputterTest.h:
* examples/cppunittest/XmlOutputterTest.cpp: updated to use Exception/Message.

* examples/cppunittest/MessageTest.h:
* examples/cppunittest/MessageTest.cpp: added. Unit test for Message.
@
text
@Baptiste Lepilleur's template file for CppUnit Development.
(@@)Copyright 2001, Baptiste Lepilleur.



[-ExtractPath]
!!Memo
Extract the path from a full filename.
path is the filename we need to extract the path from.
returns: extracted path.
Algo: we iterates the filename from the end until we found a character '\'.
!!End

!!Params 
path @@@@(ProjectPath)@@@@
!!End

!!Code
Input path: "@@@@path@@@@"
!!Set index @@@@(Strlen @@@@path@@@@)@@@@
!!//
!!Set finalpath
!!Label LoopExtractPath
!!Sub index 1
!!If @@@@index@@@@ < 0
!!Goto EndExtractPath
!!Endif
!!//
!!Set lastchar @@@@(StrSub @@@@path@@@@ @@@@index@@@@ 1)@@@@
!!If @@@@lastchar@@@@ != "\"
!!Goto LoopExtractPath
!!Endif
!!//
!!Add index 1
!!Set finalpath @@@@(StrSub @@@@path@@@@ 0 @@@@index@@@@)@@@@
!!//
!!Label EndExtractPath
!!Return @@@@finalpath@@@@
!!End



---------------------------------------------------------------------------------
---------------------------------------------------------------------------------
---------------------------------------------------------------------------------
---------------------------------------------------------------------------------
[+01 Create Class in file]
!!Memo
Creates a new class in new files (.h/.cpp) and adds them to the project.
!!End

!!Params
classname Ttr
parentclassname =
classdesc This class represents
objectkind Reference Object
hasserialize 0
isrefobj 0
inlinectordtor 0
createfile 1
isunittest 0
!!End

!!Dialog
<html><body>
Class name: <input type=text id=classname size=40><br>
Brief description: <input type=text id=classdesc size=68><br>
Object Kind: 
  <select name="Object Kind" id=objectkind>
      <option>Default Value Object</option>
      <option>Explicit Value Object</option>
      <option>Reference Object</option>
  </select><br>

Parent class name: <input type=text id=parentclassname size=40><br>

<input type=checkbox id=createfile>
   Create a new file ? (otherwise Insert in current file).<br>
<br>
<input type=checkbox id=hasserialize>
   Has: virtual void Serialize( CArchive &ar )<br>
<input type=checkbox id=isrefobj>
   Is a reference counted object (inherit ERefObj)<br>
<input type=checkbox id=inlinectordtor>
   Inline ctor/dtor, copy ctor/operator.<br>
<input type=checkbox id=isunittest>
   Is a CppUnit unit test.<br>

<!--Base filename: <input type=text id=classbasepath size=64><br> -->


<!--<p>Filename: <input type=file id=classhfn accept="*.h" size=40></p> -->
<!--<p>Filename: <input type=file id=classcppfn accept="*.h" size=40></p> -->
</body></html>
!!End

!!Code
!!// Set variable that indicates the kind of object we are working on.
!!Set defvalobject 0
!!If @@@@objectkind@@@@ == "Default Value Object"
!!Set defvalobject 1
!!Endif
!!//
!!Set valobject 0
!!If @@@@objectkind@@@@ == "Explicit Value Object"
!!Set valobject 1
!!Endif
!!//
!!Set refobject 0
!!If @@@@objectkind@@@@ == "Reference Object"
!!Set refobject 1
!!Endif
!!//
!!// Set class filename (relative to dsp)
!!Set headerfn ../../include/cppunit/@@@@classname@@@@.h
!!Set implfn @@@@classname@@@@.cpp
!!Set headerdefine @@@@(String @@@@(Call -MakeHeaderDefined fn @@@@classname@@@@.h)@@@@:U)@@@@
!!//
!!// hasparentclass indicates if a parent class has been defined.
!!Set hasparentclass 0
!!If @@@@parentclassname@@@@ != =
!!Set hasparentclass 1
!!Else
!!If @@@@isunittest@@@@
!!Set parentclassname CppUnit::TestFixture
!!Set hasparentclass 1
!!Endif
!!Endif
!!//
!!// hasparent is set to 1 if the class has some parent (ERefObj or parentclass).
!!Set hasparent @@@@hasparentclass@@@@
!!If @@@@isrefobj@@@@
!!Set hasparent 1
!!Endif
!!//
!!//
!!// All variables are set, we can now generates the class.
!!//
!!//
!!//
!!//
!!// ----------------------------------------------------------------------------
!!// ------------------------------ header file ---------------------------------
!!// ----------------------------------------------------------------------------
!!//
!!//
!!//
!!If @@@@createfile@@@@
!!FileNew @@@@headerfn@@@@ dsp
!!Set headerpath @@@@(FilePath)@@@@
#ifndef @@@@headerdefine@@@@
#define @@@@headerdefine@@@@
!!Else
// //////////////////////////////////////////////////////////////////////////
// //////////////////////////////////////////////////////////////////////////
// Definition of class @@@@classname@@@@
// //////////////////////////////////////////////////////////////////////////
// //////////////////////////////////////////////////////////////////////////
!!Endif
!!If @@@@hasparentclass@@@@

!!If @@@@isunittest@@@@
#include <cppunit/extensions/HelperMacros.h>
!!Else
#include "@@@@parentclassname@@@@.h"
!!Endif
!!Endif


namespace CppUnit
{

!!If @@@@isrefobj@@@@
/*! Declare @@@@classname@@@@Ref as a reference pointer on @@@@classname@@@@.
 */
EDECL_REF( @@@@classname@@@@ );



!!Endif
/*! \class @@@@classname@@@@
 * \brief @@@@classdesc@@@@
 */
class @@@@classname@@@@@@@@\
!!// Write inherited class list (parent class first, then ERefObj if inherited).
!!If @@@@hasparent@@@@
 : @@@@\
!!// xpos contains the indentation level for inheritance declarations...
!!GetPos xpos ypos
!!Sub xpos 1
public @@@@\
!!Else

!!Endif
!!If @@@@hasparentclass@@@@
@@@@parentclassname@@@@@@@@\
!!If @@@@isrefobj@@@@
,
@@@@(Call -MakeFiller filler " " count @@@@xpos@@@@)@@@@@@@@\
public @@@@\
!!Else

!!Endif
!!Endif
!!If @@@@isrefobj@@@@
ERefObj
!!Endif
{
!!//
!!//
!!// ------------ Done with inheritance, declare the class body... ----------
!!//
!!//
!!If @@@@isunittest@@@@
  CPPUNIT_TEST_SUITE( @@@@classname@@@@ );
  CPPUNIT_TEST( putTestMethodNameHere );
  CPPUNIT_TEST_SUITE_END();

!!Endif
public:
!!If !@@@@defvalobject@@@@
  /*! Constructs a @@@@classname@@@@ object.
   */
  @@@@classname@@@@();

!!Endif
!!If @@@@valobject@@@@
  /*! Copy constructor.
   * @@param copy Object to copy.
   */
  @@@@classname@@@@( const @@@@classname@@@@ &copy );

!!Endif
  /// Destructor.
  virtual ~@@@@classname@@@@();
!!If @@@@valobject@@@@

  /*! Copy operator.
   * @@param copy Object to copy.
   * @@return Reference on this object.
   */
  @@@@classname@@@@ &operator =( const @@@@classname@@@@ &copy );
!!Endif
!!If @@@@isunittest@@@@

  void setUp();
  void tearDown();
!!Endif
!!// Private for methods
!!If @@@@refobject@@@@

private:
  /// Prevents the use of the copy constructor.
  @@@@classname@@@@( const @@@@classname@@@@ &copy );

  /// Prevents the use of the copy operator.
  void operator =( const @@@@classname@@@@ &copy );
!!Endif
!!// Private for member datas

private:
};



!!If @@@@createfile@@@@
// Inlines methods for @@@@classname@@@@:@@@@\
!!GetPos xpos ypos
!!Sub xpos 4

// @@@@(Call -MakeFiller filler - count @@@@xpos@@@@)@@@@
!!Endif  //@@@@createfile@@@@
!!If @@@@inlinectordtor@@@@
!!If !@@@@defvalobject@@@@


inline
@@@@classname@@@@::@@@@classname@@@@()@@@@\
!!If @@@@hasparentclass@@@@
 : 
    @@@@parentclassname@@@@()
!!Else

!!Endif
{
}
!!Endif  //!@@@@defvalobject@@@@
!!If @@@@valobject@@@@


inline
@@@@classname@@@@::@@@@classname@@@@( const @@@@classname@@@@ &copy )@@@@\
!!If @@@@hasparentclass@@@@
 : 
    @@@@parentclassname@@@@( copy )
!!Else

!!Endif
!!Endif  //@@@@valobject@@@@


inline
@@@@classname@@@@::~@@@@classname@@@@()
{
}
!!If @@@@valobject@@@@


inline @@@@classname@@@@ &
@@@@classname@@@@::operator =( const @@@@classname@@@@ &copy )
{

  return *this;
}
!!Endif  //@@@@valobject@@@@
!!Endif  //@@@@inlinectordtor@@@@


} //  namespace CppUnit

!!If @@@@createfile@@@@

#endif  // @@@@headerdefine@@@@
!!FileSave
!!ProjectFileAdd
!!Endif
!!//
!!//
!!//
!!// ----------------------------------------------------------------------------
!!// -------------------------- Implementation file -----------------------------
!!// ----------------------------------------------------------------------------
!!//
!!//
!!//
!!If @@@@createfile@@@@
!!FileNew @@@@implfn@@@@ dsp
#include <cppunit/@@@@classname@@@@.h>
!!Else


// //////////////////////////////////////////////////////////////////////////
// Implementation of class @@@@classname@@@@
// //////////////////////////////////////////////////////////////////////////
!!Endif


namespace CppUnit
{


!!If @@@@isunittest@@@@

CPPUNIT_TEST_SUITE_REGISTRATION( @@@@classname@@@@ );
!!Endif
!!If !@@@@inlinectordtor@@@@
!!If !@@@@defvalobject@@@@


@@@@classname@@@@::@@@@classname@@@@()@@@@\
!!If @@@@hasparentclass@@@@
 : 
    @@@@parentclassname@@@@()
!!Else

!!Endif
{
}
!!Endif
!!If @@@@valobject@@@@


@@@@classname@@@@::@@@@classname@@@@( const @@@@classname@@@@ &copy )@@@@\
!!If @@@@hasparentclass@@@@
 : 
    @@@@parentclassname@@@@( copy )
!!Else

!!Endif
{
}
!!Endif


@@@@classname@@@@::~@@@@classname@@@@()
{
}
!!If @@@@valobject@@@@


@@@@classname@@@@ &
@@@@classname@@@@::operator =( const @@@@classname@@@@ &copy )
{

  return *this;
}
!!Endif
!!Endif
!!If @@@@isunittest@@@@


void 
@@@@classname@@@@::setUp()
{
}


void 
@@@@classname@@@@::tearDown()
{
}
!!Endif


} //  namespace CppUnit

!!If @@@@createfile@@@@
!!FileSave
!!ProjectFileAdd
!!//ExecuteCommand FileOpen "@@@@headerpath@@@@"
!!Endif
!!End

---------------------------------------------------------------------------------
---------------------------------------------------------------------------------
[-Dummy]
!!Code
!!End

---------------------------------------------------------------------------------
------------------------   [-MakeHeaderDefined]   -------------------------------
---------------------------------------------------------------------------------
[-MakeHeaderDefined]
!!Memo
This template replace all occurences of '.' in the specified filename "fn" by '_'.
This is typically used to make the #ifndef at the beginning of header files.
Parameters: "fn" filename in which each occurence of '.' is replaced by '_'.
Returns: Transformed filename.
!!End

!!Params
fn TestDoIt
!!End

!!Code
!!Set result @@@@fn@@@@
!!Label LoopMakeHeaderDefined
!!Set fn @@@@result@@@@
!!// Check if there is any occurence left of '.'
!!Set index @@@@(StrFind @@@@fn@@@@ ".")@@@@
!!If @@@@index@@@@ < 0
!!Goto  EndMakeHeaderDefined
!!Endif
!!// Replace occurences of '.' in fb by '_' and set to result.
!!Set result @@@@(StrSub @@@@fn@@@@ 0 @@@@index@@@@ )@@@@_
!!Add index 1
!!Set result @@@@result@@@@@@@@(StrSub @@@@fn@@@@ @@@@index@@@@)@@@@
!!Goto LoopMakeHeaderDefined
!!Label EndMakeHeaderDefined
!!Return CPPUNIT_@@@@result@@@@
!!End

---------------------------------------------------------------------------------
----------------------------   [-MakeFiller]   ----------------------------------
---------------------------------------------------------------------------------
[-MakeFiller]
!!Memo
Make a string that contains "count" occurrence of "filler".
Parameters: "filler" String that is repeated.
            "count" Number of times the "filler" is repeated.
Returns: A string that contains "count" times the string "filler".
!!End

!!Params
filler -
count 10
!!End

!!Code
!!Set result
!!Label LoopMakerFiller
!!If @@@@count@@@@ > 0
!!Set result @@@@result@@@@@@@@filler@@@@
!!Sub count 1
!!Goto LoopMakerFiller
!!Endif
!!Return @@@@result@@@@
!!End@


1.2
log
@* Makefile.am: added examples/qt to tar ball release.

* TODO: heavily updated.

* contrib/msvc/CppUnit*.wwtpl: changed base class for unit test to TestFixture.

* include/cppunit/Test.h: removed toString() method. Not used by the framework
  and source of confusions with getName().
  Added getChildTestCount() and getChildTestAt(), introducing the composite pattern
  at top level. Added utility methods findTest() and findTestPath().

* src/cppunit/Test.cpp: added. Implementation of new utility methods.

* include/cppunit/TestCase.h:
* src/cppunit/TestCase.cpp: inherits TestLeaf. Removed toString(), run(void) and
  defaultResult(). Removed default constructor.

* src/cppunit/TestCase.cpp:
* src/cppunit/TestSuite.cpp: fixed some includes that used "" instead of <>.

* include/cppunit/TestComposite.h:
* src/cppunit/TestComposite.cpp: added. Common implementation of Test for composite
  tests (TestSuite).

* include/cppunit/TestFailure.h:
* src/cppunit/TestFailure.cpp: removed toString().

* include/cppunit/TestLeaf.h:
* src/cppunit/TestLeaf.cpp: added. Common implementation of Test for single test
  (TestCase).

* include/cppunit/TestListener.h: added TimingListener example to documentation.

* include/cppunit/TestPath.h:
* src/cppunit/TestPath.cpp: added. List of test traversed to access a test in the
  test hierarchy.

* include/cppunit/TestRunner.h: added. Generic TestRunner.

* src/cppunit/TestRunner.cpp: moved to TextTestRunner.cpp. Added new implementation
  of includecppunit/TestRunner.h.

* include/cppunit/TestSuite.h:
* src/cppunit/TestSuite.cpp: inherits TestComposite and implements new Test
  interface. Removed toString().

* src/cppunit/TextTestRunner.cpp: moved from TestRunner.cpp. Implementation of
  include/cppunit/ui/text/TestRunner.h.

* include/cppunit/extensions/RepeatedTest.h:
* src/cppunit/RepeatedTest.cpp: removed toString().

* include/cppunit/extensions/TestDecorator.h: inherits TestLeaf.
  Removed toString()

* include/cppunit/XmlOutputter.h:
* src/cppunit/XmlOutputter.cpp:
* examples/cppunittest/XmlOutputterTest.cpp:
* examples/cppunittest/XmlOutputterTest.h: XML outputter now escape node content.
  Add unit test for that bug (#540944). Added style sheet support. Modified
  XML structure: failure message as its own element.

* src/msvc/testrunner/TestRunnerModel.h:
* src/msvc/testrunner/TestRunnerModel.cpp: used Test::findTest() to find a test
  by name instead of using RTTI. Added toAnsiString() for convertion when
  compiling as UNICODE.

* src/msvc/testrunner/TreeHierarchyDlg.h:
* src/msvc/testrunner/TreeHierarchyDlg.cpp: used new composite interface of Test
  to explorer the test hierarchy instead of RTTI.

* examples/cppunittest/TestPathTest.h:
* examples/cppunittest/TestPathTest.cpp: added, unit tests for TestPath.

* examples/cppunittest/TestCaseTest.h:
* examples/cppunittest/TestCaseTest.cpp: added test for TestLeaf.

* examples/cppunittest/TestSuiteTest.h:
* examples/cppunittest/TestSuiteTest.cpp: added test for TestComposite and
  new Test interface.
@
text
@d117 1
a117 1
!!Set headerdefine @@@@(String @@@@(Call -MakeHeaderDefined fn @@@@headerfn@@@@)@@@@:U)@@@@
@


1.1
log
@* include/cppunit/CompilerTestResultOutputter.h :
renamed CompilerOutputter.h

* src/cppunit/CompilerTestResultOutputter.cpp :
renamed CompilerOutputter.cpp

* include/cppunit/CompilerTestResultOutputter.h :
* src/cppunit/CompilerTestResultOutputter.cpp : ajust max line length
for wrapping. Added static factory method defaultOutputter(). Print
the number of test runs on success.

* include/cppunit/CompilerTestResultOutputter.h : renamed
CompilerOutputter.h.

* src/cppunit/CompilerTestResultOutputter.cpp : renamed
CompilerOutputter.cpp.

* examples/cppunittest/CppUnitTestMain.cpp : use factory method
CompilerTestResultOutputter::defaultOutputter().

* src/msvc6/DSPlugIn/DSPlugIn.dsp : removed COM registration in
post-build step. IT is automatically done by VC++ when the add-in is
added. Caused build to failed if the add-in was used in VC++.

* NEWS : updated.

* src/cppunit/TestAssert.cpp : modified deprecated assert
implementations to use Asserter.

* examples/cppunittest/XmlTestResultOutputterTest.h :
renamed XmlOutputterTest.h.

* examples/cppunittest/XmlTestResultOutputterTest.cpp :
renamed XmlOutputterTest.cpp.

* NEWS :
* examples/cppunittest/CppUnitTestMain.cpp :
* examples/cppunittest/CppUnitTestMain.dsp :
* examples/cppunittest/Makefile.am :
* examples/cppunittest/XmlTestResultOutputterTest.h :
* examples/cppunittest/XmlTestResultOutputterTest.cpp :
* examples/msvc6/CppUniTestApp/CppUnitTestApp.dsp
* include/cppunit/CompilerOutputter.h :
* include/cppunit/Makefile.am :
* include/cppunit/XmlTestResultOutputter.h :
* src/cppunit/CompilerOutputter.cpp :
* src/cppunit/cppunit.dsp :
* src/cppunit/Makefile.am :
* src/cppunit/XmlTestResultOutputter.cpp : change due to renaming
CompilerTestResultOutputter to CompilerOutputter,
XmlTestResultOutputter to XmlOuputter, XmlTestResultOutputterTest
to XmlOutputterTest.
@
text
@d125 1
a125 1
!!Set parentclassname CppUnit::TestCase
@

