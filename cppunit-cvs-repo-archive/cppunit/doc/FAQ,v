head	1.5;
access;
symbols
	REL_1_12_1:1.5
	REL_1_11_6:1.5
	REL_1_11_4:1.5
	REL_1_11_0:1.5
	TG_CPPUNIT_NO_STREAM_AFTER:1.5
	TG_CPPUNIT_NO_STREAM_BEFORE:1.5
	REL_1_10_2:1.5
	REL_1_10_0:1.5
	REL_1_9_14:1.5
	REL_1_9_12:1.5
	BRANCH_1_9_12:1.5.0.2
	TG_BRANCH_1_9_12:1.5
	TG_BEFORE_HPUX_PLUGIN:1.5
	TG_BEFORE_SUN4_PORT:1.5
	REL_1_9_10:1.5
	TG_AFTER_REMOVE_NOTEQUAL_EXCEPTION:1.4
	TG_BEFORE_REMOVE_NOTEQUAL_EXCEPTION:1.4
	REL_1_9_6:1.4
	REL_1_9_4:1.4
	REL_1_9_0:1.3
	REL_1_8_0:1.3
	REL_1_7_8:1.2
	REL_1_7_3:1.2
	REL_1_7_1:1.2
	REL_1_6_2:1.1
	BRANCH_1_6:1.1.0.2
	REL_1_6_1:1.1;
locks; strict;
comment	@# @;


1.5
date	2002.08.27.21.51.09;	author blep;	state Exp;
branches;
next	1.4;

1.4
date	2002.04.17.22.27.27;	author blep;	state Exp;
branches;
next	1.3;

1.3
date	2002.04.11.09.53.07;	author blep;	state Exp;
branches;
next	1.2;

1.2
date	2001.10.06.10.16.31;	author blep;	state Exp;
branches;
next	1.1;

1.1
date	2001.09.30.18.47.32;	author blep;	state Exp;
branches;
next	;


desc
@@


1.5
log
@* CodingGuideLines.txt: updated for OS/390 C++ limitation.

* examples/cppunittests/MockFunctor.h: added. Mock Functor to help
  testing.

* examples/cppunittests/MockProtector.h: qdded. Mock Protector to help
  testing.

* examples/cppunittests/TestResultTest.h
* examples/cppunittests/TestResultTest.cpp: added tests for
  pushProtector(), popProtector() and protect().

* include/cppunit/TestAssert.h: removed default message value from
  assertEquals(). Caused compilation error on OS/390.

* include/cppunit/plugin/PlugInParameters.h:
* src/cppunit/PlugInParameters.cpp: renamed commandLine() to
  getCommandLine().

* src/msvc6/testrunner/TestRunnerDlg.h:
* src/msvc6/testrunner/TestRunnerDlg.cpp: bug fix, disabled Browse
  button while running tests.
@
text
@Frequently Asked Questions:
---------------------------

1) Questions relating to CppUnit
   ----------------------------

1.1) Isn't there an easier way to write unit tests than using TestCaller ?

   Yes, there is. Macros have been created to take care of the repetitive 
work. Look up include/extensions/HelperMacros.h in CppUnit documentation. 
Most of CppUnit test suite is also written that way since they remain 
compatible as CppUnit evolve. They also use RTTI if available.


2) Questions related to Microsoft Visual VC++
   -----------------------------------------

2.1) Why does the compiler report an error when linking with CppUnit library?

   You most likely are not using the same C-RunTime library as CppUnit.
   In Release configuration, CppUnit use "Mulithreaded DLL".
   In Debug configurations, CppUnit use "Debug Multihreaded DLL".
   Check that Projects/Settings.../C++/Code Generation is indeed using
the correct library.
   
2.2) Why does CppUnit generate warning 4786:... when compiling ?

   I really don't have a clue. All CppUnit's headers starts by either
including Portability.h or another CppUnit's header. Portability.h includes
config-msvc6.h which disable that specific warning. The warning is generated
by TestFactoryRegistry::m_factories. A solution to this problem is welcome.@


1.4
log
@* bumped version to 1.9.3

* FAQ: added question about 4786 warning on VC++.

* NEWS: updated.

* contrib/msvc/readme.txt: moved to contrib/readme.txt.

* contrib/xml-xsl/report.xsl: added XML style sheet contributed by
'cuppa' project team (http://sourceforge.jp/projects/cuppa/)

* examples/cppunittest/TestResultTest.h:
* examples/cppunittest/TestResultTest.cpp: added tests for
  startTestRun()/endTestRun().

* examples/simple/*: added. A simple example.

* include/cppunit/BriefTestProgressListener.h:
* src/cppunit/BriefTestProgressListener.cpp: added. Verbose progess listener
  that print the test name before running the test.

* include/cppunit/TestListener.h: added startTestRun()/endTestRun().

* include/cppunit/TestResult.h:
* src/cppunit/TestResult.cpp: added runTest(), to be called to run
  a test by test runner.

* src/cppunit/TextTestRunner.cpp:
* src/cppunit/TestRunner.cpp: updated to use TestResult::runTest().

* include/cppunit/plugin/PlugInManager.h:
* src/cppunit/PlugInManager.cpp: added. Managers for all loaded plug-ins.

* include/cppunit/plugin/TestPlugInDefaultImpl.h:
* src/cppunit/TestPlugInDefaultImpl.cpp: renamed TestPlugInAdapter. All
  implementations are empty.

* include/cppunit/plugin/TestPlugInSuite.h: removed.
* src/cppunit/TestPlugInSuite.cpp: removed. Replaced by PlugInManager.

* include/cppunit/plugin/TestPlugIn.h: rewrote the plug-in interface to
  provide more versatility. updated macros to match new interface.

* include/cppunit/extensions/TestFactoryRegistry.h:
* include/cppunit/extensions/TestFactoryRegistry.cpp: Added unregisterFactory().
  Added convenience method addRegistry(). Rewrote registry life cycle
  management. AutoRegisterSuite can now detect that the registry has been
  destroy and not call to it to unregister its test factory.

* include/cppunit/extensions/AutoRegisterTest.h: on destruction, the registered
  factory is unregistered from the registry.

* include/cppunit/extensions/HelperMacros.h: added macros
  CPPUNIT_REGISTRY_ADD_TO_DEFAULT and CPPUNIT_REGISTRY_ADD to help
  build test suite hierarchy.

* src/cppunit/msvc/DllPlugInTester/*: moved to src/cppunit/DllPlugInTester/.

* src/cppunit/DllPlugInTester/DllPlugInTester.cpp: removed UNICODE stuffs. Use
  the PlugInManager instead of PlugInTestSuite. Simplified: only one test on
  command line, but many DLL can be specified. Added configurations to link
  against cppunit dll, those are now the default configuration (static linking
  don't make much sense for plug-in).
@
text
@d1 1
a1 1
Asked Questions:
@


1.3
log
@* doc/FAQ: removed question about the Exception::operator =() problem.

* release 1.8.0
@
text
@d18 1
a18 8
2.1) Why does my application crash when I use CppUnit?
   
   You probably forgot to enable RTTI in your project/configuration.
RTTI are disabled by default. 
   Enable RTTI in Projects/Settings.../C++/C++ Language. Make sure to
do so for all configurations.

2.2) Why does the compiler report an error when linking with CppUnit library?
d25 7
a31 1
   @


1.2
log
@* examples/cppunittest/CppUnitTestMain.cpp : application returns
0 is test suite run sucessfuly, 1 otherwise.

* src/cppunit/Exception.cpp : bug fix, operator =() with VC++.
Removed call to std::exception::operator =() which is bugged
on VC++.

* doc/FAQ : added a note explaining why the test
ExceptionTest.testAssignment used to fail.

* NEWS : updated and detailed.

* include/cppunit/TestResult.h :
* src/cppunit/TestResult.cpp : added reset().

* include/cppunit/TextTestRunner.h :
* src/cppunit/TextTestRunner.cpp : Constructor take an optional
TextTestRestult. The TextTestResult remain alive as long as
the runner. Added result() to retreive the result. Printing the
result is now optinal (enabled by default).
@
text
@a31 10

2.3) Why does the test ExceptionTest.testAssignment use to failed in CppUnit 
     test suite?

   Thanks to Phil Taylor who gave me a partial answer, we have been able to
   figure it out. VC++ STL implementation of std::exception::operator =()
   call the destructor and copy constructor. This reset the virtual table
   to std::exception virtual table. Therefore, all consecutive call to
   the virtual method what() will call the std::exception::what() instead
   of CppUnit::Exception::what().
@


1.1
log
@* doc/FAQ:
* INSTALL-WIN32.txt: moved FAQ from install-WIN32 to that file. Added
a generic question to hint at the helper macros.
@
text
@d1 1
a1 1
Frequently Asked Questions:
d33 2
a34 2
2.3) Why does the test ExceptionTest.testAssignment failed in CppUnit test 
   suite?
d36 7
a42 3
   I've never been able to figure out why that test fails.  It seems
to be specific to VC++ since the test passes with gcc.  If you can figure
out the failure, please let us know!
@

