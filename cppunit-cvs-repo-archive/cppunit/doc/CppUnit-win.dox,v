head	1.10;
access;
symbols
	REL_1_12_1:1.10
	REL_1_11_6:1.10
	REL_1_11_4:1.10
	REL_1_11_0:1.10
	TG_CPPUNIT_NO_STREAM_AFTER:1.9
	TG_CPPUNIT_NO_STREAM_BEFORE:1.9
	REL_1_10_2:1.9
	REL_1_10_0:1.9
	REL_1_9_14:1.9
	REL_1_9_12:1.9
	BRANCH_1_9_12:1.9.0.2
	TG_BRANCH_1_9_12:1.9
	TG_BEFORE_HPUX_PLUGIN:1.9
	TG_BEFORE_SUN4_PORT:1.9
	REL_1_9_10:1.9
	TG_AFTER_REMOVE_NOTEQUAL_EXCEPTION:1.7
	TG_BEFORE_REMOVE_NOTEQUAL_EXCEPTION:1.7
	REL_1_9_6:1.6
	REL_1_9_4:1.5
	REL_1_9_0:1.3
	REL_1_8_0:1.2;
locks; strict;
comment	@# @;


1.10
date	2005.07.09.07.42.36;	author blep;	state Exp;
branches;
next	1.9;

1.9
date	2002.07.13.10.33.48;	author blep;	state Exp;
branches;
next	1.8;

1.8
date	2002.07.12.05.59.54;	author blep;	state Exp;
branches;
next	1.7;

1.7
date	2002.04.23.10.01.51;	author blep;	state Exp;
branches;
next	1.6;

1.6
date	2002.04.20.21.51.32;	author blep;	state Exp;
branches;
next	1.5;

1.5
date	2002.04.19.10.54.19;	author blep;	state Exp;
branches;
next	1.4;

1.4
date	2002.04.15.15.17.40;	author blep;	state Exp;
branches;
next	1.3;

1.3
date	2002.04.12.19.28.46;	author blep;	state Exp;
branches;
next	1.2;

1.2
date	2002.04.10.15.19.04;	author blep;	state Exp;
branches;
next	1.1;

1.1
date	2002.03.28.15.50.09;	author blep;	state Exp;
branches;
next	;


desc
@@


1.10
log
@* doc/Money.dox:
* include/cppunit/TestSuite.h:
* include/cppunit/XmlOutputterHook.h: applied Brad Hards patch
  that correct miscellaneous doc generation issues (unescaped <>, \...).

* include/cppunit/plugin/TestPlugIn.h:
* include/cppunit/CompilerOutputter.h:
* doc/CppUnit-win.dox: removed a few documentation generation warnings.

  * include/cppunit/plugin/TestPlugIn.h:
  * include/cppunit/CompilerOutputter.h:
  * doc/CppUnit-win.dox: removed a few documentation generation warnings.
@
text
@# Doxyfile 1.2.16

# This file describes the settings to be used by the documentation system
# doxygen (www.doxygen.org) for a project
#
# All text after a hash (#) is considered a comment and will be ignored
# The format is:
#       TAG = value [value, ...]
# For lists items can also be appended using:
#       TAG += value [value, ...]
# Values that contain spaces should be placed between quotes (" ")

#---------------------------------------------------------------------------
# General configuration options
#---------------------------------------------------------------------------

# The PROJECT_NAME tag is a single word (or a sequence of words surrounded 
# by quotes) that should identify the project.

PROJECT_NAME           = CppUnit

# The PROJECT_NUMBER tag can be used to enter a project or revision number. 
# This could be handy for archiving the generated documentation or 
# if some version control system is used.

PROJECT_NUMBER         = $(VERSION)

# The OUTPUT_DIRECTORY tag is used to specify the (relative or absolute) 
# base path where the generated documentation will be put. 
# If a relative path is entered, it will be relative to the location 
# where doxygen was started. If left blank the current directory will be used.

OUTPUT_DIRECTORY       = 

# The OUTPUT_LANGUAGE tag is used to specify the language in which all 
# documentation generated by doxygen is written. Doxygen will use this 
# information to generate all constant output in the proper language. 
# The default language is English, other supported languages are: 
# Brazilian, Chinese, Chinese-Traditional, Croatian, Czech, Danish, Dutch, 
# Finnish, French, German, Greek, Hungarian, Italian, Japanese, Korean, 
# Norwegian, Polish, Portuguese, Romanian, Russian, Slovak, Slovene, 
# Spanish, Swedish and Ukrainian.

OUTPUT_LANGUAGE        = English

# If the EXTRACT_ALL tag is set to YES doxygen will assume all entities in 
# documentation are documented, even if no documentation was available. 
# Private class members and static file members will be hidden unless 
# the EXTRACT_PRIVATE and EXTRACT_STATIC tags are set to YES

EXTRACT_ALL            = YES

# If the EXTRACT_PRIVATE tag is set to YES all private members of a class 
# will be included in the documentation.

EXTRACT_PRIVATE        = YES

# If the EXTRACT_STATIC tag is set to YES all static members of a file 
# will be included in the documentation.

EXTRACT_STATIC         = NO

# If the EXTRACT_LOCAL_CLASSES tag is set to YES classes (and structs) 
# defined locally in source files will be included in the documentation. 
# If set to NO only classes defined in header files are included.

EXTRACT_LOCAL_CLASSES  = YES

# If the HIDE_UNDOC_MEMBERS tag is set to YES, Doxygen will hide all 
# undocumented members of documented classes, files or namespaces. 
# If set to NO (the default) these members will be included in the 
# various overviews, but no documentation section is generated. 
# This option has no effect if EXTRACT_ALL is enabled.

HIDE_UNDOC_MEMBERS     = NO

# If the HIDE_UNDOC_CLASSES tag is set to YES, Doxygen will hide all 
# undocumented classes that are normally visible in the class hierarchy. 
# If set to NO (the default) these class will be included in the various 
# overviews. This option has no effect if EXTRACT_ALL is enabled.

HIDE_UNDOC_CLASSES     = NO

# If the BRIEF_MEMBER_DESC tag is set to YES (the default) Doxygen will 
# include brief member descriptions after the members that are listed in 
# the file and class documentation (similar to JavaDoc). 
# Set to NO to disable this.

BRIEF_MEMBER_DESC      = YES

# If the REPEAT_BRIEF tag is set to YES (the default) Doxygen will prepend 
# the brief description of a member or function before the detailed description. 
# Note: if both HIDE_UNDOC_MEMBERS and BRIEF_MEMBER_DESC are set to NO, the 
# brief descriptions will be completely suppressed.

REPEAT_BRIEF           = YES

# If the ALWAYS_DETAILED_SEC and REPEAT_BRIEF tags are both set to YES then 
# Doxygen will generate a detailed section even if there is only a brief 
# description.

ALWAYS_DETAILED_SEC    = NO

# If the INLINE_INHERITED_MEMB tag is set to YES, doxygen will show all inherited 
# members of a class in the documentation of that class as if those members were 
# ordinary class members. Constructors, destructors and assignment operators of 
# the base classes will not be shown.

INLINE_INHERITED_MEMB  = NO

# If the FULL_PATH_NAMES tag is set to YES then Doxygen will prepend the full 
# path before files name in the file list and in the header files. If set 
# to NO the shortest path that makes the file name unique will be used.

FULL_PATH_NAMES        = YES

# If the FULL_PATH_NAMES tag is set to YES then the STRIP_FROM_PATH tag 
# can be used to strip a user defined part of the path. Stripping is 
# only done if one of the specified strings matches the left-hand part of 
# the path. It is allowed to use relative paths in the argument list.

STRIP_FROM_PATH        = G:/prg/vc/Lib/cppunit/include/ \
                         G:/prg/vc/Lib/cppunit/

# The INTERNAL_DOCS tag determines if documentation 
# that is typed after a \internal command is included. If the tag is set 
# to NO (the default) then the documentation will be excluded. 
# Set it to YES to include the internal documentation.

INTERNAL_DOCS          = NO

# Setting the STRIP_CODE_COMMENTS tag to YES (the default) will instruct 
# doxygen to hide any special comment blocks from generated source code 
# fragments. Normal C and C++ comments will always remain visible.

STRIP_CODE_COMMENTS    = YES

# If the CASE_SENSE_NAMES tag is set to NO then Doxygen will only generate 
# file names in lower case letters. If set to YES upper case letters are also 
# allowed. This is useful if you have classes or files whose names only differ 
# in case and if your file system supports case sensitive file names. Windows 
# users are adviced to set this option to NO.

CASE_SENSE_NAMES       = YES

# If the SHORT_NAMES tag is set to YES, doxygen will generate much shorter 
# (but less readable) file names. This can be useful is your file systems 
# doesn't support long names like on DOS, Mac, or CD-ROM.

SHORT_NAMES            = NO

# If the HIDE_SCOPE_NAMES tag is set to NO (the default) then Doxygen 
# will show members with their full class and namespace scopes in the 
# documentation. If set to YES the scope will be hidden.

HIDE_SCOPE_NAMES       = NO

# If the VERBATIM_HEADERS tag is set to YES (the default) then Doxygen 
# will generate a verbatim copy of the header file for each class for 
# which an include is specified. Set to NO to disable this.

VERBATIM_HEADERS       = YES

# If the SHOW_INCLUDE_FILES tag is set to YES (the default) then Doxygen 
# will put list of the files that are included by a file in the documentation 
# of that file.

SHOW_INCLUDE_FILES     = YES

# If the JAVADOC_AUTOBRIEF tag is set to YES then Doxygen 
# will interpret the first line (until the first dot) of a JavaDoc-style 
# comment as the brief description. If set to NO, the JavaDoc 
# comments  will behave just like the Qt-style comments (thus requiring an 
# explict @@brief command for a brief description.

JAVADOC_AUTOBRIEF      = YES

# If the DETAILS_AT_TOP tag is set to YES then Doxygen 
# will output the detailed description near the top, like JavaDoc.
# If set to NO, the detailed description appears after the member 
# documentation.

DETAILS_AT_TOP         = NO

# If the INHERIT_DOCS tag is set to YES (the default) then an undocumented 
# member inherits the documentation from any documented member that it 
# reimplements.

INHERIT_DOCS           = YES

# If the INLINE_INFO tag is set to YES (the default) then a tag [inline] 
# is inserted in the documentation for inline members.

INLINE_INFO            = YES

# If the SORT_MEMBER_DOCS tag is set to YES (the default) then doxygen 
# will sort the (detailed) documentation of file and class members 
# alphabetically by member name. If set to NO the members will appear in 
# declaration order.

SORT_MEMBER_DOCS       = YES

# If member grouping is used in the documentation and the DISTRIBUTE_GROUP_DOC 
# tag is set to YES, then doxygen will reuse the documentation of the first 
# member in the group (if any) for the other members of the group. By default 
# all members of a group must be documented explicitly.

DISTRIBUTE_GROUP_DOC   = NO

# The TAB_SIZE tag can be used to set the number of spaces in a tab. 
# Doxygen uses this value to replace tabs by spaces in code fragments.

TAB_SIZE               = 8

# The GENERATE_TODOLIST tag can be used to enable (YES) or 
# disable (NO) the todo list. This list is created by putting \todo 
# commands in the documentation.

GENERATE_TODOLIST      = YES

# The GENERATE_TESTLIST tag can be used to enable (YES) or 
# disable (NO) the test list. This list is created by putting \test 
# commands in the documentation.

GENERATE_TESTLIST      = YES

# The GENERATE_BUGLIST tag can be used to enable (YES) or 
# disable (NO) the bug list. This list is created by putting \bug 
# commands in the documentation.

GENERATE_BUGLIST       = YES

# This tag can be used to specify a number of aliases that acts 
# as commands in the documentation. An alias has the form "name=value". 
# For example adding "sideeffect=\par Side Effects:\n" will allow you to 
# put the command \sideeffect (or @@sideeffect) in the documentation, which 
# will result in a user defined paragraph with heading "Side Effects:". 
# You can put \n's in the value part of an alias to insert newlines.

ALIASES                = 

# The ENABLED_SECTIONS tag can be used to enable conditional 
# documentation sections, marked by \if sectionname ... \endif.

ENABLED_SECTIONS       = 

# The MAX_INITIALIZER_LINES tag determines the maximum number of lines 
# the initial value of a variable or define consist of for it to appear in 
# the documentation. If the initializer consists of more lines than specified 
# here it will be hidden. Use a value of 0 to hide initializers completely. 
# The appearance of the initializer of individual variables and defines in the 
# documentation can be controlled using \showinitializer or \hideinitializer 
# command in the documentation regardless of this setting.

MAX_INITIALIZER_LINES  = 

# Set the OPTIMIZE_OUTPUT_FOR_C tag to YES if your project consists of C sources 
# only. Doxygen will then generate output that is more tailored for C. 
# For instance some of the names that are used will be different. The list 
# of all members will be omitted, etc.

OPTIMIZE_OUTPUT_FOR_C  = NO

# Set the OPTIMIZE_OUTPUT_JAVA tag to YES if your project consists of Java sources 
# only. Doxygen will then generate output that is more tailored for Java. 
# For instance namespaces will be presented as packages, qualified scopes 
# will look different, etc.

OPTIMIZE_OUTPUT_JAVA   = NO

# Set the SHOW_USED_FILES tag to NO to disable the list of files generated 
# at the bottom of the documentation of classes and structs. If set to YES the 
# list will mention the files that were used to generate the documentation.

SHOW_USED_FILES        = YES

#---------------------------------------------------------------------------
# configuration options related to warning and progress messages
#---------------------------------------------------------------------------

# The QUIET tag can be used to turn on/off the messages that are generated 
# by doxygen. Possible values are YES and NO. If left blank NO is used.

QUIET                  = NO

# The WARNINGS tag can be used to turn on/off the warning messages that are 
# generated by doxygen. Possible values are YES and NO. If left blank 
# NO is used.

WARNINGS               = YES

# If WARN_IF_UNDOCUMENTED is set to YES, then doxygen will generate warnings 
# for undocumented members. If EXTRACT_ALL is set to YES then this flag will 
# automatically be disabled.

WARN_IF_UNDOCUMENTED   = YES

# The WARN_FORMAT tag determines the format of the warning messages that 
# doxygen can produce. The string should contain the $file, $line, and $text 
# tags, which will be replaced by the file and line number from which the 
# warning originated and the warning text.

WARN_FORMAT            = "$file:$line: $text"

# The WARN_LOGFILE tag can be used to specify a file to which warning 
# and error messages should be written. If left blank the output is written 
# to stderr.

WARN_LOGFILE           = CppUnit-dox.log

#---------------------------------------------------------------------------
# configuration options related to the input files
#---------------------------------------------------------------------------

# The INPUT tag can be used to specify the files and/or directories that contain 
# documented source files. You may enter file names like "myfile.cpp" or 
# directories like "/usr/src/myproject". Separate the files or directories 
# with spaces.

INPUT                  = ../include \
                         ../src/cppunit \
                         other_documentation.dox \
                         cookbook.dox \
                         Money.dox

# If the value of the INPUT tag contains directories, you can use the 
# FILE_PATTERNS tag to specify one or more wildcard pattern (like *.cpp 
# and *.h) to filter out the source-files in the directories. If left 
# blank the following patterns are tested: 
# *.c *.cc *.cxx *.cpp *.c++ *.java *.ii *.ixx *.ipp *.i++ *.inl *.h *.hh *.hxx *.hpp 
# *.h++ *.idl *.odl

FILE_PATTERNS          = *.cpp \
                         *.h

# The RECURSIVE tag can be used to turn specify whether or not subdirectories 
# should be searched for input files as well. Possible values are YES and NO. 
# If left blank NO is used.

RECURSIVE              = YES

# The EXCLUDE tag can be used to specify files and/or directories that should 
# excluded from the INPUT source files. This way you can easily exclude a 
# subdirectory from a directory tree whose root is specified with the INPUT tag.

EXCLUDE                = 

# The EXCLUDE_SYMLINKS tag can be used select whether or not files or directories 
# that are symbolic links (a Unix filesystem feature) are excluded from the input.

EXCLUDE_SYMLINKS       = NO

# If the value of the INPUT tag contains directories, you can use the 
# EXCLUDE_PATTERNS tag to specify one or more wildcard patterns to exclude 
# certain files from those directories.

EXCLUDE_PATTERNS       = config-*.h \
                         */CVS/* \
                         */include/msvc6/DSPlugin/*

# The EXAMPLE_PATH tag can be used to specify one or more files or 
# directories that contain example code fragments that are included (see 
# the \include command).

EXAMPLE_PATH           = examples

# If the value of the EXAMPLE_PATH tag contains directories, you can use the 
# EXAMPLE_PATTERNS tag to specify one or more wildcard pattern (like *.cpp 
# and *.h) to filter out the source-files in the directories. If left 
# blank all files are included.

EXAMPLE_PATTERNS       = *.cpp \
                         *.h

# If the EXAMPLE_RECURSIVE tag is set to YES then subdirectories will be 
# searched for input files to be used with the \include or \dontinclude 
# commands irrespective of the value of the RECURSIVE tag. 
# Possible values are YES and NO. If left blank NO is used.

EXAMPLE_RECURSIVE      = NO

# The IMAGE_PATH tag can be used to specify one or more files or 
# directories that contain image that are included in the documentation (see 
# the \image command).

IMAGE_PATH             = 

# The INPUT_FILTER tag can be used to specify a program that doxygen should 
# invoke to filter for each input file. Doxygen will invoke the filter program 
# by executing (via popen()) the command <filter> <input-file>, where <filter> 
# is the value of the INPUT_FILTER tag, and <input-file> is the name of an 
# input file. Doxygen will then use the output that the filter program writes 
# to standard output.

INPUT_FILTER           = 

# If the FILTER_SOURCE_FILES tag is set to YES, the input filter (if set using 
# INPUT_FILTER) will be used to filter the input files when producing source 
# files to browse.

FILTER_SOURCE_FILES    = NO

#---------------------------------------------------------------------------
# configuration options related to source browsing
#---------------------------------------------------------------------------

# If the SOURCE_BROWSER tag is set to YES then a list of source files will 
# be generated. Documented entities will be cross-referenced with these sources.

SOURCE_BROWSER         = NO

# Setting the INLINE_SOURCES tag to YES will include the body 
# of functions and classes directly in the documentation.

INLINE_SOURCES         = NO

# If the REFERENCED_BY_RELATION tag is set to YES (the default) 
# then for each documented function all documented 
# functions referencing it will be listed.

REFERENCED_BY_RELATION = YES

# If the REFERENCES_RELATION tag is set to YES (the default) 
# then for each documented function all documented entities 
# called/used by that function will be listed.

REFERENCES_RELATION    = YES

#---------------------------------------------------------------------------
# configuration options related to the alphabetical class index
#---------------------------------------------------------------------------

# If the ALPHABETICAL_INDEX tag is set to YES, an alphabetical index 
# of all compounds will be generated. Enable this if the project 
# contains a lot of classes, structs, unions or interfaces.

ALPHABETICAL_INDEX     = YES

# If the alphabetical index is enabled (see ALPHABETICAL_INDEX) then 
# the COLS_IN_ALPHA_INDEX tag can be used to specify the number of columns 
# in which this list will be split (can be a number in the range [1..20])

COLS_IN_ALPHA_INDEX    = 5

# In case all classes in a project start with a common prefix, all 
# classes will be put under the same header in the alphabetical index. 
# The IGNORE_PREFIX tag can be used to specify one or more prefixes that 
# should be ignored while generating the index headers.

IGNORE_PREFIX          = 

#---------------------------------------------------------------------------
# configuration options related to the HTML output
#---------------------------------------------------------------------------

# If the GENERATE_HTML tag is set to YES (the default) Doxygen will 
# generate HTML output.

GENERATE_HTML          = YES

# The HTML_OUTPUT tag is used to specify where the HTML docs will be put. 
# If a relative path is entered the value of OUTPUT_DIRECTORY will be 
# put in front of it. If left blank `html' will be used as the default path.

HTML_OUTPUT            = html

# The HTML_FILE_EXTENSION tag can be used to specify the file extension for 
# each generated HTML page (for example: .htm,.php,.asp). If it is left blank 
# doxygen will generate files with .html extension.

HTML_FILE_EXTENSION    = .html

# The HTML_HEADER tag can be used to specify a personal HTML header for 
# each generated HTML page. If it is left blank doxygen will generate a 
# standard header.

HTML_HEADER            = header.html

# The HTML_FOOTER tag can be used to specify a personal HTML footer for 
# each generated HTML page. If it is left blank doxygen will generate a 
# standard footer.

HTML_FOOTER            = footer.html

# The HTML_STYLESHEET tag can be used to specify a user defined cascading 
# style sheet that is used by each HTML page. It can be used to 
# fine-tune the look of the HTML output. If the tag is left blank doxygen 
# will generate a default style sheet

HTML_STYLESHEET        = 

# If the HTML_ALIGN_MEMBERS tag is set to YES, the members of classes, 
# files or namespaces will be aligned in HTML using tables. If set to 
# NO a bullet list will be used.

HTML_ALIGN_MEMBERS     = YES

# If the GENERATE_HTMLHELP tag is set to YES, additional index files 
# will be generated that can be used as input for tools like the 
# Microsoft HTML help workshop to generate a compressed HTML help file (.chm) 
# of the generated HTML documentation.

GENERATE_HTMLHELP      = YES

# If the GENERATE_HTMLHELP tag is set to YES, the GENERATE_CHI flag 
# controls if a separate .chi index file is generated (YES) or that 
# it should be included in the master .chm file (NO).

GENERATE_CHI           = YES

# If the GENERATE_HTMLHELP tag is set to YES, the BINARY_TOC flag 
# controls whether a binary table of contents is generated (YES) or a 
# normal table of contents (NO) in the .chm file.

BINARY_TOC             = YES

# The TOC_EXPAND flag can be set to YES to add extra items for group members 
# to the contents of the Html help documentation and to the tree view.

TOC_EXPAND             = YES

# The DISABLE_INDEX tag can be used to turn on/off the condensed index at 
# top of each HTML page. The value NO (the default) enables the index and 
# the value YES disables it.

DISABLE_INDEX          = NO

# This tag can be used to set the number of enum values (range [1..20]) 
# that doxygen will group on one line in the generated HTML documentation.

ENUM_VALUES_PER_LINE   = 

# If the GENERATE_TREEVIEW tag is set to YES, a side panel will be
# generated containing a tree-like index structure (just like the one that 
# is generated for HTML Help). For this to work a browser that supports 
# JavaScript and frames is required (for instance Mozilla, Netscape 4.0+, 
# or Internet explorer 4.0+). Note that for large projects the tree generation 
# can take a very long time. In such cases it is better to disable this feature. 
# Windows users are probably better off using the HTML help feature.

GENERATE_TREEVIEW      = NO

# If the treeview is enabled (see GENERATE_TREEVIEW) then this tag can be 
# used to set the initial width (in pixels) of the frame in which the tree 
# is shown.

TREEVIEW_WIDTH         = 

#---------------------------------------------------------------------------
# configuration options related to the LaTeX output
#---------------------------------------------------------------------------

# If the GENERATE_LATEX tag is set to YES (the default) Doxygen will 
# generate Latex output.

GENERATE_LATEX         = NO

# The LATEX_OUTPUT tag is used to specify where the LaTeX docs will be put. 
# If a relative path is entered the value of OUTPUT_DIRECTORY will be 
# put in front of it. If left blank `latex' will be used as the default path.

LATEX_OUTPUT           = latex

# The LATEX_CMD_NAME tag can be used to specify the LaTeX command name to be invoked. If left blank `latex' will be used as the default command name.

LATEX_CMD_NAME         = latex

# The MAKEINDEX_CMD_NAME tag can be used to specify the command name to 
# generate index for LaTeX. If left blank `makeindex' will be used as the 
# default command name.

MAKEINDEX_CMD_NAME     = makeindex

# If the COMPACT_LATEX tag is set to YES Doxygen generates more compact 
# LaTeX documents. This may be useful for small projects and may help to 
# save some trees in general.

COMPACT_LATEX          = NO

# The PAPER_TYPE tag can be used to set the paper type that is used 
# by the printer. Possible values are: a4, a4wide, letter, legal and 
# executive. If left blank a4wide will be used.

PAPER_TYPE             = a4wide

# The EXTRA_PACKAGES tag can be to specify one or more names of LaTeX 
# packages that should be included in the LaTeX output.

EXTRA_PACKAGES         = 

# The LATEX_HEADER tag can be used to specify a personal LaTeX header for 
# the generated latex document. The header should contain everything until 
# the first chapter. If it is left blank doxygen will generate a 
# standard header. Notice: only use this tag if you know what you are doing!

LATEX_HEADER           = 

# If the PDF_HYPERLINKS tag is set to YES, the LaTeX that is generated 
# is prepared for conversion to pdf (using ps2pdf). The pdf file will 
# contain links (just like the HTML output) instead of page references 
# This makes the output suitable for online browsing using a pdf viewer.

PDF_HYPERLINKS         = NO

# If the USE_PDFLATEX tag is set to YES, pdflatex will be used instead of 
# plain latex in the generated Makefile. Set this option to YES to get a 
# higher quality PDF documentation.

USE_PDFLATEX           = NO

# If the LATEX_BATCHMODE tag is set to YES, doxygen will add the \\batchmode. 
# command to the generated LaTeX files. This will instruct LaTeX to keep 
# running if errors occur, instead of asking the user for help. 
# This option is also used when generating formulas in HTML.

LATEX_BATCHMODE        = NO

#---------------------------------------------------------------------------
# configuration options related to the RTF output
#---------------------------------------------------------------------------

# If the GENERATE_RTF tag is set to YES Doxygen will generate RTF output 
# The RTF output is optimised for Word 97 and may not look very pretty with 
# other RTF readers or editors.

GENERATE_RTF           = NO

# The RTF_OUTPUT tag is used to specify where the RTF docs will be put. 
# If a relative path is entered the value of OUTPUT_DIRECTORY will be 
# put in front of it. If left blank `rtf' will be used as the default path.

RTF_OUTPUT             = rtf

# If the COMPACT_RTF tag is set to YES Doxygen generates more compact 
# RTF documents. This may be useful for small projects and may help to 
# save some trees in general.

COMPACT_RTF            = NO

# If the RTF_HYPERLINKS tag is set to YES, the RTF that is generated 
# will contain hyperlink fields. The RTF file will 
# contain links (just like the HTML output) instead of page references. 
# This makes the output suitable for online browsing using WORD or other 
# programs which support those fields. 
# Note: wordpad (write) and others do not support links.

RTF_HYPERLINKS         = NO

# Load stylesheet definitions from file. Syntax is similar to doxygen's 
# config file, i.e. a series of assigments. You only have to provide 
# replacements, missing definitions are set to their default value.

RTF_STYLESHEET_FILE    = 

# Set optional variables used in the generation of an rtf document. 
# Syntax is similar to doxygen's config file.

RTF_EXTENSIONS_FILE    = 

#---------------------------------------------------------------------------
# configuration options related to the man page output
#---------------------------------------------------------------------------

# If the GENERATE_MAN tag is set to YES (the default) Doxygen will 
# generate man pages

GENERATE_MAN           = NO

# The MAN_OUTPUT tag is used to specify where the man pages will be put. 
# If a relative path is entered the value of OUTPUT_DIRECTORY will be 
# put in front of it. If left blank `man' will be used as the default path.

MAN_OUTPUT             = man

# The MAN_EXTENSION tag determines the extension that is added to 
# the generated man pages (default is the subroutine's section .3)

MAN_EXTENSION          = .3

# If the MAN_LINKS tag is set to YES and Doxygen generates man output, 
# then it will generate one additional man file for each entity 
# documented in the real man page(s). These additional files 
# only source the real man page, but without them the man command 
# would be unable to find the correct page. The default is NO.

MAN_LINKS              = NO

#---------------------------------------------------------------------------
# configuration options related to the XML output
#---------------------------------------------------------------------------

# If the GENERATE_XML tag is set to YES Doxygen will 
# generate an XML file that captures the structure of 
# the code including all documentation. Note that this 
# feature is still experimental and incomplete at the 
# moment.

GENERATE_XML           = NO

#---------------------------------------------------------------------------
# configuration options for the AutoGen Definitions output
#---------------------------------------------------------------------------

# If the GENERATE_AUTOGEN_DEF tag is set to YES Doxygen will 
# generate an AutoGen Definitions (see autogen.sf.net) file 
# that captures the structure of the code including all 
# documentation. Note that this feature is still experimental 
# and incomplete at the moment.

GENERATE_AUTOGEN_DEF   = NO

#---------------------------------------------------------------------------
# Configuration options related to the preprocessor   
#---------------------------------------------------------------------------

# If the ENABLE_PREPROCESSING tag is set to YES (the default) Doxygen will 
# evaluate all C-preprocessor directives found in the sources and include 
# files.

ENABLE_PREPROCESSING   = YES

# If the MACRO_EXPANSION tag is set to YES Doxygen will expand all macro 
# names in the source code. If set to NO (the default) only conditional 
# compilation will be performed. Macro expansion can be done in a controlled 
# way by setting EXPAND_ONLY_PREDEF to YES.

MACRO_EXPANSION        = YES

# If the EXPAND_ONLY_PREDEF and MACRO_EXPANSION tags are both set to YES 
# then the macro expansion is limited to the macros specified with the 
# PREDEFINED and EXPAND_AS_PREDEFINED tags.

EXPAND_ONLY_PREDEF     = YES

# If the SEARCH_INCLUDES tag is set to YES (the default) the includes files 
# in the INCLUDE_PATH (see below) will be search if a #include is found.

SEARCH_INCLUDES        = YES

# The INCLUDE_PATH tag can be used to specify one or more directories that 
# contain include files that are not input files but should be processed by 
# the preprocessor.

INCLUDE_PATH           = 

# You can use the INCLUDE_FILE_PATTERNS tag to specify one or more wildcard 
# patterns (like *.h and *.hpp) to filter out the header-files in the 
# directories. If left blank, the patterns specified with FILE_PATTERNS will 
# be used.

INCLUDE_FILE_PATTERNS  = 

# The PREDEFINED tag can be used to specify one or more macro names that 
# are defined before the preprocessor is started (similar to the -D option of 
# gcc). The argument of the tag is a list of macros of the form: name 
# or name=definition (no spaces). If the definition and the = are 
# omitted =1 is assumed.

PREDEFINED             = CPPUNIT_HAVE_CPP_SOURCE_ANNOTATION \
                         CPPUNIT_HAVE_NAMESPACES=1 \
                         CPPUNIT_NS_BEGIN="namespace CppUnit {" \
                         CPPUNIT_NS_END=} \
                         CPPUNIT_NS=CppUnit \
                         CPPUNIT_HAVE_WIN32_DLL_LOADER

# If the MACRO_EXPANSION and EXPAND_PREDEF_ONLY tags are set to YES then 
# this tag can be used to specify a list of macro names that should be expanded. 
# The macro definition that is found in the sources will be used. 
# Use the PREDEFINED tag if you want to use a different macro definition.

EXPAND_AS_DEFINED      =

# If the SKIP_FUNCTION_MACROS tag is set to YES (the default) then 
# doxygen's preprocessor will remove all function-like macros that are alone 
# on a line and do not end with a semicolon. Such function macros are typically 
# used for boiler-plate code, and will confuse the parser if not removed.

SKIP_FUNCTION_MACROS   = YES

#---------------------------------------------------------------------------
# Configuration::addtions related to external references   
#---------------------------------------------------------------------------

# The TAGFILES tag can be used to specify one or more tagfiles.

TAGFILES               = 

# When a file name is specified after GENERATE_TAGFILE, doxygen will create 
# a tag file that is based on the input files it reads.

GENERATE_TAGFILE       = 

# If the ALLEXTERNALS tag is set to YES all external classes will be listed 
# in the class index. If set to NO only the inherited external classes 
# will be listed.

ALLEXTERNALS           = NO

# If the EXTERNAL_GROUPS tag is set to YES all external groups will be listed 
# in the modules index. If set to NO, only the current project's groups will 
# be listed.

EXTERNAL_GROUPS        = YES

# The PERL_PATH should be the absolute path and name of the perl script 
# interpreter (i.e. the result of `which perl').

PERL_PATH              = /usr/bin/perl

#---------------------------------------------------------------------------
# Configuration options related to the dot tool   
#---------------------------------------------------------------------------

# If the CLASS_DIAGRAMS tag is set to YES (the default) Doxygen will 
# generate a inheritance diagram (in Html, RTF and LaTeX) for classes with base or 
# super classes. Setting the tag to NO turns the diagrams off. Note that this 
# option is superceded by the HAVE_DOT option below. This is only a fallback. It is 
# recommended to install and use dot, since it yield more powerful graphs.

CLASS_DIAGRAMS         = YES

# If set to YES, the inheritance and collaboration graphs will hide 
# inheritance and usage relations if the target is undocumented 
# or is not a class.

HIDE_UNDOC_RELATIONS   = YES

# If you set the HAVE_DOT tag to YES then doxygen will assume the dot tool is 
# available from the path. This tool is part of Graphviz, a graph visualization 
# toolkit from AT&T and Lucent Bell Labs. The other options in this section 
# have no effect if this option is set to NO (the default)

HAVE_DOT               = NO

# If the CLASS_GRAPH and HAVE_DOT tags are set to YES then doxygen 
# will generate a graph for each documented class showing the direct and 
# indirect inheritance relations. Setting this tag to YES will force the 
# the CLASS_DIAGRAMS tag to NO.

CLASS_GRAPH            = YES

# If the COLLABORATION_GRAPH and HAVE_DOT tags are set to YES then doxygen 
# will generate a graph for each documented class showing the direct and 
# indirect implementation dependencies (inheritance, containment, and 
# class references variables) of the class with other documented classes.

COLLABORATION_GRAPH    = YES

# If set to YES, the inheritance and collaboration graphs will show the 
# relations between templates and their instances.

TEMPLATE_RELATIONS     = YES

# If the ENABLE_PREPROCESSING, SEARCH_INCLUDES, INCLUDE_GRAPH, and HAVE_DOT 
# tags are set to YES then doxygen will generate a graph for each documented 
# file showing the direct and indirect include dependencies of the file with 
# other documented files.

INCLUDE_GRAPH          = YES

# If the ENABLE_PREPROCESSING, SEARCH_INCLUDES, INCLUDED_BY_GRAPH, and 
# HAVE_DOT tags are set to YES then doxygen will generate a graph for each 
# documented header file showing the documented files that directly or 
# indirectly include this file.

INCLUDED_BY_GRAPH      = YES

# If the GRAPHICAL_HIERARCHY and HAVE_DOT tags are set to YES then doxygen 
# will graphical hierarchy of all classes instead of a textual one.

GRAPHICAL_HIERARCHY    = YES

# The DOT_IMAGE_FORMAT tag can be used to set the image format of the images 
# generated by dot. Possible values are png, jpg, or gif
# If left blank png will be used.

DOT_IMAGE_FORMAT       = gif

# The tag DOT_PATH can be used to specify the path where the dot tool can be 
# found. If left blank, it is assumed the dot tool can be found on the path.

DOT_PATH               = 

# The DOTFILE_DIRS tag can be used to specify one or more directories that 
# contain dot files that are included in the documentation (see the 
# \dotfile command).

DOTFILE_DIRS           = 

# The MAX_DOT_GRAPH_WIDTH tag can be used to set the maximum allowed width 
# (in pixels) of the graphs generated by dot. If a graph becomes larger than 
# this value, doxygen will try to truncate the graph, so that it fits within 
# the specified constraint. Beware that most browsers cannot cope with very 
# large images.

MAX_DOT_GRAPH_WIDTH    = 

# The MAX_DOT_GRAPH_HEIGHT tag can be used to set the maximum allows height 
# (in pixels) of the graphs generated by dot. If a graph becomes larger than 
# this value, doxygen will try to truncate the graph, so that it fits within 
# the specified constraint. Beware that most browsers cannot cope with very 
# large images.

MAX_DOT_GRAPH_HEIGHT   = 

# If the GENERATE_LEGEND tag is set to YES (the default) Doxygen will 
# generate a legend page explaining the meaning of the various boxes and 
# arrows in the dot generated graphs.

GENERATE_LEGEND        = YES

# If the DOT_CLEANUP tag is set to YES (the default) Doxygen will 
# remove the intermedate dot files that are used to generate 
# the various graphs.

DOT_CLEANUP            = YES

#---------------------------------------------------------------------------
# Configuration::addtions related to the search engine   
#---------------------------------------------------------------------------

# The SEARCHENGINE tag specifies whether or not a search engine should be 
# used. If set to NO the values of all tags below this one will be ignored.

SEARCHENGINE           = NO

# The CGI_NAME tag should be the name of the CGI script that 
# starts the search engine (doxysearch) with the correct parameters. 
# A script with this name will be generated by doxygen.

CGI_NAME               = search.cgi

# The CGI_URL tag should be the absolute URL to the directory where the 
# cgi binaries are located. See the documentation of your http daemon for 
# details.

CGI_URL                = 

# The DOC_URL tag should be the absolute URL to the directory where the 
# documentation is located. If left blank the absolute path to the 
# documentation, with file:// prepended to it, will be used.

DOC_URL                = 

# The DOC_ABSPATH tag should be the absolute path to the directory where the 
# documentation is located. If left blank the directory on the local machine 
# will be used.

DOC_ABSPATH            = 

# The BIN_ABSPATH tag must point to the directory where the doxysearch binary 
# is installed.

BIN_ABSPATH            = /usr/local/bin/

# The EXT_DOC_PATHS tag can be used to specify one or more paths to 
# documentation generated for other projects. This allows doxysearch to search 
# the documentation for these projects as well.

EXT_DOC_PATHS          = 
@


1.9
log
@* include/cppunit/ui/text/TestRunner.h:
* src/cppunit/TextTestRunner.cpp: Renamed TextUi::TestRunner
  TextTestRunner and moved it to the CppUnit namespace. Added
  a deprecated typedef for compatibility with previous version.

* include/cppunit/ui/text/TextTestRunner.h: added.

* include/cppunit/ui/mfc/TestRunner.h:
* src/cppunit/msvc6/testrunner/TestRunner.cpp: Renamed MfcUi::TestRunner
  MfcTestRunner. Added deprecated typedef for compatibility. Renamed
  TestRunner.cpp to MfcTestRunner.cpp.

* include/cppunit/ui/mfc/MfcTestRunner.h: added.

* include/cppunit/ui/qt/TestRunner.h:
* src/qttestrunner/TestRunner.cpp: renamed QtUi::TestRunner QtTestRunner
  and moved it to CppUnit namespace. Added a deprecated typedef for
  compatibility. Renamed TestRunner.cpp to QtTestRunner.cpp.

* include/cppunit/ui/qt/TestRunner.h:
* src/qttestrunner/TestRunner.h: Moved TestRunner to CppUnit namespace
  and renamed it QtTestRunner. Added deprecated typedef for compatibility.

* include/cppunit/Asserter.h:
* src/cppunit/Asserter.cpp: changed namespace Asserter to a struct and
  made all methods static.

* include/cppunit/extensions/HelperMacros.h:
* include/cppunit/extensions/SourceLine.h:
* include/cppunit/extensions/TestAssert.h:
* include/cppunit/extensions/TestPlugIn.h:
* include/cppunit/Portability.h: changed CPPUNIT_NS(symbol) to a
  symbol macro that expand either to CppUnit or nothing. The symbol is
  no longer a parameter.

* include/cppunit/portability/CppUnitVector.h:
* include/cppunit/portability/CppUnitDeque.h:
* include/cppunit/portability/CppUnitMap.h: added. STL Wrapper for
  compilers that do not support template default argumenent and need
  the allocator to be passed when instantiating STL container.

* examples/cppunittest/*.h:
* examples/cppunittest/*.cpp:
* src/msvc6/testrunner/*.h:
* src/msvc6/testrunner/*.cpp:
* src/msvc6/testpluginrunner/*.h:
* src/msvc6/testpluginrunner/*.cpp:
* src/qttestrunner/*.h:
* src/qttestrunner/*.cpp: replaced occurence of CppUnit:: by CPPUNIT_NS.

* src/cppunit/TestSuite.h:
replaced occurence of std::vector by CppUnitVector.
@
text
@d763 2
a764 1
                         CPPUNIT_NS=CppUnit
@


1.8
log
@* include/cppunit/config/Portability.h: If the compiler does not support
  namespace (CPPUNIT_HAVE_NAMESPACES=0), define CPPUNIT_NO_STD_NAMESPACE
  and CPPUNIT_NO_NAMESPACE. If CPPUNIT_NO_STD_NAMESPACE is defined, then
  CppUnit assumes that STL are in the global namespace. If
  CPPUNIT_NO_NAMESPACE is defined, then CppUnit classes are placed in the
  global namespace instead of the CppUnit namespace.

* include/cppunit/config/config-bcb5.h:
* include/cppunit/config/config-msvc6.h: added definition of macro
  CPPUNIT_HAVE_NAMESPACES.

* include/cppunit/tools/StringTools.h: use CPPUNIT_WRAP_COLUMN as default
  parameter value for wrap().

* include/cppunit/*/*.h:
* src/cppunit/*.cpp: changed all CppUnit namespace declaration to use
  macros CPPUNIT_NS_BEGIN and CPPUNIT_NS_END. Also, changed reference
  to CppUnit namespace (essentially in macros) using CPPUNIT_NS macro.
@
text
@d762 2
a763 1
                         CPPUNIT_NS_END=}
@


1.7
log
@* bumped version to 1.9.7

* comitted stuffs I forgot to in 1.9.6.
@
text
@d1 1
a1 1
# Doxyfile 1.2.14
d33 1
a33 1
OUTPUT_DIRECTORY       =
d39 4
a42 3
# Brazilian, Chinese, Croatian, Czech, Danish, Dutch, Finnish, French, 
# German, Greek, Hungarian, Italian, Japanese, Korean, Norwegian, Polish, 
# Portuguese, Romanian, Russian, Slovak, Slovene, Spanish and Swedish.
d122 2
a123 1
STRIP_FROM_PATH        = G:/prg/vc/Lib/cppunit/include/ G:/prg/vc/Lib/cppunit/
d178 7
d264 7
d323 2
a324 1
                         cookbook.dox Money.dox
d564 10
d727 1
a727 1
MACRO_EXPANSION        = NO
d733 1
a733 1
EXPAND_ONLY_PREDEF     = NO
d759 4
a762 1
PREDEFINED             = CPPUNIT_HAVE_CPP_SOURCE_ANNOTATION
d769 1
a769 1
EXPAND_AS_DEFINED      = 
d820 6
a851 6
# If set to YES, the inheritance and collaboration graphs will hide 
# inheritance and usage relations if the target is undocumented 
# or is not a class.

HIDE_UNDOC_RELATIONS   = YES

d872 2
a873 2
# generated by dot. Possible values are gif, jpg, and png
# If left blank gif will be used.
@


1.6
log
@* THANKS: updated

* src/cppunit/DynamicLibraryManager.cpp: bugfix: did not pass
  library name to exception.

* include/cppunit/TestPath.h:
* src/cppunit/TestPath.cpp: changed into value object.

* src/cppunit/BeosDynamicLibraryManager.cpp: integrated patch from
  Shibu Yoshiki for BeOS ('cuppa' project team).

* src/DllPlugInTester/CommandLineParser.h:
* src/DllPlugInTester/CommandLineParser.cpp: added. Command line
  parsing.

* src/DllPlugInTester/DllPlugInTester.cpp: full command line support
  with parameters for plug-ins.

* src/DllPlugInTester/makefile.am:
* examples/simple/makefile.am:
* examples/cppunittest/makefile.am: integrated Jeffrey Morgan patch,
  Unix side should be working again.

* examples/ReadMe.txt: added. Brief description of each example.

* examples/cppunittest/CppUnitTestPlugIn.cpp:
* examples/cppunittest/CppUnitTestPlugIn.dsp: added. New project to
  build CppUnit's test suite as a test plug-in.

* examples/cppunittest/CppUnitTestSuite.cpp: updated. Use new
  helper macros to create the test suite hierarchy.

* examples/simple/simple_plugin.opt: added. Contains debug tab
  settings.

* examples/ClockerPlugIn/ClockerListener.cpp:
* examples/ClockerPlugIn/ClockerListener.h:
* examples/ClockerPlugIn/Timer.cpp:
* examples/ClockerPlugIn/Timer.h:
* examples/ClockerPlugIn/WinNtTimer.cpp:
* examples/ClockerPlugIn/WinNtTimer.h:
* examples/ClockerPlugIn/ClockerPlugIn.cpp:
* examples/ClockerPlugIn/ClockerPlugIn.dsp: added. test listener
  plug-in that times tests.

* examples/DumperPlugIn/DumperListener.cpp:
* examples/DumperPlugIn/DumperListener.h:
* examples/DumperPlugIn/DumperPlugIn.cpp:
* examples/DumperPlugIn/DumperPlugIn.dsp: added. test listener
  plug-in that dump the test tree.
@
text
@d26 1
a26 1
PROJECT_NUMBER         = "CVS Version"
@


1.5
log
@* configure.in: added some makefile.am

* contrib/readme.txt: updated.

* contrib/bc5/bc5-makefile.zip: added borland 5.5 makefile. Contributed by
  project cuppa.

* src/cppunit/TypeInfoHelper.cpp: fixed implementation to be more
  portable.
@
text
@d307 1
a307 1
                         cookbook.dox
@


1.4
log
@* NEWS: updated.

* configure.in: added include/cppunit/config/Makefile and
  include/cppunit/plugin/Makefile to the list of target.

* doc/CppUnit-win.dox: enabled generation of HTML Help documentation.

* include/cppunit/config/Makefile.am:
* include/cppunit/plugin/Makefile.am: added.

* include/cppunit/config-bcb5.h:
* include/cppunit/config-msvc6.h:
* include/cppunit/config-mac.h: moved to include/cppunit/config/.

* include/cppunit/Portability.h: updated config files location. Added macros
  CPPUNIT_STRINGIZE and CPPUNIT_JOIN (implementation adapted from boost.org).
  Added macro CPPUNIT_MAKE_UNIQUE_NAME.

* include/cppunit/Test.h: modified methods order.

* include/cppunit/extensions/HelperMacros.h: renamed macro
  __CPPUNIT_MAKE_UNIQUE_NAME to CPPUNIT_MAKE_UNIQUE_NAME and moved its
  definition to include/cppunit/Portability.h.

* include/cppunit/extensions/TestDecorator.h: Inherits Test instead of TestLeaf.

* include/cppunit/plugin/DynamicLibraryManager.h:
* src/cppunit/DynamicLibraryManager.cpp: added. DLL manager (load & lookup
  symbol).

* src/cppunit/BeOsDynamicLibraryManager.cpp:
* src/cppunit/UnixDynamicLibraryManager.cpp:
* src/cppunit/Win32DynamicLibraryManager.cpp: added. Implementation of
  platform dependent methods of DynamicLibraryManager.

* include/cppunit/plugin/DynamicLibraryManagerException.h:
* src/cppunit/DynamicLibraryManagerException.cpp: added. Exception thrown
  by DynamicLibraryManager.

* include/cppunit/plugin/TestPlugIn.h: added. CppUnitTestPlugIn interface
  definition. Helper macros to implements plug-in.

* include/cppunit/plugin/TestPlugInSuite.h:
* src/cppunit/plugin/TestPlugInSuite.cpp: added. A suite to wrap a test
  plug-in.

* include/cppunit/plugin/TestPlugInDefaultImpl.h:
* src/cppunit/TestPlugInDefaultImpl.cpp: added. A default implementation
  of the test plug-in interface.

* src/msvc6/DllPlugInTester/DllPlugInTester.cpp: updated to use the
  new TestPlugIn.

* examples/cppunittest/TestResultCollectorTest.cpp: fixed typo.
@
text
@d33 1
a33 1
OUTPUT_DIRECTORY       = dox
@


1.3
log
@* Makefile.am: added examples/qt to tar ball release.

* TODO: heavily updated.

* contrib/msvc/CppUnit*.wwtpl: changed base class for unit test to TestFixture.

* include/cppunit/Test.h: removed toString() method. Not used by the framework
  and source of confusions with getName().
  Added getChildTestCount() and getChildTestAt(), introducing the composite pattern
  at top level. Added utility methods findTest() and findTestPath().

* src/cppunit/Test.cpp: added. Implementation of new utility methods.

* include/cppunit/TestCase.h:
* src/cppunit/TestCase.cpp: inherits TestLeaf. Removed toString(), run(void) and
  defaultResult(). Removed default constructor.

* src/cppunit/TestCase.cpp:
* src/cppunit/TestSuite.cpp: fixed some includes that used "" instead of <>.

* include/cppunit/TestComposite.h:
* src/cppunit/TestComposite.cpp: added. Common implementation of Test for composite
  tests (TestSuite).

* include/cppunit/TestFailure.h:
* src/cppunit/TestFailure.cpp: removed toString().

* include/cppunit/TestLeaf.h:
* src/cppunit/TestLeaf.cpp: added. Common implementation of Test for single test
  (TestCase).

* include/cppunit/TestListener.h: added TimingListener example to documentation.

* include/cppunit/TestPath.h:
* src/cppunit/TestPath.cpp: added. List of test traversed to access a test in the
  test hierarchy.

* include/cppunit/TestRunner.h: added. Generic TestRunner.

* src/cppunit/TestRunner.cpp: moved to TextTestRunner.cpp. Added new implementation
  of includecppunit/TestRunner.h.

* include/cppunit/TestSuite.h:
* src/cppunit/TestSuite.cpp: inherits TestComposite and implements new Test
  interface. Removed toString().

* src/cppunit/TextTestRunner.cpp: moved from TestRunner.cpp. Implementation of
  include/cppunit/ui/text/TestRunner.h.

* include/cppunit/extensions/RepeatedTest.h:
* src/cppunit/RepeatedTest.cpp: removed toString().

* include/cppunit/extensions/TestDecorator.h: inherits TestLeaf.
  Removed toString()

* include/cppunit/XmlOutputter.h:
* src/cppunit/XmlOutputter.cpp:
* examples/cppunittest/XmlOutputterTest.cpp:
* examples/cppunittest/XmlOutputterTest.h: XML outputter now escape node content.
  Add unit test for that bug (#540944). Added style sheet support. Modified
  XML structure: failure message as its own element.

* src/msvc/testrunner/TestRunnerModel.h:
* src/msvc/testrunner/TestRunnerModel.cpp: used Test::findTest() to find a test
  by name instead of using RTTI. Added toAnsiString() for convertion when
  compiling as UNICODE.

* src/msvc/testrunner/TreeHierarchyDlg.h:
* src/msvc/testrunner/TreeHierarchyDlg.cpp: used new composite interface of Test
  to explorer the test hierarchy instead of RTTI.

* examples/cppunittest/TestPathTest.h:
* examples/cppunittest/TestPathTest.cpp: added, unit tests for TestPath.

* examples/cppunittest/TestCaseTest.h:
* examples/cppunittest/TestCaseTest.cpp: added test for TestLeaf.

* examples/cppunittest/TestSuiteTest.h:
* examples/cppunittest/TestSuiteTest.cpp: added test for TestComposite and
  new Test interface.
@
text
@d121 1
a121 1
STRIP_FROM_PATH        = G:/prg/vc/Lib/cppunit/include/
d142 1
a142 1
CASE_SENSE_NAMES       = NO
d486 1
a486 1
GENERATE_HTMLHELP      = NO
d492 1
a492 1
GENERATE_CHI           = NO
d498 1
a498 1
BINARY_TOC             = NO
d503 1
a503 1
TOC_EXPAND             = NO
@


1.2
log
@* include/cppunitui/: moved to include/cppunit/ui (fix unix install problem).

* doc/cookbook.dox:
* examples/cppunittest/CppUnitTestMain.cpp:
* examples/msvc/CppUnitTestApp/HostApp.cpp:
* examples/msvc/HostApp/HostApp.cpp:
* examples/qt/Main.Cpp:
* examples/src/cppunit/TestRunner.cpp:
* examples/src/msvc6/TestRunner/TestRunner.cpp:
* examples/src/qttestrunner/TestRunner.cpp: updated to use <cppunit/ui/...>
instead of <cppunitui/...> in include directives.

* doc/CppUnit-win.dox: generated documentation give the include path at the
bottom of the page for each class.

* NEWS: added compatibility break for 1.7.10 users.
@
text
@d1 1
a1 1
# Doxyfile 1.1.4
d3 2
a4 1
# This file describes the settings to be used by doxygen for a project
d9 2
d18 1
a18 1
# by quotes) that should identify the project. 
d20 1
a20 1
PROJECT_NAME          = CppUnit
d26 1
a26 1
PROJECT_NUMBER        = "Version 1.7.10"
d33 1
a33 1
OUTPUT_DIRECTORY      = dox
d39 10
a48 2
# Dutch, French, Italian, Czech, Swedish, German, Finnish, Japanese, 
# Spanish and Russian
d50 1
a50 1
OUTPUT_LANGUAGE       = English
d52 2
a53 3
# The DISABLE_INDEX tag can be used to turn on/off the condensed index at 
# top of each HTML page. The value NO (the default) enables the index and 
# the value YES disables it. 
d55 1
a55 1
DISABLE_INDEX         = NO
d57 2
a58 2
# If the EXTRACT_ALL tag is set to YES all classes and functions will be 
# included in the documentation, even if no documentation was available. 
d60 1
a60 1
EXTRACT_ALL           = YES
d62 3
a64 2
# If the EXTRACT_PRIVATE tag is set to YES all private members of a class 
# will be included in the documentation. 
d66 1
a66 1
EXTRACT_PRIVATE       = YES
d69 11
a79 1
# undocumented members inside documented classes or files. 
d81 1
a81 6
HIDE_UNDOC_MEMBERS    = NO

# If the HIDE_UNDOC_CLASSESS tag is set to YES, Doxygen will hide all 
# undocumented classes. 

HIDE_UNDOC_CLASSES    = NO
d86 1
a86 1
# Set to NO to disable this. 
d88 1
a88 1
BRIEF_MEMBER_DESC     = YES
d93 1
a93 1
# brief descriptions will be completely suppressed. 
d95 1
a95 1
REPEAT_BRIEF          = YES
d99 8
a106 1
# description. 
d108 1
a108 1
ALWAYS_DETAILED_SEC   = NO
d112 1
a112 1
# to NO the shortest path that makes the file name unique will be used. 
d114 1
a114 1
FULL_PATH_NAMES       = YES
d119 1
a119 1
# the path. 
d121 1
a121 1
STRIP_FROM_PATH       = G:/prg/vc/Lib/cppunit/include/
d126 1
a126 1
# Set it to YES to include the internal documentation. 
d128 1
a128 1
INTERNAL_DOCS         = NO
d130 3
a132 5
# If the CLASS_DIAGRAMS tag is set to YES (the default) Doxygen will 
# generate a class diagram (in Html and LaTeX) for classes with base or 
# super classes. Setting the tag to NO turns the diagrams off. 

CLASS_DIAGRAMS        = YES
d134 1
a134 2
# If the SOURCE_BROWSER tag is set to YES then a list of source files will 
# be generated. Documented entities will be cross-referenced with these sources. 
d136 5
a140 1
SOURCE_BROWSER        = NO
d142 1
a142 2
# Setting the INLINE_SOURCES tag to YES will include the body 
# of functions and classes directly in the documentation. 
d144 3
a146 1
INLINE_SOURCES        = NO
d148 1
a148 3
# Setting the STRIP_CODE_COMMENTS tag to YES (the default) will instruct 
# doxygen to hide any special comment blocks from generated source code 
# fragments. Normal C and C++ comments will always remain visible. 
d150 3
a152 1
STRIP_CODE_COMMENTS   = YES
d154 1
a154 7
# If the CASE_SENSE_NAMES tag is set to NO (the default) then Doxygen 
# will only generate file names in lower case letters. If set to 
# YES upper case letters are also allowed. This is useful if you have 
# classes or files whose names only differ in case and if your file system 
# supports case sensitive file names. 

CASE_SENSE_NAMES      = NO
d158 1
a158 1
# which an include is specified. Set to NO to disable this. 
d160 1
a160 1
VERBATIM_HEADERS      = YES
d164 1
a164 1
# of that file. 
d166 1
a166 1
SHOW_INCLUDE_FILES    = YES
d168 1
a168 1
# If the JAVADOC_AUTOBRIEF tag is set to YES (the default) then Doxygen 
d170 3
a172 2
# comment as the brief description. If set to NO, the Javadoc-style will 
# behave just like the Qt-style comments. 
d174 1
a174 1
JAVADOC_AUTOBRIEF     = YES
d178 1
a178 1
# reimplements. 
d180 1
a180 1
INHERIT_DOCS          = YES
d183 1
a183 1
# is inserted in the documentation for inline members. 
d185 1
a185 1
INLINE_INFO           = YES
d190 3
a192 1
# declaration order. 
d194 6
a199 1
SORT_MEMBER_DOCS      = YES
d202 43
a244 1
# Doxygen uses this value to replace tabs by spaces in code fragments. 
d246 1
a246 1
TAB_SIZE              = 8
d248 4
a251 2
# The ENABLE_SECTIONS tag can be used to enable conditional 
# documentation sections, marked by \if sectionname ... \endif. 
d253 7
a259 1
ENABLED_SECTIONS      = 
d266 1
a266 1
# by doxygen. Possible values are YES and NO. If left blank NO is used. 
d268 1
a268 1
QUIET                 = NO
d272 1
a272 1
# NO is used. 
d274 1
a274 1
WARNINGS              = YES
d278 1
a278 1
# automatically be disabled. 
d280 1
a280 1
WARN_IF_UNDOCUMENTED  = YES
d285 7
a291 1
# warning originated and the warning text. 
d293 1
a293 1
WARN_FORMAT           = "$file:$line: $text"
d302 1
a302 1
# with spaces. 
d304 4
a307 1
INPUT                 = ../include ../src/cppunit other_documentation.dox cookbook.dox
d312 3
a314 1
# blank all files are included. 
d316 2
a317 1
FILE_PATTERNS         = *.cpp *.h
d321 1
a321 1
# If left blank NO is used. 
d323 1
a323 1
RECURSIVE             = YES
d327 1
a327 1
# subdirectory from a directory tree whose root is specified with the INPUT tag. 
d329 6
a334 1
EXCLUDE               = 
d338 1
a338 1
# certain files from those directories. 
d340 3
a342 1
EXCLUDE_PATTERNS      = config-*.h */CVS/* */include/msvc6/DSPlugin/*
d346 1
a346 1
# the \include command). 
d348 1
a348 1
EXAMPLE_PATH          = examples
d353 9
a361 1
# blank all files are included. 
d363 1
a363 1
EXAMPLE_PATTERNS      = *.cpp *.h
d367 1
a367 1
# the \image command). 
d369 1
a369 1
IMAGE_PATH            = 
d376 1
a376 1
# to standard output. 
d378 33
a410 1
INPUT_FILTER          = 
d418 1
a418 1
# contains a lot of classes, structs, unions or interfaces. 
d420 1
a420 1
ALPHABETICAL_INDEX    = YES
d424 1
a424 1
# in which this list will be split (can be a number in the range [1..20]) 
d426 1
a426 1
COLS_IN_ALPHA_INDEX   = 5
d431 1
a431 1
# should be ignored while generating the index headers. 
d433 1
a433 1
IGNORE_PREFIX         = 
d440 1
a440 1
# generate HTML output. 
d442 1
a442 1
GENERATE_HTML         = YES
d446 3
a448 1
# put in front of it. If left blank `html' will be used as the default path. 
d450 5
a454 1
HTML_OUTPUT           = html
d460 1
a460 1
HTML_HEADER           = header.html
d466 1
a466 1
HTML_FOOTER           = footer.html
d471 1
a471 1
# will generate a default style sheet 
d473 1
a473 1
HTML_STYLESHEET       = 
d477 1
a477 1
# NO a bullet list will be used. 
d479 1
a479 1
HTML_ALIGN_MEMBERS    = YES
d484 18
a501 1
# of the generated HTML documentation. 
d503 28
a530 1
GENERATE_HTMLHELP     = NO
d537 1
a537 1
# generate Latex output. 
d539 1
a539 1
GENERATE_LATEX        = NO
d543 1
a543 1
# put in front of it. If left blank `latex' will be used as the default path. 
d545 1
a545 1
LATEX_OUTPUT          = latex
d549 1
a549 1
# save some trees in general. 
d551 1
a551 1
COMPACT_LATEX         = NO
d555 1
a555 1
# executive. If left blank a4wide will be used. 
d557 1
a557 1
PAPER_TYPE            = a4wide
d560 1
a560 1
# packages that should be included in the LaTeX output. 
d562 1
a562 1
EXTRA_PACKAGES        = 
d567 1
a567 1
# standard header. Notice: only use this tag if you know what you are doing! 
d569 1
a569 1
LATEX_HEADER          = 
d574 7
a580 1
# This makes the output suitable for online browsing using a pdf viewer. 
d582 1
a582 1
PDF_HYPERLINKS        = NO
d587 1
a587 1
# This option is also used when generating formulas in HTML. 
d589 1
a589 1
LATEX_BATCHMODE       = NO
d596 2
a597 3
# For now this is experimental and is disabled by default. The RTF output 
# is optimised for Word 97 and may not look too pretty with other readers 
# or editors.
d599 1
a599 1
GENERATE_RTF          = NO
d603 1
a603 1
# put in front of it. If left blank `rtf' will be used as the default path. 
d605 1
a605 1
RTF_OUTPUT            = rtf
d609 1
a609 1
# save some trees in general. 
d611 1
a611 1
COMPACT_RTF           = NO
d616 1
a616 1
# This makes the output suitable for online browsing using a WORD or other. 
d618 12
a629 1
# Note: wordpad (write) and others do not support links. 
d631 1
a631 1
RTF_HYPERLINKS        = NO
d638 1
a638 1
# generate man pages 
d640 1
a640 1
GENERATE_MAN          = NO
d644 1
a644 1
# put in front of it. If left blank `man' will be used as the default path. 
d646 1
a646 1
MAN_OUTPUT            = man
d649 1
a649 1
# the generated man pages (default is the subroutine's section .3) 
d651 33
a683 1
MAN_EXTENSION         = .3
d691 1
a691 1
# files. 
d693 1
a693 1
ENABLE_PREPROCESSING  = YES
d697 2
a698 1
# compilation will be performed. 
d700 7
a706 1
MACRO_EXPANSION       = NO
d709 1
a709 1
# in the INCLUDE_PATH (see below) will be search if a #include is found. 
d711 1
a711 1
SEARCH_INCLUDES       = YES
d715 3
a717 1
# the preprocessor. 
d719 6
a724 1
INCLUDE_PATH          = 
d730 3
a732 1
# omitted =1 is assumed. 
d734 4
a737 1
PREDEFINED            = CPPUNIT_HAVE_CPP_SOURCE_ANNOTATION
d739 6
a744 3
# If the EXPAND_ONLY_PREDEF and MACRO_EXPANSION tags are both set to YES 
# then the macro expansion is limited to the macros specified with the 
# PREDEFINED tag. 
d746 1
a746 1
EXPAND_ONLY_PREDEF    = NO
d752 1
a752 1
# The TAGFILES tag can be used to specify one or more tagfiles. 
d754 1
a754 1
TAGFILES              = 
d757 1
a757 1
# a tag file that is based on the input files it reads. 
d759 1
a759 1
GENERATE_TAGFILE      = 
d763 3
a765 1
# will be listed. 
d767 5
a771 1
ALLEXTERNALS          = NO
d774 1
a774 1
# interpreter (i.e. the result of `which perl'). 
d776 1
a776 1
PERL_PATH             = /usr/bin/perl
d782 8
d793 1
a793 1
# have no effect if this option is set to NO (the default) 
d795 1
a795 1
HAVE_DOT              = NO
d802 1
a802 1
CLASS_GRAPH           = YES
d807 8
a814 1
# class references variables) of the class with other documented classes. 
d816 3
a818 1
COLLABORATION_GRAPH   = YES
d820 1
a820 4
# If the ENABLE_PREPROCESSING, INCLUDE_GRAPH, and HAVE_DOT tags are set to 
# YES then doxygen will generate a graph for each documented file showing 
# the direct and indirect include dependencies of the file with other 
# documented files. 
d822 13
a834 1
INCLUDE_GRAPH         = YES
d837 40
a876 1
# will graphical hierarchy of all classes instead of a textual one. 
d878 1
a878 1
GRAPHICAL_HIERARCHY   = YES
d880 3
a882 2
# This tag can be used to specify the path where the dot tool can be found. 
# If left blank, it is assumed the dot tool can be found on the path. 
d884 1
a884 1
DOT_PATH              = 
d891 1
a891 1
# used. If set to NO the values of all tags below this one will be ignored. 
d893 1
a893 1
SEARCHENGINE          = NO
d897 1
a897 1
# A script with this name will be generated by doxygen. 
d899 1
a899 1
CGI_NAME              = search.cgi
d903 1
a903 1
# details. 
d905 1
a905 1
CGI_URL               = 
d909 1
a909 1
# documentation, with file:// prepended to it, will be used. 
d911 1
a911 1
DOC_URL               = 
d915 1
a915 1
# will be used. 
d917 1
a917 1
DOC_ABSPATH           = 
d920 1
a920 1
# is installed. 
d922 1
a922 1
BIN_ABSPATH           = /usr/local/bin/
d926 1
a926 1
# the documentation for these projects as well. 
d928 1
a928 1
EXT_DOC_PATHS         = 
@


1.1
log
@* doc/cookbook.html: removed. Replaced by cookbook.doc.

* doc/cookbook.dox: added, conversion of cookbook.html to Doxygen format.

* doc/other_documentation.dox: added groups definition.

* doc/Makefile.am: replaced cookbook.html by cookbook.dox

* doc/Doxyfile.in: added predefined CPPUNIT_HAVE_CPP_SOURCE_ANNOTATION.
Replaced cookbook.html by cookbook.dox.

* include/cppunitui/mfc/TestRunner.h: added, extracted from
include/msvc6/testrunner/TestRunner.h. Moved class TestRunner to namespace
CppUnit::MfcUi.

* include/msvc6/testrunner/TestRunner.h: deprecated. A simple typedef to
CppUnit::MfcUi::TestRunner.

* include/textui/TestRuner.h: added, extracted from
include/cppunit/TextTestRunner.h.

* src/cppunit/TextTestRunner.cpp: renamed TestRunner.cpp. Moved into
namespace CppUnit::TextUi.

* src/msvc6/testruner/TestRunner.cpp: moved into namespace CppUnit::MfcUi.

* src/cppunit/CompilerOutputter.cpp: removed printing "- " before
NotEqualException addional message, for consistency between different
TestRunner (Mfc,Text...)

* include/cppunit/Asserter.h:
* include/cppunit/CompilerOutputter.h:
* include/cppunit/Exception.h:
* include/cppunit/NotEqualException.h:
* include/cppunit/Outputter.h:
* include/cppunit/SourceLine.h:
* include/cppunit/TestAssert.h:
* include/cppunit/TestCaller.h:
* include/cppunit/TestFailure.h:
* include/cppunit/TestFixture.h:
* include/cppunit/TestListener.h:
* include/cppunit/TestResult.h:
* include/cppunit/TestResultCollector.h:
* include/cppunit/TestSucessListener.h:
* include/cppunit/TestSuite.h:
* include/cppunit/TextTestProgressListener.h:
* include/cppunit/TextTestRunner.h:
* include/cppunit/XmlOutputter.h:
* include/cppunit/extensions/AutoRegisterSuite.h:
* include/cppunit/extensions/HelperMacros.h:
* include/cppunit/extensions/TestFactoryRegistry.h:
* include/cppunit/extensions/TestSuiteBuilder.h:
* include/cppunit/extensions/TestSuiteFactory.h: doc update. organization
in groups.

* examples/msvc6/CppUnitTestApp/CppUnitTestApp.cpp:
* examples/msvc6/HostApp/HostApp.cpp: updated to use
CppUnit::MfcUi::TestRunner.

* examples/cppunittest/CppUnitTestMain.cpp: updated to use
CppUnit::TextUi::TestRunner.
@
text
@d91 1
a91 1
FULL_PATH_NAMES       = NO
d98 1
a98 1
STRIP_FROM_PATH       = 
@

