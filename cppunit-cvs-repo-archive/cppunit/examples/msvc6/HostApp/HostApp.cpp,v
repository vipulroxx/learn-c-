head	1.7;
access;
symbols
	REL_1_12_1:1.7
	REL_1_11_6:1.7
	REL_1_11_4:1.7
	REL_1_11_0:1.7
	TG_CPPUNIT_NO_STREAM_AFTER:1.7
	TG_CPPUNIT_NO_STREAM_BEFORE:1.7
	REL_1_10_2:1.7
	REL_1_10_0:1.7
	REL_1_9_14:1.7
	REL_1_9_12:1.7
	BRANCH_1_9_12:1.7.0.2
	TG_BRANCH_1_9_12:1.7
	TG_BEFORE_HPUX_PLUGIN:1.7
	TG_BEFORE_SUN4_PORT:1.6
	REL_1_9_10:1.6
	TG_AFTER_REMOVE_NOTEQUAL_EXCEPTION:1.5
	TG_BEFORE_REMOVE_NOTEQUAL_EXCEPTION:1.5
	REL_1_9_6:1.5
	REL_1_9_4:1.5
	REL_1_9_0:1.5
	REL_1_8_0:1.5
	REL_1_7_8:1.3
	REL_1_7_3:1.2
	REL_1_7_1:1.2
	REL_1_6_2:1.2
	BRANCH_1_6:1.2.0.2
	REL_1_6_1:1.2
	REL_1_6_0:1.2
	REL_1_5_5:1.1;
locks; strict;
comment	@// @;


1.7
date	2003.03.15.11.21.41;	author blep;	state Exp;
branches;
next	1.6;

1.6
date	2002.07.14.19.48.32;	author blep;	state Exp;
branches;
next	1.5;

1.5
date	2002.04.10.15.21.24;	author blep;	state Exp;
branches;
next	1.4;

1.4
date	2002.03.28.15.47.07;	author blep;	state Exp;
branches;
next	1.3;

1.3
date	2002.03.25.07.15.06;	author blep;	state Exp;
branches;
next	1.2;

1.2
date	2001.06.27.21.23.22;	author blep;	state Exp;
branches;
next	1.1;

1.1
date	2001.04.28.14.27.24;	author bastiaan;	state Exp;
branches;
next	;


desc
@@


1.7
log
@* src/msvc6/testrunner/DynamicWindow/cdxCDynamicWndEx.cpp:
* examples/msvc6/CppUnitTestApp/CppUnitTestApp.cpp:
* examples/msvc6/HostApp/HostApp.cpp:
* src/msvc6/testpluginrunner/TestPlugInRunnerApp.cpp: fixed compatibility
  issues with vc7 MFC.
@
text
@// HostApp.cpp : Defines the class behaviors for the application.
//

#include "stdafx.h"
#include "HostApp.h"

#include "MainFrm.h"
#include "HostAppDoc.h"
#include "HostAppView.h"

// CppUnit: MFC TestRunner
#include <cppunit/ui/mfc/TestRunner.h>
// CppUnit: TestFactoryRegistry to retreive the top test suite that contains all registered tests.
#include <cppunit/extensions/TestFactoryRegistry.h>
 
#ifdef _DEBUG
#define new DEBUG_NEW
#undef THIS_FILE
static char THIS_FILE[] = __FILE__;
#endif

static AFX_EXTENSION_MODULE  extTestRunner;

/////////////////////////////////////////////////////////////////////////////
// CHostAppApp

BEGIN_MESSAGE_MAP(CHostAppApp, CWinApp)
    //{{AFX_MSG_MAP(CHostAppApp)
    ON_COMMAND(ID_APP_ABOUT, OnAppAbout)
        // NOTE - the ClassWizard will add and remove mapping macros here.
        //    DO NOT EDIT what you see in these blocks of generated code!
    //}}AFX_MSG_MAP
    // Standard file based document commands
    ON_COMMAND(ID_FILE_NEW, CWinApp::OnFileNew)
    ON_COMMAND(ID_FILE_OPEN, CWinApp::OnFileOpen)
    // Standard print setup command
    ON_COMMAND(ID_FILE_PRINT_SETUP, CWinApp::OnFilePrintSetup)
END_MESSAGE_MAP()

/////////////////////////////////////////////////////////////////////////////
// CHostAppApp construction

CHostAppApp::CHostAppApp()
{
    // TODO: add construction code here,
    // Place all significant initialization in InitInstance
}

/////////////////////////////////////////////////////////////////////////////
// The one and only CHostAppApp object

CHostAppApp theApp;

/////////////////////////////////////////////////////////////////////////////
// CHostAppApp initialization

BOOL CHostAppApp::InitInstance()
{
    // Standard initialization
    // If you are not using these features and wish to reduce the size
    //  of your final executable, you should remove from the following
    //  the specific initialization routines you do not need.

#ifdef _AFXDLL
# if _MSC_VER < 1300   // vc6
	Enable3dControls();			// Call this when using MFC in a shared DLL
# endif
#else
    Enable3dControlsStatic();   // Call this when linking to MFC statically
#endif

    // Change the registry key under which our settings are stored.
    // You should modify this string to be something appropriate
    // such as the name of your company or organization.
    SetRegistryKey(_T("Local AppWizard-Generated Applications"));

    LoadStdProfileSettings();  // Load standard INI file options (including MRU)

    // Register the application's document templates.  Document templates
    //  serve as the connection between documents, frame windows and views.

    CSingleDocTemplate* pDocTemplate;
    pDocTemplate = new CSingleDocTemplate(
        IDR_MAINFRAME,
        RUNTIME_CLASS(CHostAppDoc),
        RUNTIME_CLASS(CMainFrame),       // main SDI frame window
        RUNTIME_CLASS(CHostAppView));
    AddDocTemplate(pDocTemplate);

    RunUnitTests();

/*
    // Parse command line for standard shell commands, DDE, file open
    CCommandLineInfo cmdInfo;
    ParseCommandLine(cmdInfo);

    // Dispatch commands specified on the command line
    if (!ProcessShellCommand(cmdInfo))
        return FALSE;

    // The one and only window has been initialized, so show and update it.
    m_pMainWnd->ShowWindow(SW_SHOW);
    m_pMainWnd->UpdateWindow();
*/

    return TRUE;
}


void 
CHostAppApp::RunUnitTests()
{
  CPPUNIT_NS::MfcUi::TestRunner runner;
  runner.addTest( CPPUNIT_NS::TestFactoryRegistry::getRegistry().makeTest() );

  runner.run();    
}


/////////////////////////////////////////////////////////////////////////////
// CAboutDlg dialog used for App About

class CAboutDlg : public CDialog
{
public:
    CAboutDlg();

// Dialog Data
    //{{AFX_DATA(CAboutDlg)
    enum { IDD = IDD_ABOUTBOX };
    //}}AFX_DATA

    // ClassWizard generated virtual function overrides
    //{{AFX_VIRTUAL(CAboutDlg)
    protected:
    virtual void DoDataExchange(CDataExchange* pDX);    // DDX/DDV support
    //}}AFX_VIRTUAL

// Implementation
protected:
    //{{AFX_MSG(CAboutDlg)
        // No message handlers
    //}}AFX_MSG
    DECLARE_MESSAGE_MAP()
};

CAboutDlg::CAboutDlg() : CDialog(CAboutDlg::IDD)
{
    //{{AFX_DATA_INIT(CAboutDlg)
    //}}AFX_DATA_INIT
}

void CAboutDlg::DoDataExchange(CDataExchange* pDX)
{
    CDialog::DoDataExchange(pDX);
    //{{AFX_DATA_MAP(CAboutDlg)
    //}}AFX_DATA_MAP
}

BEGIN_MESSAGE_MAP(CAboutDlg, CDialog)
    //{{AFX_MSG_MAP(CAboutDlg)
        // No message handlers
    //}}AFX_MSG_MAP
END_MESSAGE_MAP()

// App command to run the dialog
void CHostAppApp::OnAppAbout()
{
    CAboutDlg aboutDlg;
    aboutDlg.DoModal();
}

/////////////////////////////////////////////////////////////////////////////
// CHostAppApp commands
@


1.6
log
@* CodingGuideLines.txt: added. CppUnit's coding guidelines for portability.

* include/cppunit/portability/CppUnitStack.h: added. wrapper for std::stack.

* include/cppunit/portability/CppUnitSet.h: added. wrapper for std::set.

* include/cppunit/ui/text/TestRunner.h: fixed namespace definition for
  deprecated TestRunner.

* include/cppunit/TestAssert.h:
* src/cppunit/TestAssert.cpp: removed old deprecated functions that did
  not use SourceLine. Moved assertEquals() and assertDoubleEquals() into
  CppUnit namespace.

* src/cppunit/TestFactoryRegistry.cpp: use CppUnitMap instead of std::map.

* src/DllPlugInTester/CommandLineParser.h: use CppUnitDeque instead
  std::deque.

* examples/cppunittest/*.h:
* examples/cppunittest/*.cpp: removed all usage of CppUnitTest namespace.
  Everything is now in global space.

* examples/*/*.h:
* examples/*/*.cpp: replaced usage of CppUnit:: with CPPUNIT_NS::.

* examples/ClockerPlugIn/ClockerModel.h: use CppUnit STL wrapper instead
  of STL container.
@
text
@d65 3
a67 1
    Enable3dControls();         // Call this when using MFC in a shared DLL
@


1.5
log
@* include/cppunitui/: moved to include/cppunit/ui (fix unix install problem).

* doc/cookbook.dox:
* examples/cppunittest/CppUnitTestMain.cpp:
* examples/msvc/CppUnitTestApp/HostApp.cpp:
* examples/msvc/HostApp/HostApp.cpp:
* examples/qt/Main.Cpp:
* examples/src/cppunit/TestRunner.cpp:
* examples/src/msvc6/TestRunner/TestRunner.cpp:
* examples/src/qttestrunner/TestRunner.cpp: updated to use <cppunit/ui/...>
instead of <cppunitui/...> in include directives.

* doc/CppUnit-win.dox: generated documentation give the include path at the
bottom of the page for each class.

* NEWS: added compatibility break for 1.7.10 users.
@
text
@d111 2
a112 2
  CppUnit::MfcUi::TestRunner runner;
  runner.addTest( CppUnit::TestFactoryRegistry::getRegistry().makeTest() );
@


1.4
log
@* doc/cookbook.html: removed. Replaced by cookbook.doc.

* doc/cookbook.dox: added, conversion of cookbook.html to Doxygen format.

* doc/other_documentation.dox: added groups definition.

* doc/Makefile.am: replaced cookbook.html by cookbook.dox

* doc/Doxyfile.in: added predefined CPPUNIT_HAVE_CPP_SOURCE_ANNOTATION.
Replaced cookbook.html by cookbook.dox.

* include/cppunitui/mfc/TestRunner.h: added, extracted from
include/msvc6/testrunner/TestRunner.h. Moved class TestRunner to namespace
CppUnit::MfcUi.

* include/msvc6/testrunner/TestRunner.h: deprecated. A simple typedef to
CppUnit::MfcUi::TestRunner.

* include/textui/TestRuner.h: added, extracted from
include/cppunit/TextTestRunner.h.

* src/cppunit/TextTestRunner.cpp: renamed TestRunner.cpp. Moved into
namespace CppUnit::TextUi.

* src/msvc6/testruner/TestRunner.cpp: moved into namespace CppUnit::MfcUi.

* src/cppunit/CompilerOutputter.cpp: removed printing "- " before
NotEqualException addional message, for consistency between different
TestRunner (Mfc,Text...)

* include/cppunit/Asserter.h:
* include/cppunit/CompilerOutputter.h:
* include/cppunit/Exception.h:
* include/cppunit/NotEqualException.h:
* include/cppunit/Outputter.h:
* include/cppunit/SourceLine.h:
* include/cppunit/TestAssert.h:
* include/cppunit/TestCaller.h:
* include/cppunit/TestFailure.h:
* include/cppunit/TestFixture.h:
* include/cppunit/TestListener.h:
* include/cppunit/TestResult.h:
* include/cppunit/TestResultCollector.h:
* include/cppunit/TestSucessListener.h:
* include/cppunit/TestSuite.h:
* include/cppunit/TextTestProgressListener.h:
* include/cppunit/TextTestRunner.h:
* include/cppunit/XmlOutputter.h:
* include/cppunit/extensions/AutoRegisterSuite.h:
* include/cppunit/extensions/HelperMacros.h:
* include/cppunit/extensions/TestFactoryRegistry.h:
* include/cppunit/extensions/TestSuiteBuilder.h:
* include/cppunit/extensions/TestSuiteFactory.h: doc update. organization
in groups.

* examples/msvc6/CppUnitTestApp/CppUnitTestApp.cpp:
* examples/msvc6/HostApp/HostApp.cpp: updated to use
CppUnit::MfcUi::TestRunner.

* examples/cppunittest/CppUnitTestMain.cpp: updated to use
CppUnit::TextUi::TestRunner.
@
text
@d12 1
a12 1
#include <cppunitui/mfc/TestRunner.h>
@


1.3
log
@* INSTALL-WIN32.txt: updated for MFC Unicode TestRunner.

* src/msvc6/testrunner/TestRunner.dsp: added Unicode configurations.

* src/msvc6/testrunner/ListCtrlSetter.cpp:
* src/msvc6/testrunner/ListCtrlSetter.h: replaced usage of std::string by
CString for easier ansi/unicode switch.

* src/msvc6/testrunner/MsDevCallerListCtrl.cpp:
* src/msvc6/testrunner/TestRunnerDlg.cpp:
* src/msvc6/testrunner/TestRunnerModel.cpp:
* src/msvc6/testrunner/TestRunnerModel.h:
* src/msvc6/testrunner/TreeHierarchyDlg.cpp: made changes to compile with
either ANSI and UNICODE support.

* examples/msvc6/HostApp/HostApp.cpp:
* examples/msvc6/HostApp/HostApp.h:
* examples/msvc6/HostApp/HostAppDoc.cpp:
* examples/msvc6/HostApp/HostAppDoc.h: moved TestRunner execution to
HostApp::RunUnitTests() and removed the MainFrame application window.

* examples/msvc6/HostApp/HostApp.dsp: added Unicode configurations.
@
text
@d12 1
a12 1
#include <msvc6/testrunner/TestRunner.h>
d111 2
a112 2
  TestRunner  runner;
  runner.addTest ( CppUnit::TestFactoryRegistry::getRegistry().makeTest() );
d114 1
a114 1
  runner.run ();    
@


1.2
log
@* examples/msvc6/CppUnitTestApp/CppUnitTestApp.dsp:
moved dll copy from post-build to custom build setting, so that the
dll is copied even if the CppUnitTestApp was not modified.

* examples/msvc6/TestPlugIn/: a new example of test plug in.

* src/msvc6/TestRunner/ListCtrlFormatter.*
* src/msvc6/TestRunner/ListCtrlSetter.*:
added, helper to manipulate list control.

* src/msvc6/TestRunner/TestRunnerDlg.*: change to make the error list
more compact. text moved to string resources. icons added for typ
test tfailure type.

* src/msvc6/TestRunner/MostRecentTests.*: added, classes that will
replace the current implementation of MRU test which make it hard
to subclass the dialog.

* src/msvc6/TestRunner/res/errortype.bmp: added, bitmap with error
types (failure and error).

* src/msvc6/TestPlugInRunner/: A test runner to run test plug in.
Test plug in are DLL that publish a specified plug in interface.
Those DLL are loaded and reloaded by the TestPlugInRunner to run
tests. This remove the need to wrap DLL with a executable to test
them.

* src/cppunit/cppunit.dsp:
removed config.h from project
added Portability.h and config-msvc6.h

* include/cppunit/config-msvc6.h:
undef CPPUNIT_FUNC_STRING_COMPARE_STRING_FIRST
@
text
@d10 5
d88 3
d102 1
d106 11
@


1.1
log
@Merged msvc6 specific TestRunner and example adapted from Michael Feathers
version by Baptiste Lepilleur.
@
text
@d10 1
a10 1

@

