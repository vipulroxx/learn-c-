head	1.2;
access;
symbols
	REL_1_12_1:1.1;
locks; strict;
comment	@// @;


1.2
date	2008.02.21.03.10.04;	author smr99;	state Exp;
branches;
next	1.1;

1.1
date	2007.01.31.05.27.07;	author smr99;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Changes to suppress warnings of gcc -Wall -W -ansi, mainly from patch [1898225].
@
text
@#include <cppunit/TestAssert.h>
#include "CoreSuite.h"
#include "assertion_traitsTest.h"


CPPUNIT_TEST_SUITE_NAMED_REGISTRATION( assertion_traitsTest,
                                       coreSuiteName() );

assertion_traitsTest::assertion_traitsTest()
{
}


void
assertion_traitsTest::test_toString()
{
    CPPUNIT_ASSERT_EQUAL( std::string( "abc" ), 
			  CPPUNIT_NS::assertion_traits<const char*>::toString( "abc" ) );

    CPPUNIT_ASSERT_EQUAL( std::string( "33" ), 
			  CPPUNIT_NS::assertion_traits<int>::toString( 33 ) );

    // Test that assertion_traits<double>::toString() produces 
    // more than the standard 6 digits of precision.
    CPPUNIT_ASSERT_EQUAL( std::string( "33.1" ), 
			  CPPUNIT_NS::assertion_traits<double>::toString( 33.1 ) );
    CPPUNIT_ASSERT_EQUAL( std::string( "33.001" ), 
			  CPPUNIT_NS::assertion_traits<double>::toString( 33.001 ) );
    CPPUNIT_ASSERT_EQUAL( std::string( "33.00001" ), 
			  CPPUNIT_NS::assertion_traits<double>::toString( 33.00001 ) );
    CPPUNIT_ASSERT_EQUAL( std::string( "33.0000001" ), 
			  CPPUNIT_NS::assertion_traits<double>::toString( 33.0000001 ) );
    CPPUNIT_ASSERT_EQUAL( std::string( "33.0000000001" ), 
			  CPPUNIT_NS::assertion_traits<double>::toString( 33.0000000001 ) );
}
@


1.1
log
@Add tests of the precision generated by
assertion_traits<double>::toString().
@
text
@d18 1
a18 1
			  CPPUNIT_NS::assertion_traits<char*>::toString( "abc" ) );
@

