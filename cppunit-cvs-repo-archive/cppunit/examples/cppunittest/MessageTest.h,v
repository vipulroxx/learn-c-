head	1.3;
access;
symbols
	REL_1_12_1:1.3
	REL_1_11_6:1.3
	REL_1_11_4:1.3
	REL_1_11_0:1.3
	TG_CPPUNIT_NO_STREAM_AFTER:1.3
	TG_CPPUNIT_NO_STREAM_BEFORE:1.3
	REL_1_10_2:1.3
	REL_1_10_0:1.3
	REL_1_9_14:1.3
	REL_1_9_12:1.3
	BRANCH_1_9_12:1.3.0.2
	TG_BRANCH_1_9_12:1.3
	TG_BEFORE_HPUX_PLUGIN:1.3
	TG_BEFORE_SUN4_PORT:1.3
	REL_1_9_10:1.3
	TG_AFTER_REMOVE_NOTEQUAL_EXCEPTION:1.1
	TG_BEFORE_REMOVE_NOTEQUAL_EXCEPTION:1.1;
locks; strict;
comment	@ * @;


1.3
date	2002.07.13.10.33.49;	author blep;	state Exp;
branches;
next	1.2;

1.2
date	2002.06.16.18.24.43;	author blep;	state Exp;
branches;
next	1.1;

1.1
date	2002.06.13.15.31.01;	author blep;	state Exp;
branches;
next	;


desc
@@


1.3
log
@* include/cppunit/ui/text/TestRunner.h:
* src/cppunit/TextTestRunner.cpp: Renamed TextUi::TestRunner
  TextTestRunner and moved it to the CppUnit namespace. Added
  a deprecated typedef for compatibility with previous version.

* include/cppunit/ui/text/TextTestRunner.h: added.

* include/cppunit/ui/mfc/TestRunner.h:
* src/cppunit/msvc6/testrunner/TestRunner.cpp: Renamed MfcUi::TestRunner
  MfcTestRunner. Added deprecated typedef for compatibility. Renamed
  TestRunner.cpp to MfcTestRunner.cpp.

* include/cppunit/ui/mfc/MfcTestRunner.h: added.

* include/cppunit/ui/qt/TestRunner.h:
* src/qttestrunner/TestRunner.cpp: renamed QtUi::TestRunner QtTestRunner
  and moved it to CppUnit namespace. Added a deprecated typedef for
  compatibility. Renamed TestRunner.cpp to QtTestRunner.cpp.

* include/cppunit/ui/qt/TestRunner.h:
* src/qttestrunner/TestRunner.h: Moved TestRunner to CppUnit namespace
  and renamed it QtTestRunner. Added deprecated typedef for compatibility.

* include/cppunit/Asserter.h:
* src/cppunit/Asserter.cpp: changed namespace Asserter to a struct and
  made all methods static.

* include/cppunit/extensions/HelperMacros.h:
* include/cppunit/extensions/SourceLine.h:
* include/cppunit/extensions/TestAssert.h:
* include/cppunit/extensions/TestPlugIn.h:
* include/cppunit/Portability.h: changed CPPUNIT_NS(symbol) to a
  symbol macro that expand either to CppUnit or nothing. The symbol is
  no longer a parameter.

* include/cppunit/portability/CppUnitVector.h:
* include/cppunit/portability/CppUnitDeque.h:
* include/cppunit/portability/CppUnitMap.h: added. STL Wrapper for
  compilers that do not support template default argumenent and need
  the allocator to be passed when instantiating STL container.

* examples/cppunittest/*.h:
* examples/cppunittest/*.cpp:
* src/msvc6/testrunner/*.h:
* src/msvc6/testrunner/*.cpp:
* src/msvc6/testpluginrunner/*.h:
* src/msvc6/testpluginrunner/*.cpp:
* src/qttestrunner/*.h:
* src/qttestrunner/*.cpp: replaced occurence of CppUnit:: by CPPUNIT_NS.

* src/cppunit/TestSuite.h:
replaced occurence of std::vector by CppUnitVector.
@
text
@#ifndef MESSAGETEST_H
#define MESSAGETEST_H

#include <cppunit/extensions/HelperMacros.h>
#include <cppunit/Message.h>
#include <stdexcept>


/// Unit tests for MessageTest
class MessageTest : public CPPUNIT_NS::TestFixture
{
  CPPUNIT_TEST_SUITE( MessageTest );
  CPPUNIT_TEST( testDefaultConstructor );
  CPPUNIT_TEST_EXCEPTION( testDetailAtThrowIfBadIndex, std::invalid_argument );
  CPPUNIT_TEST_EXCEPTION( testDetailAtThrowIfBadIndex2, std::invalid_argument );
  CPPUNIT_TEST( testAddDetail );
  CPPUNIT_TEST( testAddDetail2 );
  CPPUNIT_TEST( testAddDetail3 );
  CPPUNIT_TEST( testAddDetailEmptyMessage );
  CPPUNIT_TEST( testAddDetailMessage );
  CPPUNIT_TEST( testSetShortDescription );
  CPPUNIT_TEST( testClearDetails );
  CPPUNIT_TEST( testConstructor );
  CPPUNIT_TEST( testConstructorDetail1 );
  CPPUNIT_TEST( testConstructorDetail2 );
  CPPUNIT_TEST( testConstructorDetail3 );
  CPPUNIT_TEST( testDetailsNone );
  CPPUNIT_TEST( testDetailsSome );
  CPPUNIT_TEST( testEqual );
  CPPUNIT_TEST( testNotEqual );
  CPPUNIT_TEST_SUITE_END();

public:
  MessageTest();

  virtual ~MessageTest();

  void setUp();
  void tearDown();

  void testDefaultConstructor();
  void testDetailAtThrowIfBadIndex();
  void testDetailAtThrowIfBadIndex2();
  void testAddDetail();
  void testAddDetail2();
  void testAddDetail3();
  void testAddDetailEmptyMessage();
  void testAddDetailMessage();
  void testSetShortDescription();
  void testClearDetails();

  void testConstructor();
  void testConstructorDetail1();
  void testConstructorDetail2();
  void testConstructorDetail3();

  void testDetailsNone();
  void testDetailsSome();

  void testEqual();
  void testNotEqual();

private:
  /// Prevents the use of the copy constructor.
  MessageTest( const MessageTest &other );

  /// Prevents the use of the copy operator.
  void operator =( const MessageTest &other );

private:
  CPPUNIT_NS::Message *m_message;
};



#endif  // MESSAGETEST_H
@


1.2
log
@* examples/cppunittest/MessageTest.cpp:
* examples/cppunittest/XmlElement.cpp: added missing include <stdexcept>.
@
text
@d10 1
a10 1
class MessageTest : public CppUnit::TestFixture
d71 1
a71 1
  CppUnit::Message *m_message;
@


1.1
log
@* include/cppunit/Asserter.h:
* src/cppunit/Asserter.cpp: added functions that take a Message as a
  parameter. Existing function have a short description indicating
  an assertion failure.

* include/cppunit/CompilerOuputter.h:
* src/cppunit/CompilerOuputter.cpp: removed printNotEqualMessage() and
  printDefaultMessage(). Updated to use Message.

* include/cppunit/Message.h:
* src/cppunit/Message.cpp: added. Represents a message associated to an
  Exception.

* include/cppunit/Exception.h:
* src/cppunit/Exception.cpp: the message associated to the exception is now
  stored as a Message instead of a string.

* include/cppunit/NotEqualException.cpp: constructs a Message instead of a
  string.

* include/cppunit/TestAssert.h:
* src/cppunit/TestAssert.cpp: updated to use Asserter functions that
  take a message when pertinent (CPPUNIT_FAIL...).

* include/cppunit/TestCaller.h:
* src/cppunit/TestCaller.cpp: exception not caught failure has a better
  short description.

* src/cppunit/TestCase.cpp: better short description when setUp() or
  tearDown() fail.

* src/msvc6/testrunner/TestRunnerDlg.cpp: replace '\n' in failure message
  with space.

* examples/cppunittest/ExceptionTest.cpp:
* examples/cppunittest/NotEqualExceptionTest.cpp:
* examples/cppunittest/TestCallerTest.cpp:
* examples/cppunittest/TestFailureTest.cpp:
* examples/cppunittest/TestResultCollectorTest.h:
* examples/cppunittest/TestResultCollectorTest.cpp:
* examples/cppunittest/TestResultTest.cpp:
* examples/cppunittest/XmlOutputterTest.h:
* examples/cppunittest/XmlOutputterTest.cpp: updated to use Exception/Message.

* examples/cppunittest/MessageTest.h:
* examples/cppunittest/MessageTest.cpp: added. Unit test for Message.
@
text
@d6 1
@

