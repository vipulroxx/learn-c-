head	1.5;
access;
symbols
	REL_1_12_1:1.5
	REL_1_11_6:1.5
	REL_1_11_4:1.5
	REL_1_11_0:1.5
	TG_CPPUNIT_NO_STREAM_AFTER:1.5
	TG_CPPUNIT_NO_STREAM_BEFORE:1.5
	REL_1_10_2:1.5
	REL_1_10_0:1.5
	REL_1_9_14:1.5
	REL_1_9_12:1.5
	BRANCH_1_9_12:1.5.0.2
	TG_BRANCH_1_9_12:1.5
	TG_BEFORE_HPUX_PLUGIN:1.5
	TG_BEFORE_SUN4_PORT:1.5
	REL_1_9_10:1.5
	TG_AFTER_REMOVE_NOTEQUAL_EXCEPTION:1.1
	TG_BEFORE_REMOVE_NOTEQUAL_EXCEPTION:1.1;
locks; strict;
comment	@ * @;


1.5
date	2002.07.14.19.48.31;	author blep;	state Exp;
branches;
next	1.4;

1.4
date	2002.06.16.18.24.43;	author blep;	state Exp;
branches;
next	1.3;

1.3
date	2002.06.16.17.55.58;	author blep;	state Exp;
branches;
next	1.2;

1.2
date	2002.06.14.20.21.00;	author blep;	state Exp;
branches;
next	1.1;

1.1
date	2002.05.23.18.38.38;	author blep;	state Exp;
branches;
next	;


desc
@@


1.5
log
@* CodingGuideLines.txt: added. CppUnit's coding guidelines for portability.

* include/cppunit/portability/CppUnitStack.h: added. wrapper for std::stack.

* include/cppunit/portability/CppUnitSet.h: added. wrapper for std::set.

* include/cppunit/ui/text/TestRunner.h: fixed namespace definition for
  deprecated TestRunner.

* include/cppunit/TestAssert.h:
* src/cppunit/TestAssert.cpp: removed old deprecated functions that did
  not use SourceLine. Moved assertEquals() and assertDoubleEquals() into
  CppUnit namespace.

* src/cppunit/TestFactoryRegistry.cpp: use CppUnitMap instead of std::map.

* src/DllPlugInTester/CommandLineParser.h: use CppUnitDeque instead
  std::deque.

* examples/cppunittest/*.h:
* examples/cppunittest/*.cpp: removed all usage of CppUnitTest namespace.
  Everything is now in global space.

* examples/*/*.h:
* examples/*/*.cpp: replaced usage of CppUnit:: with CPPUNIT_NS::.

* examples/ClockerPlugIn/ClockerModel.h: use CppUnit STL wrapper instead
  of STL container.
@
text
@#ifndef CPPUNITEST_XMLELEMENTTEST_H
#define CPPUNITEST_XMLELEMENTTEST_H

#include <cppunit/extensions/HelperMacros.h>
#include <stdexcept>


/*! Unit tests for XmlElement.
 */
class XmlElementTest : public CPPUNIT_NS::TestFixture
{
  CPPUNIT_TEST_SUITE( XmlElementTest );
  CPPUNIT_TEST( testStringContentConstructor );
  CPPUNIT_TEST( testNumericContentConstructor );
  CPPUNIT_TEST( testSetName );
  CPPUNIT_TEST( testSetStringContent );
  CPPUNIT_TEST( testSetNumericContent );
  CPPUNIT_TEST( testElementCount );
  CPPUNIT_TEST_EXCEPTION( testElementAtNegativeIndexThrow, std::invalid_argument );
  CPPUNIT_TEST_EXCEPTION( testElementAtTooLargeIndexThrow, std::invalid_argument );
  CPPUNIT_TEST( testElementAt );
  CPPUNIT_TEST_EXCEPTION( testElementForThrow, std::invalid_argument );
  CPPUNIT_TEST( testElementFor );

  CPPUNIT_TEST( testEmptyNodeToString );
  CPPUNIT_TEST( testElementWithAttributesToString );
  CPPUNIT_TEST( testEscapedAttributeValueToString );
  CPPUNIT_TEST( testElementToStringEscapeContent );
  CPPUNIT_TEST( testElementWithChildrenToString );
  CPPUNIT_TEST( testElementWithContentToString );
  CPPUNIT_TEST( testElementWithNumericContentToString );
  CPPUNIT_TEST( testElementWithContentAndChildToString );
  CPPUNIT_TEST_SUITE_END();

public:
  /*! Constructs a XmlElementTest object.
   */
  XmlElementTest();

  /// Destructor.
  virtual ~XmlElementTest();

  void setUp();
  void tearDown();

  void testStringContentConstructor();
  void testNumericContentConstructor();
  void testSetName();
  void testSetStringContent();
  void testSetNumericContent();
  void testElementCount();
  void testElementAtNegativeIndexThrow();
  void testElementAtTooLargeIndexThrow();
  void testElementAt();
  void testElementForThrow();
  void testElementFor();

  void testEmptyNodeToString();
  void testElementWithAttributesToString();
  void testEscapedAttributeValueToString();
  void testElementToStringEscapeContent();
  void testElementWithChildrenToString();
  void testElementWithContentToString();
  void testElementWithNumericContentToString();
  void testElementWithContentAndChildToString();

private:
  /// Prevents the use of the copy constructor.
  XmlElementTest( const XmlElementTest &copy );

  /// Prevents the use of the copy operator.
  void operator =( const XmlElementTest &copy );
};



#endif  // CPPUNITEST_XMLELEMENTTEST_H
@


1.4
log
@* examples/cppunittest/MessageTest.cpp:
* examples/cppunittest/XmlElement.cpp: added missing include <stdexcept>.
@
text
@d10 1
a10 1
class XmlElementTest : public CppUnit::TestFixture
@


1.3
log
@* release 1.9.8

* include/cppunit/plugin/TestPlugIn.h: updated documentation.

* include/cppunit/tools/XmlDocument.h: updated documentation.

* include/cppunit/tools/StringTools.h:
* src/cppunit/StringTools.cpp: added split() and wrap() functions.

* include/cppunit/CompilerOutputter.h:
* src/cppunit/CompilerOutputter.cpp: extracted wrap() and
  splitMessageIntoLines() to StringTools.

* include/cppunit/XmlOutputterHook.h:
* src/cppunit/XmlOutputterHook.cpp: removed rooNode parameter from
  beginDocument() and endDocument(). It can be retreive from document.
  Renamed 'node' occurences to 'element'.

* include/cppunit/XmlOutputter.h:
* src/cppunit/XmlOutputter.cpp: updated against
  XmlOutputterHook changes. Renamed 'node' occurences to 'element'.

* examples/ClockerPlugIn/ClockerXmlHook.h:
* examples/ClockerPlugIn/ClockerXmlHook.cpp: updated against
  XmlOutputterHook changes.

* examples/cppunittest/XmlElementTest.h:
* examples/cppunittest/XmlElementTest.cpp: Renamed 'node' occurences
  to 'element'.

* examples/cppunittest/XmlOutputterTest.cpp: updated against
  XmlOutputterHook changes.

* examples/cppunittest/StringToolsTest.h:
* examples/cppunittest/StringToolsTest.cpp: added. Unit tests for
  StringTools. Turn out that VC++ dismiss empty lines in tools output,
  which is the reason why empty lines where not printed in
  CompilerOutputter.
@
text
@d5 1
@


1.2
log
@* include/cppunit/plugin/PlugInManager.h:
* src/cppunit/PlugInManager.cpp: added two methods to use the plug-in
  interface for Xml Outputter hooks.

* include/cppunit/plugin/TestPlugIn.h: added two methods to the plug-in
  interface for Xml Outputter hooks.

* include/cppunit/plugin/TestPlugInAdapter.h:
* src/cppunit/plugin/TestPlugInAdapter.cpp: renamed TestPlugInDefaultImpl.
  Added empty implementation for Xml outputter hook methods.

* include/cppunit/tools/StringTools.h:
* src/cppunit/tools/StringTools.cpp: added. Functions to manipulate string
  (conversion, wrapping...)

* include/cppunit/tools/XmlElement.h:
* src/cppunit/XmlElement.cpp: renamed addNode() to addElement(). Added
  methods to walk and modify XmlElement (for hook). Added documentation.
  Use StringTools.

* include/cppunit/XmlOutputter.h:
* src/cppunit/XmlOutputter.cpp: added hook calls & management.

* include/cppunit/XmlOutputterHook.h:
* src/cppunit/XmlOutputterHook.cpp: added. Hook to customize XML output.

* src/DllPlugInTester/DllPlugInTester.cpp: call plug-in XmlOutputterHook
  when writing XML output. Modified so that memory is freed before
  unloading the test plug-in (caused crash when freeing the XmlDocument).

* examples/ReadMe.txt:
* examples/ClockerPlugIn/ReadMe.txt: added details about the plug-in
  (usage, xml content...)

* examples/ClockerPlugIn/ClockerModel.h:
* examples/ClockerPlugIn/ClockerModel.cpp: extracted from ClockerListener.
  Represents the test hierarchy and tracked time for each test.

* examples/ClockerPlugIn/ClockerListener.h:
* examples/ClockerPlugIn/ClockerListener.cpp: extracted test hierarchy
  tracking to ClockerModel. Replaced the 'flat' view option with a 'text'
  option to print the timed test tree to stdout.

* examples/ClockerPlugIn/ClockerPlugIn.cpp: updated to hook the XML
  output and use the new classes.

* examples/ClockerPlugIn/ClockerXmlHook.h:
* examples/ClockerPlugIn/ClockerXmlHook.cpp: added. XmlOutputterHook to
  includes the timed test hierarchy and test timing in the XML output.

* examples/cppunittest/XmlElementTest.h:
* examples/cppunittest/XmlElementTest.cpp: added new test cases.

* examples/cppunittest/XmlOutputterTest.h:
* examples/cppunittest/XmlOutputterTest.cpp: added tests for
  XmlOutputterHook.
@
text
@d17 1
a17 1
  CPPUNIT_TEST( testNodeCount );
d25 1
a25 1
  CPPUNIT_TEST( testNodeWithAttributesToString );
d27 5
a31 5
  CPPUNIT_TEST( testNodeToStringEscapeContent );
  CPPUNIT_TEST( testNodeWithChildrenToString );
  CPPUNIT_TEST( testNodeWithContentToString );
  CPPUNIT_TEST( testNodeWithNumericContentToString );
  CPPUNIT_TEST( testNodeWithContentAndChildToString );
d50 1
a50 1
  void testNodeCount();
d58 1
a58 1
  void testNodeWithAttributesToString();
d60 5
a64 5
  void testNodeToStringEscapeContent();
  void testNodeWithChildrenToString();
  void testNodeWithContentToString();
  void testNodeWithNumericContentToString();
  void testNodeWithContentAndChildToString();
@


1.1
log
@* include/cppunit/XmlOutputter.h:
* src/cppunit/XmlOutputter.cpp: extracted class XmlOutputter::Node to
XmlElement. Extracted xml 'prolog' generation to XmlDocument.

* include/cppunit/tools/XmlElement.h:
* src/cppunit/tools/XmlElement.cpp: added, extracted from XmlOutputter::Node.

* include/cppunit/tools/XmlDocument.h:
* src/cppunit/tools/XmlDocument.cpp: added, extracted from XmlOutputter. Handle
XML document prolog (encoding & style-sheet) and manage the root element.

* src/DllPlugInTester/DllPlugInTester.cpp: bug fix, flag --xsl was ignored.

* examples/cppunittest/XmlOutputterTest.h:
* examples/cppunittest/XmlOutputterTest.cpp: updated for XmlOuputter changes.
extracted tests for XmlOutputter::Node to XmlElementTest

* examples/cppunittest/XmlElementTest.h:
* examples/cppunittest/XmlElementTest.cpp: added, tests extracted from
XmlOutputterTest.
@
text
@d12 12
d44 12
@

