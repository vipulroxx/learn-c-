head	1.1;
access;
symbols
	REL_1_12_1:1.1
	REL_1_11_6:1.1
	REL_1_11_4:1.1
	REL_1_11_0:1.1
	TG_CPPUNIT_NO_STREAM_AFTER:1.1
	TG_CPPUNIT_NO_STREAM_BEFORE:1.1
	REL_1_10_2:1.1
	REL_1_10_0:1.1
	REL_1_9_14:1.1
	REL_1_9_12:1.1
	BRANCH_1_9_12:1.1.0.4
	TG_BRANCH_1_9_12:1.1
	TG_BEFORE_HPUX_PLUGIN:1.1
	TG_BEFORE_SUN4_PORT:1.1
	REL_1_9_10:1.1
	TG_AFTER_REMOVE_NOTEQUAL_EXCEPTION:1.1
	TG_BEFORE_REMOVE_NOTEQUAL_EXCEPTION:1.1
	REL_1_9_6:1.1
	REL_1_9_4:1.1
	REL_1_9_0:1.1
	REL_1_8_0:1.1
	REL_1_7_8:1.1
	REL_1_7_3:1.1
	REL_1_7_1:1.1
	REL_1_6_2:1.1
	BRANCH_1_6:1.1.0.2
	REL_1_6_1:1.1
	REL_1_6_0:1.1;
locks; strict;
comment	@ * @;


1.1
date	2001.06.11.19.56.23;	author blep;	state Exp;
branches;
next	;


desc
@@


1.1
log
@* examples/cppunittest/TestResultTest.*: renamed TestListenerTest.*

* examples/cppunittest/*: added unit tests for:
HelperMacros, TestAssert, TestCaller, TestCase, TestFailure,
TestResult, TestSuite, TestDecoratorTest, TestSetUp, RepeatedTestTest,
Orthodox, Exception.
@
text
@#ifndef SUBCLASSEDTESTCASE_H
#define SUBCLASSEDTESTCASE_H

#include "BaseTestCase.h"


class SubclassedTestCase : public BaseTestCase
{
  CPPUNIT_TEST_SUB_SUITE( SubclassedTestCase, BaseTestCase );
  CPPUNIT_TEST( testSubclassing );
  CPPUNIT_TEST_SUITE_END();

public:
  SubclassedTestCase();
  virtual ~SubclassedTestCase();

  virtual void setUp();
  virtual void tearDown();

  // Another test to ensure the subclassed test case are in the suite .
  void testSubclassing();

protected:
  // We overload this method to ensure that the testUsingCheckIt in the
  // parent class will fail.
  virtual void checkIt();

private:
  SubclassedTestCase( const SubclassedTestCase &copy );
  void operator =( const SubclassedTestCase &copy );
};



#endif  // SUBCLASSEDTESTCASE_H
@
