head	1.6;
access;
symbols
	TG_BEFORE_MOVING_ASSERT_TO_TESTINFO:1.5
	TG_BEFORE_REMOVING_TESTCONTEXT:1.4
	arelease:1.1.1.1
	avendor:1.1.1;
locks; strict;
comment	@ * @;


1.6
date	2004.11.20.15.06.59;	author blep;	state dead;
branches;
next	1.5;

1.5
date	2004.11.17.21.47.09;	author blep;	state Exp;
branches;
next	1.4;

1.4
date	2004.08.04.06.43.53;	author blep;	state Exp;
branches;
next	1.3;

1.3
date	2004.08.03.22.36.14;	author blep;	state Exp;
branches;
next	1.2;

1.2
date	2004.02.01.16.12.51;	author blep;	state Exp;
branches;
next	1.1;

1.1
date	2004.01.27.20.34.29;	author blep;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2004.01.27.20.34.29;	author blep;	state Exp;
branches;
next	;


desc
@@


1.6
log
@* TestContext: no longer rely on exception to retrieve failure
* TestContext: removed TestListener support since everything is handled by TestInfo
* TestFailureGuard: modified to report fault using TestInfo instead of exception
* TestListener, TestResult, TestRunResult: removed, replaced by TestInfo
* TextTestDriver: fixed bug in result merging (not prefixed with "/result"). Still need work to handle assertion and fault reporting.
@
text
@#ifndef CPPUT_TESTLISTENER_H_INCLUDED
# define CPPUT_TESTLISTENER_H_INCLUDED

# include <cpput/config.h>
# include <cpput/forwards.h>


namespace CppUT {

class CPPUT_API TestListener
{
public:
   virtual ~TestListener()
   {
   }

   //virtual void enterTest( Test &test, TestContext &context )
   //{
   //}

   virtual void processTestResult( TestResult &result, 
                                   TestContext &context )
   {
   }

   //virtual void exitTest( Test &test, TestContext &context )
   //{
   //}
};



} // namespace CppUT



#endif // CPPUT_TESTLISTENER_H_INCLUDED
@


1.5
log
@* started removing TestDriver stuff from CppUnit 2
* Removed Test::run(), Test::totalTestCount and Test::parent
* User can only subclass AbstractTestSuite or AbstractTestCase.
* AbstractTest has been inlined into Test
* Test no longer have parent
* Removed TestListener::enterTest() & TestListener::exitTest()
* Moved responsibility of running TestCase from AbstractTestCase to TestContext::run( AbstractTestCase &test ).
* Removed method related to suite and enter/exit event from TestContext.
* Disabled some unit tests (rely on running test which will change again shortly)
@
text
@@


1.4
log
@* Replaced TestListener::testFailed() with TestListener::processTestResul(). TestResult can be either success or failure and is mutable: the callback can add structured data to the result.
* TestContext::protectTestRun() assumes test succeeded if no failing TestResult were dispatched during the test.
@
text
@d17 3
a19 3
   virtual void enterTest( Test &test, TestContext &context )
   {
   }
d26 3
a28 3
   virtual void exitTest( Test &test, TestContext &context )
   {
   }
@


1.3
log
@* renamed TestFailure to TestResult (can now be a success or a failure)
* renamed testfailure.h to testresult.h
* renamed testresult.cpp to testtestrunresult.cpp
@
text
@d17 1
a17 2
   virtual void testFailed( const TestResult &failure,
                            TestContext &context )
d21 2
a22 1
   virtual void enterTest( Test &test, TestContext &context )
@


1.2
log
@* added /Za setting to project to force conformance to ANSI C++
* fixed issues related to ANSI C++ conformance
* fixed bug in SliceEnumerator copy constructor & added test
@
text
@d17 1
a17 1
   virtual void testFailed( const TestFailure &failure,
@


1.1
log
@Initial revision
@
text
@d37 1
a37 1
#endif // CPPUT_TESTLISTENER_H_INCLUDED@


1.1.1.1
log
@* initial import of cppunit 2
@
text
@@
