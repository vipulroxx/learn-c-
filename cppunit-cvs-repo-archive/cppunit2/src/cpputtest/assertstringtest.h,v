head	1.2;
access;
symbols
	CPPUNIT2_TG_BEFORE_NEW_ASSERTION:1.2
	CPPUNIT2_TG_AFTER_CONSTSTRING:1.1.1.1
	CPPUNIT2_TG_BEFORE_CONSTSTRING:1.1.1.1
	TG_AFTER_REMOVING_TESTCONTEXT:1.1.1.1
	TG_BEFORE_MOVING_ASSERT_TO_TESTINFO:1.1.1.1
	TG_BEFORE_REMOVING_TESTCONTEXT:1.1.1.1
	arelease:1.1.1.1
	avendor:1.1.1;
locks; strict;
comment	@ * @;


1.2
date	2005.11.13.10.12.01;	author blep;	state Exp;
branches;
next	1.1;

1.1
date	2004.01.27.20.34.36;	author blep;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2004.01.27.20.34.36;	author blep;	state Exp;
branches;
next	;


desc
@@


1.2
log
@- renamed include/cpput/assert.h to include/cpput/assertcommon.h. This avoid clash with include <assert.h> in doxygen documentation
- most Impl namespaces are now hidden from documentation using \cond and \endcond.
@
text
@#ifndef CPPUT_ASSERTSTRINGTEST_H_INCLUDED
# define CPPUT_ASSERTSTRINGTEST_H_INCLUDED

# include <cpput/assertcommon.h>
# include <cpput/testfixture.h>


class AssertStringTest : public CppUT::TestFixture
{
public:
   CPPUT_TESTSUITE_BEGIN( AssertStringTest );
   CPPUT_TEST( testStringStartsWith );
   CPPUT_TEST( testStringEndsWith );
   CPPUT_TEST( testStringContains );
   CPPUT_TEST( testStringEquals );
   CPPUT_TEST( testCustomStringTypeHandling );
   CPPUT_TESTSUITE_END();
   
   void setUp();

   void tearDown();

   void testStringStartsWith();
   void testStringEndsWith();
   void testStringContains();
   void testStringEquals();
   void testCustomStringTypeHandling();

private:
};


#endif // CPPUT_ASSERTSTRINGTEST_H_INCLUDED
@


1.1
log
@Initial revision
@
text
@d4 1
a4 1
# include <cpput/assert.h>
@


1.1.1.1
log
@* initial import of cppunit 2
@
text
@@
